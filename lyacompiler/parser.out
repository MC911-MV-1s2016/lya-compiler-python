Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DOWN
    FI
    CCONST
    RCURL
    SINGQUO
    CIRCUMF
    TRUE
    LOWER
    SUCC
    UPPER
    THEN
    WHILE
    PERCASSIGN
    PRED
    OD
    ELSE
    FALSE
    CONCATASSIGN
    LCURL
    TIMESASSIGN
    ARROW
    READ
    NULL
    PLUSASSIGN
    SCONST
    NUM
    DO
    ELSIF
    DBLSLASH
    LENGTH
    EXIT
    BY
    MINUSASSIGN
    RESULT
    IF
    PRINT
    FOR
    DIVIDEASSIGN
    CONCAT
    DBLQUO
    TO
    RETURN

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     declaration_statement -> DCL declaration_list SEMICOL
Rule 9     synonym_statement -> SYN synonym_list SEMICOL
Rule 10    newmode_statement -> TYPE newmode_list SEMICOL
Rule 11    procedure_statement -> label_id COLON procedure_definition SEMICOL
Rule 12    declaration_list -> declaration_list COMMA declaration
Rule 13    declaration_list -> declaration
Rule 14    declaration -> identifier_list mode initialization
Rule 15    declaration -> identifier_list mode
Rule 16    initialization -> ASSIGN expression
Rule 17    synonym_list -> synonym_list COMMA synonym_definition
Rule 18    synonym_list -> synonym_definition
Rule 19    synonym_definition -> identifier_list mode ASSIGN constant_expression
Rule 20    synonym_definition -> identifier_list ASSIGN constant_expression
Rule 21    constant_expression -> expression
Rule 22    newmode_list -> newmode_list COMMA mode_definition
Rule 23    newmode_list -> mode_definition
Rule 24    mode_definition -> identifier_list ASSIGN mode
Rule 25    mode -> mode_name
Rule 26    mode -> discrete_mode
Rule 27    mode -> reference_mode
Rule 28    mode -> composite_mode
Rule 29    discrete_mode -> integer_mode
Rule 30    discrete_mode -> boolean_mode
Rule 31    discrete_mode -> character_mode
Rule 32    discrete_mode -> discrete_range_mode
Rule 33    integer_mode -> INT
Rule 34    boolean_mode -> BOOL
Rule 35    character_mode -> CHAR
Rule 36    discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN
Rule 37    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 38    mode_name -> identifier
Rule 39    discrete_mode_name -> identifier
Rule 40    literal_range -> lower_bound COLON upper_bound
Rule 41    lower_bound -> expression
Rule 42    upper_bound -> expression
Rule 43    reference_mode -> REF mode
Rule 44    composite_mode -> string_mode
Rule 45    composite_mode -> array_mode
Rule 46    string_mode -> CHARS LBRACK string_length RBRACK
Rule 47    string_length -> integer_literal
Rule 48    array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode
Rule 49    index_mode_list -> index_mode_list COMMA index_mode
Rule 50    index_mode_list -> index_mode
Rule 51    index_mode -> discrete_mode
Rule 52    index_mode -> literal_range
Rule 53    element_mode -> mode
Rule 54    identifier_list -> identifier
Rule 55    identifier_list -> identifier_list COMMA identifier
Rule 56    identifier -> ID
Rule 57    integer_literal -> ICONST
Rule 58    expression -> operand0
Rule 59    operand0 -> operand1
Rule 60    operand0 -> operand0 operator1 operand1
Rule 61    operator1 -> relational_operator
Rule 62    operator1 -> membership_operator
Rule 63    relational_operator -> AND
Rule 64    relational_operator -> OR
Rule 65    relational_operator -> EQUALS
Rule 66    relational_operator -> DIF
Rule 67    relational_operator -> GTR
Rule 68    relational_operator -> GEQ
Rule 69    relational_operator -> LSS
Rule 70    relational_operator -> LEQ
Rule 71    membership_operator -> IN
Rule 72    operand1 -> operand2
Rule 73    operand1 -> operand1 operator2 operand2
Rule 74    operator2 -> arithmetic_additive_operator
Rule 75    arithmetic_additive_operator -> PLUS
Rule 76    arithmetic_additive_operator -> MINUS
Rule 77    operand2 -> operand3
Rule 78    operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 79    arithmetic_multiplicative_operator -> TIMES
Rule 80    arithmetic_multiplicative_operator -> DIVIDE
Rule 81    arithmetic_multiplicative_operator -> PERC
Rule 82    operand3 -> monadic_operator operand4
Rule 83    operand3 -> operand4
Rule 84    monadic_operator -> MINUS
Rule 85    monadic_operator -> NOT
Rule 86    operand4 -> ICONST
Rule 87    label_id -> identifier
Rule 88    procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
Rule 89    procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
Rule 90    procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
Rule 91    procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END
Rule 92    procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END
Rule 93    procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END
Rule 94    procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END
Rule 95    procedure_definition -> PROC LPAREN RPAREN SEMICOL END
Rule 96    formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 97    formal_parameter_list -> formal_parameter
Rule 98    formal_parameter -> identifier_list parameter_spec
Rule 99    parameter_spec -> mode parameter_attribute
Rule 100   parameter_spec -> mode
Rule 101   parameter_attribute -> LOC
Rule 102   result_spec -> RETURNS LPAREN mode result_attribute RPAREN
Rule 103   result_spec -> RETURNS LPAREN mode RPAREN
Rule 104   result_attribute -> LOC

Terminals, with rules where they appear

AND                  : 63
ARRAY                : 48
ARROW                : 
ASSIGN               : 16 19 20 24
BOOL                 : 34
BY                   : 
CCONST               : 
CHAR                 : 35
CHARS                : 46
CIRCUMF              : 
COLON                : 11 40
COMMA                : 12 17 22 49 55 96
CONCAT               : 
CONCATASSIGN         : 
DBLQUO               : 
DBLSLASH             : 
DCL                  : 8
DIF                  : 66
DIVIDE               : 80
DIVIDEASSIGN         : 
DO                   : 
DOWN                 : 
ELSE                 : 
ELSIF                : 
END                  : 88 89 90 91 92 93 94 95
EQUALS               : 65
EXIT                 : 
FALSE                : 
FI                   : 
FOR                  : 
GEQ                  : 68
GTR                  : 67
ICONST               : 57 86
ID                   : 56
IF                   : 
IN                   : 71
INT                  : 33
LBRACK               : 46 48
LCURL                : 
LENGTH               : 
LEQ                  : 70
LOC                  : 101 104
LOWER                : 
LPAREN               : 36 37 88 89 90 91 92 93 94 95 102 103
LSS                  : 69
MINUS                : 76 84
MINUSASSIGN          : 
NOT                  : 85
NULL                 : 
NUM                  : 
OD                   : 
OR                   : 64
PERC                 : 81
PERCASSIGN           : 
PLUS                 : 75
PLUSASSIGN           : 
PRED                 : 
PRINT                : 
PROC                 : 88 89 90 91 92 93 94 95
RBRACK               : 46 48
RCURL                : 
READ                 : 
REF                  : 43
RESULT               : 
RETURN               : 
RETURNS              : 102 103
RPAREN               : 36 37 88 89 90 91 92 93 94 95 102 103
SCONST               : 
SEMICOL              : 8 9 10 11 88 89 90 91 92 93 94 95
SINGQUO              : 
SUCC                 : 
SYN                  : 9
THEN                 : 
TIMES                : 79
TIMESASSIGN          : 
TO                   : 
TRUE                 : 
TYPE                 : 10
UPPER                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arithmetic_additive_operator : 74
arithmetic_multiplicative_operator : 78
array_mode           : 45
boolean_mode         : 30
character_mode       : 31
composite_mode       : 28
constant_expression  : 19 20
declaration          : 12 13
declaration_list     : 8 12
declaration_statement : 4
discrete_mode        : 26 37 51
discrete_mode_name   : 36
discrete_range_mode  : 32
element_mode         : 48
expression           : 16 21 41 42
formal_parameter     : 96 97
formal_parameter_list : 88 89 90 92 96
identifier           : 38 39 54 55 87
identifier_list      : 14 15 19 20 24 55 98
index_mode           : 49 50
index_mode_list      : 48 49
initialization       : 14
integer_literal      : 47
integer_mode         : 29
label_id             : 11
literal_range        : 36 37 52
lower_bound          : 40
membership_operator  : 62
mode                 : 14 15 19 24 43 53 99 100 102 103
mode_definition      : 22 23
mode_name            : 25
monadic_operator     : 82
newmode_list         : 10 22
newmode_statement    : 6
operand0             : 58 60
operand1             : 59 60 73
operand2             : 72 73 78
operand3             : 77 78
operand4             : 82 83
operator1            : 60
operator2            : 73
parameter_attribute  : 99
parameter_spec       : 98
procedure_definition : 11
procedure_statement  : 7
program              : 0
reference_mode       : 27
relational_operator  : 61
result_attribute     : 102
result_spec          : 88 89 91 93
statement            : 2 3
statement_list       : 1 2 88 90 91 94
string_length        : 46
string_mode          : 44
synonym_definition   : 17 18
synonym_list         : 9 17
synonym_statement    : 5
upper_bound          : 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    program                        shift and go to state 7
    label_id                       shift and go to state 3
    statement_list                 shift and go to state 4
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 10
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 1

    (9) synonym_statement -> SYN . synonym_list SEMICOL
    (17) synonym_list -> . synonym_list COMMA synonym_definition
    (18) synonym_list -> . synonym_definition
    (19) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (20) synonym_definition -> . identifier_list ASSIGN constant_expression
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    identifier                     shift and go to state 14
    identifier_list                shift and go to state 15
    synonym_definition             shift and go to state 16
    synonym_list                   shift and go to state 17

state 2

    (10) newmode_statement -> TYPE . newmode_list SEMICOL
    (22) newmode_list -> . newmode_list COMMA mode_definition
    (23) newmode_list -> . mode_definition
    (24) mode_definition -> . identifier_list ASSIGN mode
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    newmode_list                   shift and go to state 18
    mode_definition                shift and go to state 19
    identifier_list                shift and go to state 20
    identifier                     shift and go to state 14

state 3

    (11) procedure_statement -> label_id . COLON procedure_definition SEMICOL

    COLON           shift and go to state 21


state 4

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 22
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 5

    (4) statement -> declaration_statement .

    END             reduce using rule 4 (statement -> declaration_statement .)
    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)


state 6

    (87) label_id -> identifier .

    COLON           reduce using rule 87 (label_id -> identifier .)


state 7

    (0) S' -> program .



state 8

    (7) statement -> procedure_statement .

    END             reduce using rule 7 (statement -> procedure_statement .)
    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)


state 9

    (8) declaration_statement -> DCL . declaration_list SEMICOL
    (12) declaration_list -> . declaration_list COMMA declaration
    (13) declaration_list -> . declaration
    (14) declaration -> . identifier_list mode initialization
    (15) declaration -> . identifier_list mode
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    identifier                     shift and go to state 14
    identifier_list                shift and go to state 23
    declaration_list               shift and go to state 24
    declaration                    shift and go to state 25

state 10

    (3) statement_list -> statement .

    END             reduce using rule 3 (statement_list -> statement .)
    DCL             reduce using rule 3 (statement_list -> statement .)
    SYN             reduce using rule 3 (statement_list -> statement .)
    TYPE            reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 11

    (6) statement -> newmode_statement .

    END             reduce using rule 6 (statement -> newmode_statement .)
    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)


state 12

    (5) statement -> synonym_statement .

    END             reduce using rule 5 (statement -> synonym_statement .)
    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)


state 13

    (56) identifier -> ID .

    COLON           reduce using rule 56 (identifier -> ID .)
    RPAREN          reduce using rule 56 (identifier -> ID .)
    LOC             reduce using rule 56 (identifier -> ID .)
    LPAREN          reduce using rule 56 (identifier -> ID .)
    ASSIGN          reduce using rule 56 (identifier -> ID .)
    COMMA           reduce using rule 56 (identifier -> ID .)
    REF             reduce using rule 56 (identifier -> ID .)
    ID              reduce using rule 56 (identifier -> ID .)
    INT             reduce using rule 56 (identifier -> ID .)
    BOOL            reduce using rule 56 (identifier -> ID .)
    CHAR            reduce using rule 56 (identifier -> ID .)
    CHARS           reduce using rule 56 (identifier -> ID .)
    ARRAY           reduce using rule 56 (identifier -> ID .)
    SEMICOL         reduce using rule 56 (identifier -> ID .)


state 14

    (54) identifier_list -> identifier .

    COMMA           reduce using rule 54 (identifier_list -> identifier .)
    REF             reduce using rule 54 (identifier_list -> identifier .)
    ID              reduce using rule 54 (identifier_list -> identifier .)
    INT             reduce using rule 54 (identifier_list -> identifier .)
    BOOL            reduce using rule 54 (identifier_list -> identifier .)
    CHAR            reduce using rule 54 (identifier_list -> identifier .)
    CHARS           reduce using rule 54 (identifier_list -> identifier .)
    ARRAY           reduce using rule 54 (identifier_list -> identifier .)
    ASSIGN          reduce using rule 54 (identifier_list -> identifier .)


state 15

    (19) synonym_definition -> identifier_list . mode ASSIGN constant_expression
    (20) synonym_definition -> identifier_list . ASSIGN constant_expression
    (55) identifier_list -> identifier_list . COMMA identifier
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    ASSIGN          shift and go to state 41
    COMMA           shift and go to state 39
    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    string_mode                    shift and go to state 29
    character_mode                 shift and go to state 36
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    mode                           shift and go to state 31
    identifier                     shift and go to state 40
    discrete_mode                  shift and go to state 42
    mode_name                      shift and go to state 32
    discrete_range_mode            shift and go to state 44
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 16

    (18) synonym_list -> synonym_definition .

    SEMICOL         reduce using rule 18 (synonym_list -> synonym_definition .)
    COMMA           reduce using rule 18 (synonym_list -> synonym_definition .)


state 17

    (9) synonym_statement -> SYN synonym_list . SEMICOL
    (17) synonym_list -> synonym_list . COMMA synonym_definition

    SEMICOL         shift and go to state 48
    COMMA           shift and go to state 47


state 18

    (10) newmode_statement -> TYPE newmode_list . SEMICOL
    (22) newmode_list -> newmode_list . COMMA mode_definition

    SEMICOL         shift and go to state 50
    COMMA           shift and go to state 49


state 19

    (23) newmode_list -> mode_definition .

    SEMICOL         reduce using rule 23 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 23 (newmode_list -> mode_definition .)


state 20

    (24) mode_definition -> identifier_list . ASSIGN mode
    (55) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 51
    COMMA           shift and go to state 39


state 21

    (11) procedure_statement -> label_id COLON . procedure_definition SEMICOL
    (88) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (89) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (90) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (91) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL statement_list END
    (92) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL END
    (93) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL END
    (94) procedure_definition -> . PROC LPAREN RPAREN SEMICOL statement_list END
    (95) procedure_definition -> . PROC LPAREN RPAREN SEMICOL END

    PROC            shift and go to state 53

    procedure_definition           shift and go to state 52

state 22

    (2) statement_list -> statement_list statement .

    END             reduce using rule 2 (statement_list -> statement_list statement .)
    DCL             reduce using rule 2 (statement_list -> statement_list statement .)
    SYN             reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 23

    (14) declaration -> identifier_list . mode initialization
    (15) declaration -> identifier_list . mode
    (55) identifier_list -> identifier_list . COMMA identifier
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    COMMA           shift and go to state 39
    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    string_mode                    shift and go to state 29
    character_mode                 shift and go to state 36
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    discrete_mode                  shift and go to state 42
    mode                           shift and go to state 54
    identifier                     shift and go to state 40
    mode_name                      shift and go to state 32
    discrete_range_mode            shift and go to state 44
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 24

    (8) declaration_statement -> DCL declaration_list . SEMICOL
    (12) declaration_list -> declaration_list . COMMA declaration

    SEMICOL         shift and go to state 56
    COMMA           shift and go to state 55


state 25

    (13) declaration_list -> declaration .

    SEMICOL         reduce using rule 13 (declaration_list -> declaration .)
    COMMA           reduce using rule 13 (declaration_list -> declaration .)


state 26

    (33) integer_mode -> INT .

    LPAREN          reduce using rule 33 (integer_mode -> INT .)
    SEMICOL         reduce using rule 33 (integer_mode -> INT .)
    COMMA           reduce using rule 33 (integer_mode -> INT .)
    ASSIGN          reduce using rule 33 (integer_mode -> INT .)
    RPAREN          reduce using rule 33 (integer_mode -> INT .)
    LOC             reduce using rule 33 (integer_mode -> INT .)
    RBRACK          reduce using rule 33 (integer_mode -> INT .)


state 27

    (36) discrete_range_mode -> discrete_mode_name . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 57


state 28

    (27) mode -> reference_mode .

    ASSIGN          reduce using rule 27 (mode -> reference_mode .)
    SEMICOL         reduce using rule 27 (mode -> reference_mode .)
    COMMA           reduce using rule 27 (mode -> reference_mode .)
    LOC             reduce using rule 27 (mode -> reference_mode .)
    RPAREN          reduce using rule 27 (mode -> reference_mode .)


state 29

    (44) composite_mode -> string_mode .

    LOC             reduce using rule 44 (composite_mode -> string_mode .)
    RPAREN          reduce using rule 44 (composite_mode -> string_mode .)
    COMMA           reduce using rule 44 (composite_mode -> string_mode .)
    SEMICOL         reduce using rule 44 (composite_mode -> string_mode .)
    ASSIGN          reduce using rule 44 (composite_mode -> string_mode .)


state 30

    (30) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 30 (discrete_mode -> boolean_mode .)
    RBRACK          reduce using rule 30 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 30 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 30 (discrete_mode -> boolean_mode .)
    SEMICOL         reduce using rule 30 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 30 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 30 (discrete_mode -> boolean_mode .)


state 31

    (19) synonym_definition -> identifier_list mode . ASSIGN constant_expression

    ASSIGN          shift and go to state 58


state 32

    (25) mode -> mode_name .

    ASSIGN          reduce using rule 25 (mode -> mode_name .)
    SEMICOL         reduce using rule 25 (mode -> mode_name .)
    COMMA           reduce using rule 25 (mode -> mode_name .)
    LOC             reduce using rule 25 (mode -> mode_name .)
    RPAREN          reduce using rule 25 (mode -> mode_name .)


state 33

    (43) reference_mode -> REF . mode
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    character_mode                 shift and go to state 36
    string_mode                    shift and go to state 29
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    mode                           shift and go to state 59
    identifier                     shift and go to state 40
    discrete_mode                  shift and go to state 42
    mode_name                      shift and go to state 32
    discrete_range_mode            shift and go to state 44
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 34

    (46) string_mode -> CHARS . LBRACK string_length RBRACK

    LBRACK          shift and go to state 60


state 35

    (35) character_mode -> CHAR .

    LPAREN          reduce using rule 35 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 35 (character_mode -> CHAR .)
    SEMICOL         reduce using rule 35 (character_mode -> CHAR .)
    COMMA           reduce using rule 35 (character_mode -> CHAR .)
    LOC             reduce using rule 35 (character_mode -> CHAR .)
    RPAREN          reduce using rule 35 (character_mode -> CHAR .)
    RBRACK          reduce using rule 35 (character_mode -> CHAR .)


state 36

    (31) discrete_mode -> character_mode .

    LPAREN          reduce using rule 31 (discrete_mode -> character_mode .)
    RBRACK          reduce using rule 31 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 31 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 31 (discrete_mode -> character_mode .)
    SEMICOL         reduce using rule 31 (discrete_mode -> character_mode .)
    LOC             reduce using rule 31 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 31 (discrete_mode -> character_mode .)


state 37

    (34) boolean_mode -> BOOL .

    LPAREN          reduce using rule 34 (boolean_mode -> BOOL .)
    RBRACK          reduce using rule 34 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 34 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 34 (boolean_mode -> BOOL .)
    SEMICOL         reduce using rule 34 (boolean_mode -> BOOL .)
    LOC             reduce using rule 34 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 34 (boolean_mode -> BOOL .)


state 38

    (28) mode -> composite_mode .

    ASSIGN          reduce using rule 28 (mode -> composite_mode .)
    SEMICOL         reduce using rule 28 (mode -> composite_mode .)
    COMMA           reduce using rule 28 (mode -> composite_mode .)
    LOC             reduce using rule 28 (mode -> composite_mode .)
    RPAREN          reduce using rule 28 (mode -> composite_mode .)


state 39

    (55) identifier_list -> identifier_list COMMA . identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    identifier                     shift and go to state 61

state 40

    (38) mode_name -> identifier .
    (39) discrete_mode_name -> identifier .

    ASSIGN          reduce using rule 38 (mode_name -> identifier .)
    SEMICOL         reduce using rule 38 (mode_name -> identifier .)
    COMMA           reduce using rule 38 (mode_name -> identifier .)
    LOC             reduce using rule 38 (mode_name -> identifier .)
    RPAREN          reduce using rule 38 (mode_name -> identifier .)
    LPAREN          reduce using rule 39 (discrete_mode_name -> identifier .)


state 41

    (20) synonym_definition -> identifier_list ASSIGN . constant_expression
    (21) constant_expression -> . expression
    (58) expression -> . operand0
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand1                       shift and go to state 64
    monadic_operator               shift and go to state 66
    constant_expression            shift and go to state 68
    expression                     shift and go to state 67
    operand3                       shift and go to state 70
    operand2                       shift and go to state 72
    operand0                       shift and go to state 71

state 42

    (26) mode -> discrete_mode .
    (37) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 26 (mode -> discrete_mode .)
    SEMICOL         reduce using rule 26 (mode -> discrete_mode .)
    COMMA           reduce using rule 26 (mode -> discrete_mode .)
    LOC             reduce using rule 26 (mode -> discrete_mode .)
    RPAREN          reduce using rule 26 (mode -> discrete_mode .)
    LPAREN          shift and go to state 73


state 43

    (48) array_mode -> ARRAY . LBRACK index_mode_list RBRACK element_mode

    LBRACK          shift and go to state 74


state 44

    (32) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> discrete_range_mode .)
    RBRACK          reduce using rule 32 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> discrete_range_mode .)
    SEMICOL         reduce using rule 32 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 32 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> discrete_range_mode .)


state 45

    (29) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 29 (discrete_mode -> integer_mode .)
    RBRACK          reduce using rule 29 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 29 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 29 (discrete_mode -> integer_mode .)
    SEMICOL         reduce using rule 29 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 29 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 29 (discrete_mode -> integer_mode .)


state 46

    (45) composite_mode -> array_mode .

    LOC             reduce using rule 45 (composite_mode -> array_mode .)
    RPAREN          reduce using rule 45 (composite_mode -> array_mode .)
    COMMA           reduce using rule 45 (composite_mode -> array_mode .)
    SEMICOL         reduce using rule 45 (composite_mode -> array_mode .)
    ASSIGN          reduce using rule 45 (composite_mode -> array_mode .)


state 47

    (17) synonym_list -> synonym_list COMMA . synonym_definition
    (19) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (20) synonym_definition -> . identifier_list ASSIGN constant_expression
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    identifier                     shift and go to state 14
    identifier_list                shift and go to state 15
    synonym_definition             shift and go to state 75

state 48

    (9) synonym_statement -> SYN synonym_list SEMICOL .

    END             reduce using rule 9 (synonym_statement -> SYN synonym_list SEMICOL .)
    DCL             reduce using rule 9 (synonym_statement -> SYN synonym_list SEMICOL .)
    SYN             reduce using rule 9 (synonym_statement -> SYN synonym_list SEMICOL .)
    TYPE            reduce using rule 9 (synonym_statement -> SYN synonym_list SEMICOL .)
    ID              reduce using rule 9 (synonym_statement -> SYN synonym_list SEMICOL .)
    $end            reduce using rule 9 (synonym_statement -> SYN synonym_list SEMICOL .)


state 49

    (22) newmode_list -> newmode_list COMMA . mode_definition
    (24) mode_definition -> . identifier_list ASSIGN mode
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    mode_definition                shift and go to state 76
    identifier_list                shift and go to state 20
    identifier                     shift and go to state 14

state 50

    (10) newmode_statement -> TYPE newmode_list SEMICOL .

    END             reduce using rule 10 (newmode_statement -> TYPE newmode_list SEMICOL .)
    DCL             reduce using rule 10 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SYN             reduce using rule 10 (newmode_statement -> TYPE newmode_list SEMICOL .)
    TYPE            reduce using rule 10 (newmode_statement -> TYPE newmode_list SEMICOL .)
    ID              reduce using rule 10 (newmode_statement -> TYPE newmode_list SEMICOL .)
    $end            reduce using rule 10 (newmode_statement -> TYPE newmode_list SEMICOL .)


state 51

    (24) mode_definition -> identifier_list ASSIGN . mode
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    string_mode                    shift and go to state 29
    character_mode                 shift and go to state 36
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    mode                           shift and go to state 77
    identifier                     shift and go to state 40
    discrete_mode                  shift and go to state 42
    mode_name                      shift and go to state 32
    discrete_range_mode            shift and go to state 44
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 52

    (11) procedure_statement -> label_id COLON procedure_definition . SEMICOL

    SEMICOL         shift and go to state 78


state 53

    (88) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (89) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (90) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (91) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL statement_list END
    (92) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL END
    (93) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL END
    (94) procedure_definition -> PROC . LPAREN RPAREN SEMICOL statement_list END
    (95) procedure_definition -> PROC . LPAREN RPAREN SEMICOL END

    LPAREN          shift and go to state 79


state 54

    (14) declaration -> identifier_list mode . initialization
    (15) declaration -> identifier_list mode .
    (16) initialization -> . ASSIGN expression

    SEMICOL         reduce using rule 15 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 15 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 81

    initialization                 shift and go to state 80

state 55

    (12) declaration_list -> declaration_list COMMA . declaration
    (14) declaration -> . identifier_list mode initialization
    (15) declaration -> . identifier_list mode
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    identifier                     shift and go to state 14
    identifier_list                shift and go to state 23
    declaration                    shift and go to state 82

state 56

    (8) declaration_statement -> DCL declaration_list SEMICOL .

    DCL             reduce using rule 8 (declaration_statement -> DCL declaration_list SEMICOL .)
    SYN             reduce using rule 8 (declaration_statement -> DCL declaration_list SEMICOL .)
    TYPE            reduce using rule 8 (declaration_statement -> DCL declaration_list SEMICOL .)
    ID              reduce using rule 8 (declaration_statement -> DCL declaration_list SEMICOL .)
    $end            reduce using rule 8 (declaration_statement -> DCL declaration_list SEMICOL .)
    END             reduce using rule 8 (declaration_statement -> DCL declaration_list SEMICOL .)


state 57

    (36) discrete_range_mode -> discrete_mode_name LPAREN . literal_range RPAREN
    (40) literal_range -> . lower_bound COLON upper_bound
    (41) lower_bound -> . expression
    (58) expression -> . operand0
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand1                       shift and go to state 64
    monadic_operator               shift and go to state 66
    expression                     shift and go to state 83
    lower_bound                    shift and go to state 84
    operand3                       shift and go to state 70
    literal_range                  shift and go to state 85
    operand0                       shift and go to state 71
    operand2                       shift and go to state 72

state 58

    (19) synonym_definition -> identifier_list mode ASSIGN . constant_expression
    (21) constant_expression -> . expression
    (58) expression -> . operand0
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand1                       shift and go to state 64
    monadic_operator               shift and go to state 66
    expression                     shift and go to state 67
    constant_expression            shift and go to state 86
    operand3                       shift and go to state 70
    operand2                       shift and go to state 72
    operand0                       shift and go to state 71

state 59

    (43) reference_mode -> REF mode .

    ASSIGN          reduce using rule 43 (reference_mode -> REF mode .)
    SEMICOL         reduce using rule 43 (reference_mode -> REF mode .)
    COMMA           reduce using rule 43 (reference_mode -> REF mode .)
    LOC             reduce using rule 43 (reference_mode -> REF mode .)
    RPAREN          reduce using rule 43 (reference_mode -> REF mode .)


state 60

    (46) string_mode -> CHARS LBRACK . string_length RBRACK
    (47) string_length -> . integer_literal
    (57) integer_literal -> . ICONST

    ICONST          shift and go to state 88

    integer_literal                shift and go to state 87
    string_length                  shift and go to state 89

state 61

    (55) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)
    ASSIGN          reduce using rule 55 (identifier_list -> identifier_list COMMA identifier .)


state 62

    (85) monadic_operator -> NOT .

    ICONST          reduce using rule 85 (monadic_operator -> NOT .)


state 63

    (83) operand3 -> operand4 .

    TIMES           reduce using rule 83 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 83 (operand3 -> operand4 .)
    PERC            reduce using rule 83 (operand3 -> operand4 .)
    PLUS            reduce using rule 83 (operand3 -> operand4 .)
    MINUS           reduce using rule 83 (operand3 -> operand4 .)
    AND             reduce using rule 83 (operand3 -> operand4 .)
    OR              reduce using rule 83 (operand3 -> operand4 .)
    EQUALS          reduce using rule 83 (operand3 -> operand4 .)
    DIF             reduce using rule 83 (operand3 -> operand4 .)
    GTR             reduce using rule 83 (operand3 -> operand4 .)
    GEQ             reduce using rule 83 (operand3 -> operand4 .)
    LSS             reduce using rule 83 (operand3 -> operand4 .)
    LEQ             reduce using rule 83 (operand3 -> operand4 .)
    IN              reduce using rule 83 (operand3 -> operand4 .)
    COLON           reduce using rule 83 (operand3 -> operand4 .)
    SEMICOL         reduce using rule 83 (operand3 -> operand4 .)
    COMMA           reduce using rule 83 (operand3 -> operand4 .)
    RPAREN          reduce using rule 83 (operand3 -> operand4 .)
    RBRACK          reduce using rule 83 (operand3 -> operand4 .)


state 64

    (59) operand0 -> operand1 .
    (73) operand1 -> operand1 . operator2 operand2
    (74) operator2 -> . arithmetic_additive_operator
    (75) arithmetic_additive_operator -> . PLUS
    (76) arithmetic_additive_operator -> . MINUS

    AND             reduce using rule 59 (operand0 -> operand1 .)
    OR              reduce using rule 59 (operand0 -> operand1 .)
    EQUALS          reduce using rule 59 (operand0 -> operand1 .)
    DIF             reduce using rule 59 (operand0 -> operand1 .)
    GTR             reduce using rule 59 (operand0 -> operand1 .)
    GEQ             reduce using rule 59 (operand0 -> operand1 .)
    LSS             reduce using rule 59 (operand0 -> operand1 .)
    LEQ             reduce using rule 59 (operand0 -> operand1 .)
    IN              reduce using rule 59 (operand0 -> operand1 .)
    COLON           reduce using rule 59 (operand0 -> operand1 .)
    SEMICOL         reduce using rule 59 (operand0 -> operand1 .)
    COMMA           reduce using rule 59 (operand0 -> operand1 .)
    RPAREN          reduce using rule 59 (operand0 -> operand1 .)
    RBRACK          reduce using rule 59 (operand0 -> operand1 .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 92

    arithmetic_additive_operator   shift and go to state 93
    operator2                      shift and go to state 91

state 65

    (86) operand4 -> ICONST .

    TIMES           reduce using rule 86 (operand4 -> ICONST .)
    DIVIDE          reduce using rule 86 (operand4 -> ICONST .)
    PERC            reduce using rule 86 (operand4 -> ICONST .)
    PLUS            reduce using rule 86 (operand4 -> ICONST .)
    MINUS           reduce using rule 86 (operand4 -> ICONST .)
    AND             reduce using rule 86 (operand4 -> ICONST .)
    OR              reduce using rule 86 (operand4 -> ICONST .)
    EQUALS          reduce using rule 86 (operand4 -> ICONST .)
    DIF             reduce using rule 86 (operand4 -> ICONST .)
    GTR             reduce using rule 86 (operand4 -> ICONST .)
    GEQ             reduce using rule 86 (operand4 -> ICONST .)
    LSS             reduce using rule 86 (operand4 -> ICONST .)
    LEQ             reduce using rule 86 (operand4 -> ICONST .)
    IN              reduce using rule 86 (operand4 -> ICONST .)
    RPAREN          reduce using rule 86 (operand4 -> ICONST .)
    RBRACK          reduce using rule 86 (operand4 -> ICONST .)
    COMMA           reduce using rule 86 (operand4 -> ICONST .)
    SEMICOL         reduce using rule 86 (operand4 -> ICONST .)
    COLON           reduce using rule 86 (operand4 -> ICONST .)


state 66

    (82) operand3 -> monadic_operator . operand4
    (86) operand4 -> . ICONST

    ICONST          shift and go to state 65

    operand4                       shift and go to state 94

state 67

    (21) constant_expression -> expression .

    SEMICOL         reduce using rule 21 (constant_expression -> expression .)
    COMMA           reduce using rule 21 (constant_expression -> expression .)


state 68

    (20) synonym_definition -> identifier_list ASSIGN constant_expression .

    SEMICOL         reduce using rule 20 (synonym_definition -> identifier_list ASSIGN constant_expression .)
    COMMA           reduce using rule 20 (synonym_definition -> identifier_list ASSIGN constant_expression .)


state 69

    (84) monadic_operator -> MINUS .

    ICONST          reduce using rule 84 (monadic_operator -> MINUS .)


state 70

    (77) operand2 -> operand3 .

    TIMES           reduce using rule 77 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 77 (operand2 -> operand3 .)
    PERC            reduce using rule 77 (operand2 -> operand3 .)
    PLUS            reduce using rule 77 (operand2 -> operand3 .)
    MINUS           reduce using rule 77 (operand2 -> operand3 .)
    AND             reduce using rule 77 (operand2 -> operand3 .)
    OR              reduce using rule 77 (operand2 -> operand3 .)
    EQUALS          reduce using rule 77 (operand2 -> operand3 .)
    DIF             reduce using rule 77 (operand2 -> operand3 .)
    GTR             reduce using rule 77 (operand2 -> operand3 .)
    GEQ             reduce using rule 77 (operand2 -> operand3 .)
    LSS             reduce using rule 77 (operand2 -> operand3 .)
    LEQ             reduce using rule 77 (operand2 -> operand3 .)
    IN              reduce using rule 77 (operand2 -> operand3 .)
    COLON           reduce using rule 77 (operand2 -> operand3 .)
    RPAREN          reduce using rule 77 (operand2 -> operand3 .)
    RBRACK          reduce using rule 77 (operand2 -> operand3 .)
    COMMA           reduce using rule 77 (operand2 -> operand3 .)
    SEMICOL         reduce using rule 77 (operand2 -> operand3 .)


state 71

    (58) expression -> operand0 .
    (60) operand0 -> operand0 . operator1 operand1
    (61) operator1 -> . relational_operator
    (62) operator1 -> . membership_operator
    (63) relational_operator -> . AND
    (64) relational_operator -> . OR
    (65) relational_operator -> . EQUALS
    (66) relational_operator -> . DIF
    (67) relational_operator -> . GTR
    (68) relational_operator -> . GEQ
    (69) relational_operator -> . LSS
    (70) relational_operator -> . LEQ
    (71) membership_operator -> . IN

    SEMICOL         reduce using rule 58 (expression -> operand0 .)
    COMMA           reduce using rule 58 (expression -> operand0 .)
    COLON           reduce using rule 58 (expression -> operand0 .)
    RPAREN          reduce using rule 58 (expression -> operand0 .)
    RBRACK          reduce using rule 58 (expression -> operand0 .)
    AND             shift and go to state 98
    OR              shift and go to state 102
    EQUALS          shift and go to state 100
    DIF             shift and go to state 105
    GTR             shift and go to state 101
    GEQ             shift and go to state 103
    LSS             shift and go to state 104
    LEQ             shift and go to state 95
    IN              shift and go to state 96

    membership_operator            shift and go to state 99
    operator1                      shift and go to state 97
    relational_operator            shift and go to state 106

state 72

    (72) operand1 -> operand2 .
    (78) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (79) arithmetic_multiplicative_operator -> . TIMES
    (80) arithmetic_multiplicative_operator -> . DIVIDE
    (81) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 72 (operand1 -> operand2 .)
    MINUS           reduce using rule 72 (operand1 -> operand2 .)
    AND             reduce using rule 72 (operand1 -> operand2 .)
    OR              reduce using rule 72 (operand1 -> operand2 .)
    EQUALS          reduce using rule 72 (operand1 -> operand2 .)
    DIF             reduce using rule 72 (operand1 -> operand2 .)
    GTR             reduce using rule 72 (operand1 -> operand2 .)
    GEQ             reduce using rule 72 (operand1 -> operand2 .)
    LSS             reduce using rule 72 (operand1 -> operand2 .)
    LEQ             reduce using rule 72 (operand1 -> operand2 .)
    IN              reduce using rule 72 (operand1 -> operand2 .)
    COLON           reduce using rule 72 (operand1 -> operand2 .)
    SEMICOL         reduce using rule 72 (operand1 -> operand2 .)
    COMMA           reduce using rule 72 (operand1 -> operand2 .)
    RPAREN          reduce using rule 72 (operand1 -> operand2 .)
    RBRACK          reduce using rule 72 (operand1 -> operand2 .)
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 109
    PERC            shift and go to state 110

    arithmetic_multiplicative_operator shift and go to state 108

state 73

    (37) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (40) literal_range -> . lower_bound COLON upper_bound
    (41) lower_bound -> . expression
    (58) expression -> . operand0
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand1                       shift and go to state 64
    monadic_operator               shift and go to state 66
    expression                     shift and go to state 83
    lower_bound                    shift and go to state 84
    operand3                       shift and go to state 70
    literal_range                  shift and go to state 111
    operand0                       shift and go to state 71
    operand2                       shift and go to state 72

state 74

    (48) array_mode -> ARRAY LBRACK . index_mode_list RBRACK element_mode
    (49) index_mode_list -> . index_mode_list COMMA index_mode
    (50) index_mode_list -> . index_mode
    (51) index_mode -> . discrete_mode
    (52) index_mode -> . literal_range
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (40) literal_range -> . lower_bound COLON upper_bound
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (41) lower_bound -> . expression
    (39) discrete_mode_name -> . identifier
    (58) expression -> . operand0
    (56) identifier -> . ID
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    ID              shift and go to state 13
    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    character_mode                 shift and go to state 36
    boolean_mode                   shift and go to state 30
    index_mode                     shift and go to state 112
    expression                     shift and go to state 83
    lower_bound                    shift and go to state 84
    index_mode_list                shift and go to state 113
    literal_range                  shift and go to state 114
    operand0                       shift and go to state 71
    operand2                       shift and go to state 72
    operand4                       shift and go to state 63
    operand1                       shift and go to state 64
    discrete_mode_name             shift and go to state 27
    integer_mode                   shift and go to state 45
    monadic_operator               shift and go to state 66
    identifier                     shift and go to state 115
    discrete_mode                  shift and go to state 116
    discrete_range_mode            shift and go to state 44
    operand3                       shift and go to state 70

state 75

    (17) synonym_list -> synonym_list COMMA synonym_definition .

    SEMICOL         reduce using rule 17 (synonym_list -> synonym_list COMMA synonym_definition .)
    COMMA           reduce using rule 17 (synonym_list -> synonym_list COMMA synonym_definition .)


state 76

    (22) newmode_list -> newmode_list COMMA mode_definition .

    SEMICOL         reduce using rule 22 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 22 (newmode_list -> newmode_list COMMA mode_definition .)


state 77

    (24) mode_definition -> identifier_list ASSIGN mode .

    SEMICOL         reduce using rule 24 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 24 (mode_definition -> identifier_list ASSIGN mode .)


state 78

    (11) procedure_statement -> label_id COLON procedure_definition SEMICOL .

    END             reduce using rule 11 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    DCL             reduce using rule 11 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SYN             reduce using rule 11 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    TYPE            reduce using rule 11 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    ID              reduce using rule 11 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    $end            reduce using rule 11 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)


state 79

    (88) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (89) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL END
    (90) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL statement_list END
    (91) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL statement_list END
    (92) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL END
    (93) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL END
    (94) procedure_definition -> PROC LPAREN . RPAREN SEMICOL statement_list END
    (95) procedure_definition -> PROC LPAREN . RPAREN SEMICOL END
    (96) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (97) formal_parameter_list -> . formal_parameter
    (98) formal_parameter -> . identifier_list parameter_spec
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    RPAREN          shift and go to state 118
    ID              shift and go to state 13

    identifier                     shift and go to state 14
    formal_parameter_list          shift and go to state 117
    formal_parameter               shift and go to state 120
    identifier_list                shift and go to state 119

state 80

    (14) declaration -> identifier_list mode initialization .

    SEMICOL         reduce using rule 14 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 14 (declaration -> identifier_list mode initialization .)


state 81

    (16) initialization -> ASSIGN . expression
    (58) expression -> . operand0
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    monadic_operator               shift and go to state 66
    operand1                       shift and go to state 64
    operand3                       shift and go to state 70
    operand0                       shift and go to state 71
    expression                     shift and go to state 121
    operand2                       shift and go to state 72

state 82

    (12) declaration_list -> declaration_list COMMA declaration .

    SEMICOL         reduce using rule 12 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 12 (declaration_list -> declaration_list COMMA declaration .)


state 83

    (41) lower_bound -> expression .

    COLON           reduce using rule 41 (lower_bound -> expression .)


state 84

    (40) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 122


state 85

    (36) discrete_range_mode -> discrete_mode_name LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 123


state 86

    (19) synonym_definition -> identifier_list mode ASSIGN constant_expression .

    SEMICOL         reduce using rule 19 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)
    COMMA           reduce using rule 19 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)


state 87

    (47) string_length -> integer_literal .

    RBRACK          reduce using rule 47 (string_length -> integer_literal .)


state 88

    (57) integer_literal -> ICONST .

    RBRACK          reduce using rule 57 (integer_literal -> ICONST .)


state 89

    (46) string_mode -> CHARS LBRACK string_length . RBRACK

    RBRACK          shift and go to state 124


state 90

    (75) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 75 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 75 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 75 (arithmetic_additive_operator -> PLUS .)


state 91

    (73) operand1 -> operand1 operator2 . operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand3                       shift and go to state 70
    monadic_operator               shift and go to state 66
    operand2                       shift and go to state 125

state 92

    (76) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 76 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 76 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 76 (arithmetic_additive_operator -> MINUS .)


state 93

    (74) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 74 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 74 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 74 (operator2 -> arithmetic_additive_operator .)


state 94

    (82) operand3 -> monadic_operator operand4 .

    TIMES           reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    DIVIDE          reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    PERC            reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    PLUS            reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    MINUS           reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    AND             reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    OR              reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    EQUALS          reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    DIF             reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    GTR             reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    GEQ             reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    LSS             reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    LEQ             reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    IN              reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    COLON           reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    SEMICOL         reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    COMMA           reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    RPAREN          reduce using rule 82 (operand3 -> monadic_operator operand4 .)
    RBRACK          reduce using rule 82 (operand3 -> monadic_operator operand4 .)


state 95

    (70) relational_operator -> LEQ .

    MINUS           reduce using rule 70 (relational_operator -> LEQ .)
    NOT             reduce using rule 70 (relational_operator -> LEQ .)
    ICONST          reduce using rule 70 (relational_operator -> LEQ .)


state 96

    (71) membership_operator -> IN .

    MINUS           reduce using rule 71 (membership_operator -> IN .)
    NOT             reduce using rule 71 (membership_operator -> IN .)
    ICONST          reduce using rule 71 (membership_operator -> IN .)


state 97

    (60) operand0 -> operand0 operator1 . operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand3                       shift and go to state 70
    operand1                       shift and go to state 126
    operand2                       shift and go to state 72
    monadic_operator               shift and go to state 66

state 98

    (63) relational_operator -> AND .

    MINUS           reduce using rule 63 (relational_operator -> AND .)
    NOT             reduce using rule 63 (relational_operator -> AND .)
    ICONST          reduce using rule 63 (relational_operator -> AND .)


state 99

    (62) operator1 -> membership_operator .

    MINUS           reduce using rule 62 (operator1 -> membership_operator .)
    NOT             reduce using rule 62 (operator1 -> membership_operator .)
    ICONST          reduce using rule 62 (operator1 -> membership_operator .)


state 100

    (65) relational_operator -> EQUALS .

    MINUS           reduce using rule 65 (relational_operator -> EQUALS .)
    NOT             reduce using rule 65 (relational_operator -> EQUALS .)
    ICONST          reduce using rule 65 (relational_operator -> EQUALS .)


state 101

    (67) relational_operator -> GTR .

    MINUS           reduce using rule 67 (relational_operator -> GTR .)
    NOT             reduce using rule 67 (relational_operator -> GTR .)
    ICONST          reduce using rule 67 (relational_operator -> GTR .)


state 102

    (64) relational_operator -> OR .

    MINUS           reduce using rule 64 (relational_operator -> OR .)
    NOT             reduce using rule 64 (relational_operator -> OR .)
    ICONST          reduce using rule 64 (relational_operator -> OR .)


state 103

    (68) relational_operator -> GEQ .

    MINUS           reduce using rule 68 (relational_operator -> GEQ .)
    NOT             reduce using rule 68 (relational_operator -> GEQ .)
    ICONST          reduce using rule 68 (relational_operator -> GEQ .)


state 104

    (69) relational_operator -> LSS .

    MINUS           reduce using rule 69 (relational_operator -> LSS .)
    NOT             reduce using rule 69 (relational_operator -> LSS .)
    ICONST          reduce using rule 69 (relational_operator -> LSS .)


state 105

    (66) relational_operator -> DIF .

    MINUS           reduce using rule 66 (relational_operator -> DIF .)
    NOT             reduce using rule 66 (relational_operator -> DIF .)
    ICONST          reduce using rule 66 (relational_operator -> DIF .)


state 106

    (61) operator1 -> relational_operator .

    MINUS           reduce using rule 61 (operator1 -> relational_operator .)
    NOT             reduce using rule 61 (operator1 -> relational_operator .)
    ICONST          reduce using rule 61 (operator1 -> relational_operator .)


state 107

    (79) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 79 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 79 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 79 (arithmetic_multiplicative_operator -> TIMES .)


state 108

    (78) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand3                       shift and go to state 127
    operand4                       shift and go to state 63
    monadic_operator               shift and go to state 66

state 109

    (80) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 80 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 80 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 80 (arithmetic_multiplicative_operator -> DIVIDE .)


state 110

    (81) arithmetic_multiplicative_operator -> PERC .

    MINUS           reduce using rule 81 (arithmetic_multiplicative_operator -> PERC .)
    NOT             reduce using rule 81 (arithmetic_multiplicative_operator -> PERC .)
    ICONST          reduce using rule 81 (arithmetic_multiplicative_operator -> PERC .)


state 111

    (37) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 128


state 112

    (50) index_mode_list -> index_mode .

    RBRACK          reduce using rule 50 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 50 (index_mode_list -> index_mode .)


state 113

    (48) array_mode -> ARRAY LBRACK index_mode_list . RBRACK element_mode
    (49) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACK          shift and go to state 129
    COMMA           shift and go to state 130


state 114

    (52) index_mode -> literal_range .

    RBRACK          reduce using rule 52 (index_mode -> literal_range .)
    COMMA           reduce using rule 52 (index_mode -> literal_range .)


state 115

    (39) discrete_mode_name -> identifier .

    LPAREN          reduce using rule 39 (discrete_mode_name -> identifier .)


state 116

    (51) index_mode -> discrete_mode .
    (37) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACK          reduce using rule 51 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 51 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 73


state 117

    (88) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL statement_list END
    (89) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL END
    (90) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL statement_list END
    (92) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL END
    (96) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 131
    COMMA           shift and go to state 132


state 118

    (91) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL statement_list END
    (93) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL END
    (94) procedure_definition -> PROC LPAREN RPAREN . SEMICOL statement_list END
    (95) procedure_definition -> PROC LPAREN RPAREN . SEMICOL END
    (102) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (103) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 134
    RETURNS         shift and go to state 133

    result_spec                    shift and go to state 135

state 119

    (98) formal_parameter -> identifier_list . parameter_spec
    (55) identifier_list -> identifier_list . COMMA identifier
    (99) parameter_spec -> . mode parameter_attribute
    (100) parameter_spec -> . mode
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    COMMA           shift and go to state 39
    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    string_mode                    shift and go to state 29
    character_mode                 shift and go to state 36
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    mode                           shift and go to state 136
    discrete_range_mode            shift and go to state 44
    identifier                     shift and go to state 40
    discrete_mode                  shift and go to state 42
    mode_name                      shift and go to state 32
    parameter_spec                 shift and go to state 137
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 120

    (97) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 97 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 97 (formal_parameter_list -> formal_parameter .)


state 121

    (16) initialization -> ASSIGN expression .

    SEMICOL         reduce using rule 16 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 16 (initialization -> ASSIGN expression .)


state 122

    (40) literal_range -> lower_bound COLON . upper_bound
    (42) upper_bound -> . expression
    (58) expression -> . operand0
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    operand4                       shift and go to state 63
    operand1                       shift and go to state 64
    monadic_operator               shift and go to state 66
    expression                     shift and go to state 138
    upper_bound                    shift and go to state 139
    operand3                       shift and go to state 70
    operand2                       shift and go to state 72
    operand0                       shift and go to state 71

state 123

    (36) discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    LOC             reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 36 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)


state 124

    (46) string_mode -> CHARS LBRACK string_length RBRACK .

    ASSIGN          reduce using rule 46 (string_mode -> CHARS LBRACK string_length RBRACK .)
    LOC             reduce using rule 46 (string_mode -> CHARS LBRACK string_length RBRACK .)
    RPAREN          reduce using rule 46 (string_mode -> CHARS LBRACK string_length RBRACK .)
    COMMA           reduce using rule 46 (string_mode -> CHARS LBRACK string_length RBRACK .)
    SEMICOL         reduce using rule 46 (string_mode -> CHARS LBRACK string_length RBRACK .)


state 125

    (73) operand1 -> operand1 operator2 operand2 .
    (78) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (79) arithmetic_multiplicative_operator -> . TIMES
    (80) arithmetic_multiplicative_operator -> . DIVIDE
    (81) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    EQUALS          reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    DIF             reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    GTR             reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    GEQ             reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    LSS             reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    LEQ             reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    SEMICOL         reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    RBRACK          reduce using rule 73 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 109
    PERC            shift and go to state 110

    arithmetic_multiplicative_operator shift and go to state 108

state 126

    (60) operand0 -> operand0 operator1 operand1 .
    (73) operand1 -> operand1 . operator2 operand2
    (74) operator2 -> . arithmetic_additive_operator
    (75) arithmetic_additive_operator -> . PLUS
    (76) arithmetic_additive_operator -> . MINUS

    AND             reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    EQUALS          reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    DIF             reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    GTR             reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    GEQ             reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    LSS             reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    LEQ             reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    SEMICOL         reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    RBRACK          reduce using rule 60 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 92

    operator2                      shift and go to state 91
    arithmetic_additive_operator   shift and go to state 93

state 127

    (78) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PERC            reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUALS          reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIF             reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GTR             reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GEQ             reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LSS             reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LEQ             reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACK          reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMICOL         reduce using rule 78 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 128

    (37) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 37 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 129

    (48) array_mode -> ARRAY LBRACK index_mode_list RBRACK . element_mode
    (53) element_mode -> . mode
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    string_mode                    shift and go to state 29
    character_mode                 shift and go to state 36
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    element_mode                   shift and go to state 141
    mode                           shift and go to state 140
    identifier                     shift and go to state 40
    discrete_mode                  shift and go to state 42
    mode_name                      shift and go to state 32
    discrete_range_mode            shift and go to state 44
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 130

    (49) index_mode_list -> index_mode_list COMMA . index_mode
    (51) index_mode -> . discrete_mode
    (52) index_mode -> . literal_range
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (40) literal_range -> . lower_bound COLON upper_bound
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (41) lower_bound -> . expression
    (39) discrete_mode_name -> . identifier
    (58) expression -> . operand0
    (56) identifier -> . ID
    (59) operand0 -> . operand1
    (60) operand0 -> . operand0 operator1 operand1
    (72) operand1 -> . operand2
    (73) operand1 -> . operand1 operator2 operand2
    (77) operand2 -> . operand3
    (78) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (82) operand3 -> . monadic_operator operand4
    (83) operand3 -> . operand4
    (84) monadic_operator -> . MINUS
    (85) monadic_operator -> . NOT
    (86) operand4 -> . ICONST

    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    ID              shift and go to state 13
    MINUS           shift and go to state 69
    NOT             shift and go to state 62
    ICONST          shift and go to state 65

    character_mode                 shift and go to state 36
    boolean_mode                   shift and go to state 30
    index_mode                     shift and go to state 142
    expression                     shift and go to state 83
    lower_bound                    shift and go to state 84
    literal_range                  shift and go to state 114
    operand0                       shift and go to state 71
    operand2                       shift and go to state 72
    operand4                       shift and go to state 63
    discrete_mode_name             shift and go to state 27
    operand1                       shift and go to state 64
    monadic_operator               shift and go to state 66
    identifier                     shift and go to state 115
    discrete_mode                  shift and go to state 116
    discrete_range_mode            shift and go to state 44
    operand3                       shift and go to state 70
    integer_mode                   shift and go to state 45

state 131

    (88) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL statement_list END
    (89) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL END
    (90) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL statement_list END
    (92) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL END
    (102) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (103) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 143
    RETURNS         shift and go to state 133

    result_spec                    shift and go to state 144

state 132

    (96) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (98) formal_parameter -> . identifier_list parameter_spec
    (54) identifier_list -> . identifier
    (55) identifier_list -> . identifier_list COMMA identifier
    (56) identifier -> . ID

    ID              shift and go to state 13

    identifier                     shift and go to state 14
    formal_parameter               shift and go to state 145
    identifier_list                shift and go to state 119

state 133

    (102) result_spec -> RETURNS . LPAREN mode result_attribute RPAREN
    (103) result_spec -> RETURNS . LPAREN mode RPAREN

    LPAREN          shift and go to state 146


state 134

    (94) procedure_definition -> PROC LPAREN RPAREN SEMICOL . statement_list END
    (95) procedure_definition -> PROC LPAREN RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 147
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    statement_list                 shift and go to state 148
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 10
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 135

    (91) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL statement_list END
    (93) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 149


state 136

    (99) parameter_spec -> mode . parameter_attribute
    (100) parameter_spec -> mode .
    (101) parameter_attribute -> . LOC

    RPAREN          reduce using rule 100 (parameter_spec -> mode .)
    COMMA           reduce using rule 100 (parameter_spec -> mode .)
    LOC             shift and go to state 150

    parameter_attribute            shift and go to state 151

state 137

    (98) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 98 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 98 (formal_parameter -> identifier_list parameter_spec .)


state 138

    (42) upper_bound -> expression .

    RPAREN          reduce using rule 42 (upper_bound -> expression .)
    RBRACK          reduce using rule 42 (upper_bound -> expression .)
    COMMA           reduce using rule 42 (upper_bound -> expression .)


state 139

    (40) literal_range -> lower_bound COLON upper_bound .

    RPAREN          reduce using rule 40 (literal_range -> lower_bound COLON upper_bound .)
    RBRACK          reduce using rule 40 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 40 (literal_range -> lower_bound COLON upper_bound .)


state 140

    (53) element_mode -> mode .

    ASSIGN          reduce using rule 53 (element_mode -> mode .)
    SEMICOL         reduce using rule 53 (element_mode -> mode .)
    COMMA           reduce using rule 53 (element_mode -> mode .)
    LOC             reduce using rule 53 (element_mode -> mode .)
    RPAREN          reduce using rule 53 (element_mode -> mode .)


state 141

    (48) array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .

    ASSIGN          reduce using rule 48 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    SEMICOL         reduce using rule 48 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    COMMA           reduce using rule 48 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    LOC             reduce using rule 48 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    RPAREN          reduce using rule 48 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)


state 142

    (49) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACK          reduce using rule 49 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 49 (index_mode_list -> index_mode_list COMMA index_mode .)


state 143

    (90) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . statement_list END
    (92) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 152
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    statement_list                 shift and go to state 153
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 10
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 144

    (88) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL statement_list END
    (89) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 154


state 145

    (96) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 96 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 96 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 146

    (102) result_spec -> RETURNS LPAREN . mode result_attribute RPAREN
    (103) result_spec -> RETURNS LPAREN . mode RPAREN
    (25) mode -> . mode_name
    (26) mode -> . discrete_mode
    (27) mode -> . reference_mode
    (28) mode -> . composite_mode
    (38) mode_name -> . identifier
    (29) discrete_mode -> . integer_mode
    (30) discrete_mode -> . boolean_mode
    (31) discrete_mode -> . character_mode
    (32) discrete_mode -> . discrete_range_mode
    (43) reference_mode -> . REF mode
    (44) composite_mode -> . string_mode
    (45) composite_mode -> . array_mode
    (56) identifier -> . ID
    (33) integer_mode -> . INT
    (34) boolean_mode -> . BOOL
    (35) character_mode -> . CHAR
    (36) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (37) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (46) string_mode -> . CHARS LBRACK string_length RBRACK
    (48) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (39) discrete_mode_name -> . identifier

    REF             shift and go to state 33
    ID              shift and go to state 13
    INT             shift and go to state 26
    BOOL            shift and go to state 37
    CHAR            shift and go to state 35
    CHARS           shift and go to state 34
    ARRAY           shift and go to state 43

    discrete_mode_name             shift and go to state 27
    reference_mode                 shift and go to state 28
    string_mode                    shift and go to state 29
    character_mode                 shift and go to state 36
    composite_mode                 shift and go to state 38
    boolean_mode                   shift and go to state 30
    mode                           shift and go to state 155
    identifier                     shift and go to state 40
    discrete_mode                  shift and go to state 42
    mode_name                      shift and go to state 32
    discrete_range_mode            shift and go to state 44
    integer_mode                   shift and go to state 45
    array_mode                     shift and go to state 46

state 147

    (95) procedure_definition -> PROC LPAREN RPAREN SEMICOL END .

    SEMICOL         reduce using rule 95 (procedure_definition -> PROC LPAREN RPAREN SEMICOL END .)


state 148

    (94) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 156
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 22
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 149

    (91) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . statement_list END
    (93) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 157
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    statement_list                 shift and go to state 158
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 10
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 150

    (101) parameter_attribute -> LOC .

    RPAREN          reduce using rule 101 (parameter_attribute -> LOC .)
    COMMA           reduce using rule 101 (parameter_attribute -> LOC .)


state 151

    (99) parameter_spec -> mode parameter_attribute .

    RPAREN          reduce using rule 99 (parameter_spec -> mode parameter_attribute .)
    COMMA           reduce using rule 99 (parameter_spec -> mode parameter_attribute .)


state 152

    (92) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .

    SEMICOL         reduce using rule 92 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .)


state 153

    (90) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 159
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 22
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 154

    (88) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . statement_list END
    (89) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 160
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    statement_list                 shift and go to state 161
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 10
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 155

    (102) result_spec -> RETURNS LPAREN mode . result_attribute RPAREN
    (103) result_spec -> RETURNS LPAREN mode . RPAREN
    (104) result_attribute -> . LOC

    RPAREN          shift and go to state 164
    LOC             shift and go to state 162

    result_attribute               shift and go to state 163

state 156

    (94) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 94 (procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .)


state 157

    (93) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 93 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .)


state 158

    (91) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 165
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 22
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 159

    (90) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 90 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .)


state 160

    (89) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 89 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .)


state 161

    (88) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) declaration_statement -> . DCL declaration_list SEMICOL
    (9) synonym_statement -> . SYN synonym_list SEMICOL
    (10) newmode_statement -> . TYPE newmode_list SEMICOL
    (11) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (87) label_id -> . identifier
    (56) identifier -> . ID

    END             shift and go to state 166
    DCL             shift and go to state 9
    SYN             shift and go to state 1
    TYPE            shift and go to state 2
    ID              shift and go to state 13

    label_id                       shift and go to state 3
    declaration_statement          shift and go to state 5
    identifier                     shift and go to state 6
    procedure_statement            shift and go to state 8
    statement                      shift and go to state 22
    newmode_statement              shift and go to state 11
    synonym_statement              shift and go to state 12

state 162

    (104) result_attribute -> LOC .

    RPAREN          reduce using rule 104 (result_attribute -> LOC .)


state 163

    (102) result_spec -> RETURNS LPAREN mode result_attribute . RPAREN

    RPAREN          shift and go to state 167


state 164

    (103) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMICOL         reduce using rule 103 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 165

    (91) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 91 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .)


state 166

    (88) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 88 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .)


state 167

    (102) result_spec -> RETURNS LPAREN mode result_attribute RPAREN .

    SEMICOL         reduce using rule 102 (result_spec -> RETURNS LPAREN mode result_attribute RPAREN .)

