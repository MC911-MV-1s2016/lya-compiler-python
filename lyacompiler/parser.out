Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    LCURL
    DBLSLASH
    PRINT
    READ
    SINGQUO
    SUCC
    FOR
    RESULT
    DO
    PRED
    RETURN
    BY
    CIRCUMF
    LOWER
    OD
    UPPER
    NUM
    DBLQUO
    DOWN
    RCURL
    LENGTH
    TO
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     statement -> action_statement
Rule 9     declaration_statement -> DCL declaration_list SEMICOL
Rule 10    synonym_statement -> SYN synonym_list SEMICOL
Rule 11    newmode_statement -> TYPE newmode_list SEMICOL
Rule 12    procedure_statement -> label_id COLON procedure_definition SEMICOL
Rule 13    action_statement -> label_id COLON action SEMICOL
Rule 14    action_statement -> action SEMICOL
Rule 15    declaration_list -> declaration_list COMMA declaration
Rule 16    declaration_list -> declaration
Rule 17    declaration -> identifier_list mode initialization
Rule 18    declaration -> identifier_list mode
Rule 19    initialization -> ASSIGN expression
Rule 20    synonym_list -> synonym_list COMMA synonym_definition
Rule 21    synonym_list -> synonym_definition
Rule 22    synonym_definition -> identifier_list mode ASSIGN constant_expression
Rule 23    synonym_definition -> identifier_list ASSIGN constant_expression
Rule 24    constant_expression -> expression
Rule 25    newmode_list -> newmode_list COMMA mode_definition
Rule 26    newmode_list -> mode_definition
Rule 27    mode_definition -> identifier_list ASSIGN mode
Rule 28    mode -> mode_name
Rule 29    mode -> discrete_mode
Rule 30    mode -> reference_mode
Rule 31    mode -> composite_mode
Rule 32    discrete_mode -> integer_mode
Rule 33    discrete_mode -> boolean_mode
Rule 34    discrete_mode -> character_mode
Rule 35    discrete_mode -> discrete_range_mode
Rule 36    integer_mode -> INT
Rule 37    boolean_mode -> BOOL
Rule 38    character_mode -> CHAR
Rule 39    discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN
Rule 40    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 41    mode_name -> identifier
Rule 42    discrete_mode_name -> identifier
Rule 43    literal_range -> lower_bound COLON upper_bound
Rule 44    lower_bound -> expression
Rule 45    upper_bound -> expression
Rule 46    reference_mode -> REF mode
Rule 47    composite_mode -> string_mode
Rule 48    composite_mode -> array_mode
Rule 49    string_mode -> CHARS LBRACK string_length RBRACK
Rule 50    string_length -> integer_literal
Rule 51    array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode
Rule 52    index_mode_list -> index_mode_list COMMA index_mode
Rule 53    index_mode_list -> index_mode
Rule 54    index_mode -> discrete_mode
Rule 55    index_mode -> literal_range
Rule 56    element_mode -> mode
Rule 57    identifier_list -> identifier
Rule 58    identifier_list -> identifier_list COMMA identifier
Rule 59    identifier -> ID
Rule 60    location -> location_name
Rule 61    location -> dereferenced_reference
Rule 62    location -> string_element
Rule 63    location -> string_slice
Rule 64    location -> array_element
Rule 65    location -> array_slice
Rule 66    location_name -> identifier
Rule 67    dereferenced_reference -> location ARROW
Rule 68    string_element -> string_location LBRACK start_element RBRACK
Rule 69    start_element -> integer_expression
Rule 70    string_slice -> string_location LBRACK left_element COLON right_element RBRACK
Rule 71    string_location -> location
Rule 72    left_element -> integer_expression
Rule 73    right_element -> integer_expression
Rule 74    array_element -> array_location LBRACK expression_list RBRACK
Rule 75    array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK
Rule 76    array_location -> location
Rule 77    primitive_value -> literal
Rule 78    literal -> integer_literal
Rule 79    literal -> boolean_literal
Rule 80    literal -> character_literal
Rule 81    literal -> empty_literal
Rule 82    literal -> character_string_literal
Rule 83    integer_literal -> ICONST
Rule 84    boolean_literal -> FALSE
Rule 85    boolean_literal -> TRUE
Rule 86    character_literal -> CCONST
Rule 87    empty_literal -> NULL
Rule 88    character_string_literal -> SCONST
Rule 89    expression_list -> expression_list COMMA expression
Rule 90    expression_list -> expression
Rule 91    expression -> operand0
Rule 92    integer_expression -> expression
Rule 93    boolean_expression -> expression
Rule 94    operand0 -> operand1
Rule 95    operand0 -> operand0 operator1 operand1
Rule 96    operator1 -> relational_operator
Rule 97    operator1 -> membership_operator
Rule 98    relational_operator -> AND
Rule 99    relational_operator -> OR
Rule 100   relational_operator -> EQUALS
Rule 101   relational_operator -> DIF
Rule 102   relational_operator -> GTR
Rule 103   relational_operator -> GEQ
Rule 104   relational_operator -> LSS
Rule 105   relational_operator -> LEQ
Rule 106   membership_operator -> IN
Rule 107   operand1 -> operand2
Rule 108   operand1 -> operand1 operator2 operand2
Rule 109   operator2 -> arithmetic_additive_operator
Rule 110   operator2 -> string_concatenation_operator
Rule 111   arithmetic_additive_operator -> PLUS
Rule 112   arithmetic_additive_operator -> MINUS
Rule 113   string_concatenation_operator -> CONCAT
Rule 114   operand2 -> operand3
Rule 115   operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 116   arithmetic_multiplicative_operator -> TIMES
Rule 117   arithmetic_multiplicative_operator -> DIVIDE
Rule 118   arithmetic_multiplicative_operator -> PERC
Rule 119   operand3 -> monadic_operator operand4
Rule 120   operand3 -> operand4
Rule 121   monadic_operator -> MINUS
Rule 122   monadic_operator -> NOT
Rule 123   operand4 -> ICONST
Rule 124   action_statement_list -> action_statement_list action_statement
Rule 125   action_statement_list -> action_statement
Rule 126   label_id -> identifier
Rule 127   action -> bracketed_action
Rule 128   action -> assignment_action
Rule 129   action -> exit_action
Rule 130   bracketed_action -> if_action
Rule 131   assignment_action -> location assigning_operator expression
Rule 132   assigning_operator -> ASSIGN
Rule 133   assigning_operator -> PLUSASSIGN
Rule 134   assigning_operator -> MINUSASSIGN
Rule 135   assigning_operator -> TIMESASSIGN
Rule 136   assigning_operator -> DIVIDEASSIGN
Rule 137   assigning_operator -> PERCASSIGN
Rule 138   assigning_operator -> CONCATASSIGN
Rule 139   if_action -> IF boolean_expression then_clause else_clause FI
Rule 140   if_action -> IF boolean_expression then_clause FI
Rule 141   then_clause -> THEN action_statement_list
Rule 142   then_clause -> THEN empty
Rule 143   else_clause -> ELSE action_statement_list
Rule 144   else_clause -> ELSE empty
Rule 145   else_clause -> ELSIF boolean_expression then_clause else_clause
Rule 146   else_clause -> ELSIF boolean_expression then_clause
Rule 147   exit_action -> EXIT label_id
Rule 148   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
Rule 149   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
Rule 150   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
Rule 151   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END
Rule 152   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END
Rule 153   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END
Rule 154   procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END
Rule 155   procedure_definition -> PROC LPAREN RPAREN SEMICOL END
Rule 156   formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 157   formal_parameter_list -> formal_parameter
Rule 158   formal_parameter -> identifier_list parameter_spec
Rule 159   parameter_spec -> mode parameter_attribute
Rule 160   parameter_spec -> mode
Rule 161   parameter_attribute -> LOC
Rule 162   result_spec -> RETURNS LPAREN mode result_attribute RPAREN
Rule 163   result_spec -> RETURNS LPAREN mode RPAREN
Rule 164   result_attribute -> LOC
Rule 165   empty -> <empty>

Terminals, with rules where they appear

AND                  : 98
ARRAY                : 51
ARROW                : 67
ASSIGN               : 19 22 23 27 132
BOOL                 : 37
BY                   : 
CCONST               : 86
CHAR                 : 38
CHARS                : 49
CIRCUMF              : 
COLON                : 12 13 43 70 75
COMMA                : 15 20 25 52 58 89 156
CONCAT               : 113
CONCATASSIGN         : 138
DBLQUO               : 
DBLSLASH             : 
DCL                  : 9
DIF                  : 101
DIVIDE               : 117
DIVIDEASSIGN         : 136
DO                   : 
DOWN                 : 
ELSE                 : 143 144
ELSIF                : 145 146
END                  : 148 149 150 151 152 153 154 155
EQUALS               : 100
EXIT                 : 147
FALSE                : 84
FI                   : 139 140
FOR                  : 
GEQ                  : 103
GTR                  : 102
ICONST               : 83 123
ID                   : 59
IF                   : 139 140
IN                   : 106
INT                  : 36
LBRACK               : 49 51 68 70 74 75
LCURL                : 
LENGTH               : 
LEQ                  : 105
LOC                  : 161 164
LOWER                : 
LPAREN               : 39 40 148 149 150 151 152 153 154 155 162 163
LSS                  : 104
MINUS                : 112 121
MINUSASSIGN          : 134
NOT                  : 122
NULL                 : 87
NUM                  : 
OD                   : 
OR                   : 99
PERC                 : 118
PERCASSIGN           : 137
PLUS                 : 111
PLUSASSIGN           : 133
PRED                 : 
PRINT                : 
PROC                 : 148 149 150 151 152 153 154 155
RBRACK               : 49 51 68 70 74 75
RCURL                : 
READ                 : 
REF                  : 46
RESULT               : 
RETURN               : 
RETURNS              : 162 163
RPAREN               : 39 40 148 149 150 151 152 153 154 155 162 163
SCONST               : 88
SEMICOL              : 9 10 11 12 13 14 148 149 150 151 152 153 154 155
SINGQUO              : 
SUCC                 : 
SYN                  : 10
THEN                 : 141 142
TIMES                : 116
TIMESASSIGN          : 135
TO                   : 
TRUE                 : 85
TYPE                 : 11
UPPER                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

action               : 13 14
action_statement     : 8 124 125
action_statement_list : 124 141 143
arithmetic_additive_operator : 109
arithmetic_multiplicative_operator : 115
array_element        : 64
array_location       : 74 75
array_mode           : 48
array_slice          : 65
assigning_operator   : 131
assignment_action    : 128
boolean_expression   : 139 140 145 146
boolean_literal      : 79
boolean_mode         : 33
bracketed_action     : 127
character_literal    : 80
character_mode       : 34
character_string_literal : 82
composite_mode       : 31
constant_expression  : 22 23
declaration          : 15 16
declaration_list     : 9 15
declaration_statement : 4
dereferenced_reference : 61
discrete_mode        : 29 40 54
discrete_mode_name   : 39
discrete_range_mode  : 35
element_mode         : 51
else_clause          : 139 145
empty                : 142 144
empty_literal        : 81
exit_action          : 129
expression           : 19 24 44 45 89 90 92 93 131
expression_list      : 74 89
formal_parameter     : 156 157
formal_parameter_list : 148 149 150 152 156
identifier           : 41 42 57 58 66 126
identifier_list      : 17 18 22 23 27 58 158
if_action            : 130
index_mode           : 52 53
index_mode_list      : 51 52
initialization       : 17
integer_expression   : 69 72 73
integer_literal      : 50 78
integer_mode         : 32
label_id             : 12 13 147
left_element         : 70
literal              : 77
literal_range        : 39 40 55
location             : 67 71 76 131
location_name        : 60
lower_bound          : 43 75
membership_operator  : 97
mode                 : 17 18 22 27 46 56 159 160 162 163
mode_definition      : 25 26
mode_name            : 28
monadic_operator     : 119
newmode_list         : 11 25
newmode_statement    : 6
operand0             : 91 95
operand1             : 94 95 108
operand2             : 107 108 115
operand3             : 114 115
operand4             : 119 120
operator1            : 95
operator2            : 108
parameter_attribute  : 159
parameter_spec       : 158
primitive_value      : 
procedure_definition : 12
procedure_statement  : 7
program              : 0
reference_mode       : 30
relational_operator  : 96
result_attribute     : 162
result_spec          : 148 149 151 153
right_element        : 70
start_element        : 68
statement            : 2 3
statement_list       : 1 2 148 150 151 154
string_concatenation_operator : 110
string_element       : 62
string_length        : 49
string_location      : 68 70
string_mode          : 47
string_slice         : 63
synonym_definition   : 20 21
synonym_list         : 10 20
synonym_statement    : 5
then_clause          : 139 140 145 146
upper_bound          : 43 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    program                        shift and go to state 16
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 25
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    statement_list                 shift and go to state 29
    bracketed_action               shift and go to state 13

state 1

    (68) string_element -> string_location . LBRACK start_element RBRACK
    (70) string_slice -> string_location . LBRACK left_element COLON right_element RBRACK

    LBRACK          shift and go to state 31


state 2

    (12) procedure_statement -> label_id . COLON procedure_definition SEMICOL
    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 32


state 3

    (4) statement -> declaration_statement .

    END             reduce using rule 4 (statement -> declaration_statement .)
    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    EXIT            reduce using rule 4 (statement -> declaration_statement .)
    IF              reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)


state 4

    (131) assignment_action -> location . assigning_operator expression
    (67) dereferenced_reference -> location . ARROW
    (71) string_location -> location .
    (76) array_location -> location .
    (132) assigning_operator -> . ASSIGN
    (133) assigning_operator -> . PLUSASSIGN
    (134) assigning_operator -> . MINUSASSIGN
    (135) assigning_operator -> . TIMESASSIGN
    (136) assigning_operator -> . DIVIDEASSIGN
    (137) assigning_operator -> . PERCASSIGN
    (138) assigning_operator -> . CONCATASSIGN

  ! reduce/reduce conflict for LBRACK resolved using rule 71 (string_location -> location .)
    ARROW           shift and go to state 35
    LBRACK          reduce using rule 71 (string_location -> location .)
    ASSIGN          shift and go to state 39
    PLUSASSIGN      shift and go to state 33
    MINUSASSIGN     shift and go to state 40
    TIMESASSIGN     shift and go to state 41
    DIVIDEASSIGN    shift and go to state 36
    PERCASSIGN      shift and go to state 34
    CONCATASSIGN    shift and go to state 37

  ! LBRACK          [ reduce using rule 76 (array_location -> location .) ]

    assigning_operator             shift and go to state 38

state 5

    (129) action -> exit_action .

    SEMICOL         reduce using rule 129 (action -> exit_action .)


state 6

    (9) declaration_statement -> DCL . declaration_list SEMICOL
    (15) declaration_list -> . declaration_list COMMA declaration
    (16) declaration_list -> . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    declaration                    shift and go to state 42
    identifier_list                shift and go to state 45
    declaration_list               shift and go to state 44
    identifier                     shift and go to state 43

state 7

    (60) location -> location_name .

    ARROW           reduce using rule 60 (location -> location_name .)
    ASSIGN          reduce using rule 60 (location -> location_name .)
    PLUSASSIGN      reduce using rule 60 (location -> location_name .)
    MINUSASSIGN     reduce using rule 60 (location -> location_name .)
    TIMESASSIGN     reduce using rule 60 (location -> location_name .)
    DIVIDEASSIGN    reduce using rule 60 (location -> location_name .)
    PERCASSIGN      reduce using rule 60 (location -> location_name .)
    CONCATASSIGN    reduce using rule 60 (location -> location_name .)
    LBRACK          reduce using rule 60 (location -> location_name .)


state 8

    (7) statement -> procedure_statement .

    END             reduce using rule 7 (statement -> procedure_statement .)
    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    EXIT            reduce using rule 7 (statement -> procedure_statement .)
    IF              reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)


state 9

    (64) location -> array_element .

    ARROW           reduce using rule 64 (location -> array_element .)
    ASSIGN          reduce using rule 64 (location -> array_element .)
    PLUSASSIGN      reduce using rule 64 (location -> array_element .)
    MINUSASSIGN     reduce using rule 64 (location -> array_element .)
    TIMESASSIGN     reduce using rule 64 (location -> array_element .)
    DIVIDEASSIGN    reduce using rule 64 (location -> array_element .)
    PERCASSIGN      reduce using rule 64 (location -> array_element .)
    CONCATASSIGN    reduce using rule 64 (location -> array_element .)
    LBRACK          reduce using rule 64 (location -> array_element .)


state 10

    (74) array_element -> array_location . LBRACK expression_list RBRACK
    (75) array_slice -> array_location . LBRACK lower_bound COLON upper_bound RBRACK

    LBRACK          shift and go to state 46


state 11

    (139) if_action -> IF . boolean_expression then_clause else_clause FI
    (140) if_action -> IF . boolean_expression then_clause FI
    (93) boolean_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    expression                     shift and go to state 51
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    boolean_expression             shift and go to state 56
    operand3                       shift and go to state 57

state 12

    (59) identifier -> ID .

    COLON           reduce using rule 59 (identifier -> ID .)
    ARROW           reduce using rule 59 (identifier -> ID .)
    ASSIGN          reduce using rule 59 (identifier -> ID .)
    PLUSASSIGN      reduce using rule 59 (identifier -> ID .)
    MINUSASSIGN     reduce using rule 59 (identifier -> ID .)
    TIMESASSIGN     reduce using rule 59 (identifier -> ID .)
    DIVIDEASSIGN    reduce using rule 59 (identifier -> ID .)
    PERCASSIGN      reduce using rule 59 (identifier -> ID .)
    CONCATASSIGN    reduce using rule 59 (identifier -> ID .)
    LBRACK          reduce using rule 59 (identifier -> ID .)
    COMMA           reduce using rule 59 (identifier -> ID .)
    REF             reduce using rule 59 (identifier -> ID .)
    ID              reduce using rule 59 (identifier -> ID .)
    INT             reduce using rule 59 (identifier -> ID .)
    BOOL            reduce using rule 59 (identifier -> ID .)
    CHAR            reduce using rule 59 (identifier -> ID .)
    CHARS           reduce using rule 59 (identifier -> ID .)
    ARRAY           reduce using rule 59 (identifier -> ID .)
    SEMICOL         reduce using rule 59 (identifier -> ID .)
    LOC             reduce using rule 59 (identifier -> ID .)
    RPAREN          reduce using rule 59 (identifier -> ID .)
    LPAREN          reduce using rule 59 (identifier -> ID .)


state 13

    (127) action -> bracketed_action .

    SEMICOL         reduce using rule 127 (action -> bracketed_action .)


state 14

    (128) action -> assignment_action .

    SEMICOL         reduce using rule 128 (action -> assignment_action .)


state 15

    (126) label_id -> identifier .
    (66) location_name -> identifier .

    COLON           reduce using rule 126 (label_id -> identifier .)
    ARROW           reduce using rule 66 (location_name -> identifier .)
    ASSIGN          reduce using rule 66 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 66 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 66 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 66 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 66 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 66 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 66 (location_name -> identifier .)
    LBRACK          reduce using rule 66 (location_name -> identifier .)


state 16

    (0) S' -> program .



state 17

    (10) synonym_statement -> SYN . synonym_list SEMICOL
    (20) synonym_list -> . synonym_list COMMA synonym_definition
    (21) synonym_list -> . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    synonym_list                   shift and go to state 58
    synonym_definition             shift and go to state 59
    identifier_list                shift and go to state 60
    identifier                     shift and go to state 43

state 18

    (63) location -> string_slice .

    ARROW           reduce using rule 63 (location -> string_slice .)
    ASSIGN          reduce using rule 63 (location -> string_slice .)
    PLUSASSIGN      reduce using rule 63 (location -> string_slice .)
    MINUSASSIGN     reduce using rule 63 (location -> string_slice .)
    TIMESASSIGN     reduce using rule 63 (location -> string_slice .)
    DIVIDEASSIGN    reduce using rule 63 (location -> string_slice .)
    PERCASSIGN      reduce using rule 63 (location -> string_slice .)
    CONCATASSIGN    reduce using rule 63 (location -> string_slice .)
    LBRACK          reduce using rule 63 (location -> string_slice .)


state 19

    (147) exit_action -> EXIT . label_id
    (126) label_id -> . identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    identifier                     shift and go to state 61
    label_id                       shift and go to state 62

state 20

    (61) location -> dereferenced_reference .

    ARROW           reduce using rule 61 (location -> dereferenced_reference .)
    ASSIGN          reduce using rule 61 (location -> dereferenced_reference .)
    PLUSASSIGN      reduce using rule 61 (location -> dereferenced_reference .)
    MINUSASSIGN     reduce using rule 61 (location -> dereferenced_reference .)
    TIMESASSIGN     reduce using rule 61 (location -> dereferenced_reference .)
    DIVIDEASSIGN    reduce using rule 61 (location -> dereferenced_reference .)
    PERCASSIGN      reduce using rule 61 (location -> dereferenced_reference .)
    CONCATASSIGN    reduce using rule 61 (location -> dereferenced_reference .)
    LBRACK          reduce using rule 61 (location -> dereferenced_reference .)


state 21

    (65) location -> array_slice .

    ARROW           reduce using rule 65 (location -> array_slice .)
    ASSIGN          reduce using rule 65 (location -> array_slice .)
    PLUSASSIGN      reduce using rule 65 (location -> array_slice .)
    MINUSASSIGN     reduce using rule 65 (location -> array_slice .)
    TIMESASSIGN     reduce using rule 65 (location -> array_slice .)
    DIVIDEASSIGN    reduce using rule 65 (location -> array_slice .)
    PERCASSIGN      reduce using rule 65 (location -> array_slice .)
    CONCATASSIGN    reduce using rule 65 (location -> array_slice .)
    LBRACK          reduce using rule 65 (location -> array_slice .)


state 22

    (14) action_statement -> action . SEMICOL

    SEMICOL         shift and go to state 63


state 23

    (62) location -> string_element .

    ARROW           reduce using rule 62 (location -> string_element .)
    ASSIGN          reduce using rule 62 (location -> string_element .)
    PLUSASSIGN      reduce using rule 62 (location -> string_element .)
    MINUSASSIGN     reduce using rule 62 (location -> string_element .)
    TIMESASSIGN     reduce using rule 62 (location -> string_element .)
    DIVIDEASSIGN    reduce using rule 62 (location -> string_element .)
    PERCASSIGN      reduce using rule 62 (location -> string_element .)
    CONCATASSIGN    reduce using rule 62 (location -> string_element .)
    LBRACK          reduce using rule 62 (location -> string_element .)


state 24

    (6) statement -> newmode_statement .

    END             reduce using rule 6 (statement -> newmode_statement .)
    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    EXIT            reduce using rule 6 (statement -> newmode_statement .)
    IF              reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)


state 25

    (3) statement_list -> statement .

    END             reduce using rule 3 (statement_list -> statement .)
    DCL             reduce using rule 3 (statement_list -> statement .)
    SYN             reduce using rule 3 (statement_list -> statement .)
    TYPE            reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    EXIT            reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 26

    (5) statement -> synonym_statement .

    END             reduce using rule 5 (statement -> synonym_statement .)
    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    EXIT            reduce using rule 5 (statement -> synonym_statement .)
    IF              reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)


state 27

    (8) statement -> action_statement .

    END             reduce using rule 8 (statement -> action_statement .)
    DCL             reduce using rule 8 (statement -> action_statement .)
    SYN             reduce using rule 8 (statement -> action_statement .)
    TYPE            reduce using rule 8 (statement -> action_statement .)
    ID              reduce using rule 8 (statement -> action_statement .)
    EXIT            reduce using rule 8 (statement -> action_statement .)
    IF              reduce using rule 8 (statement -> action_statement .)
    $end            reduce using rule 8 (statement -> action_statement .)


state 28

    (130) bracketed_action -> if_action .

    SEMICOL         reduce using rule 130 (bracketed_action -> if_action .)


state 29

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 64
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    bracketed_action               shift and go to state 13

state 30

    (11) newmode_statement -> TYPE . newmode_list SEMICOL
    (25) newmode_list -> . newmode_list COMMA mode_definition
    (26) newmode_list -> . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    newmode_list                   shift and go to state 65
    identifier                     shift and go to state 43
    identifier_list                shift and go to state 66
    mode_definition                shift and go to state 67

state 31

    (68) string_element -> string_location LBRACK . start_element RBRACK
    (70) string_slice -> string_location LBRACK . left_element COLON right_element RBRACK
    (69) start_element -> . integer_expression
    (72) left_element -> . integer_expression
    (92) integer_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    start_element                  shift and go to state 68
    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    expression                     shift and go to state 69
    integer_expression             shift and go to state 70
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    left_element                   shift and go to state 71
    operand3                       shift and go to state 57

state 32

    (12) procedure_statement -> label_id COLON . procedure_definition SEMICOL
    (13) action_statement -> label_id COLON . action SEMICOL
    (148) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (149) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (150) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (151) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL statement_list END
    (152) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL END
    (153) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL END
    (154) procedure_definition -> . PROC LPAREN RPAREN SEMICOL statement_list END
    (155) procedure_definition -> . PROC LPAREN RPAREN SEMICOL END
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (59) identifier -> . ID
    (71) string_location -> . location
    (76) array_location -> . location

    PROC            shift and go to state 73
    EXIT            shift and go to state 19
    IF              shift and go to state 11
    ID              shift and go to state 12

    string_location                shift and go to state 1
    procedure_definition           shift and go to state 72
    assignment_action              shift and go to state 14
    string_element                 shift and go to state 23
    identifier                     shift and go to state 74
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    exit_action                    shift and go to state 5
    dereferenced_reference         shift and go to state 20
    location_name                  shift and go to state 7
    action                         shift and go to state 75
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 21
    if_action                      shift and go to state 28
    bracketed_action               shift and go to state 13

state 33

    (133) assigning_operator -> PLUSASSIGN .

    MINUS           reduce using rule 133 (assigning_operator -> PLUSASSIGN .)
    NOT             reduce using rule 133 (assigning_operator -> PLUSASSIGN .)
    ICONST          reduce using rule 133 (assigning_operator -> PLUSASSIGN .)


state 34

    (137) assigning_operator -> PERCASSIGN .

    MINUS           reduce using rule 137 (assigning_operator -> PERCASSIGN .)
    NOT             reduce using rule 137 (assigning_operator -> PERCASSIGN .)
    ICONST          reduce using rule 137 (assigning_operator -> PERCASSIGN .)


state 35

    (67) dereferenced_reference -> location ARROW .

    ARROW           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    ASSIGN          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PLUSASSIGN      reduce using rule 67 (dereferenced_reference -> location ARROW .)
    MINUSASSIGN     reduce using rule 67 (dereferenced_reference -> location ARROW .)
    TIMESASSIGN     reduce using rule 67 (dereferenced_reference -> location ARROW .)
    DIVIDEASSIGN    reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PERCASSIGN      reduce using rule 67 (dereferenced_reference -> location ARROW .)
    CONCATASSIGN    reduce using rule 67 (dereferenced_reference -> location ARROW .)
    LBRACK          reduce using rule 67 (dereferenced_reference -> location ARROW .)


state 36

    (136) assigning_operator -> DIVIDEASSIGN .

    MINUS           reduce using rule 136 (assigning_operator -> DIVIDEASSIGN .)
    NOT             reduce using rule 136 (assigning_operator -> DIVIDEASSIGN .)
    ICONST          reduce using rule 136 (assigning_operator -> DIVIDEASSIGN .)


state 37

    (138) assigning_operator -> CONCATASSIGN .

    MINUS           reduce using rule 138 (assigning_operator -> CONCATASSIGN .)
    NOT             reduce using rule 138 (assigning_operator -> CONCATASSIGN .)
    ICONST          reduce using rule 138 (assigning_operator -> CONCATASSIGN .)


state 38

    (131) assignment_action -> location assigning_operator . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    expression                     shift and go to state 76
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    operand4                       shift and go to state 50
    operand3                       shift and go to state 57

state 39

    (132) assigning_operator -> ASSIGN .

    MINUS           reduce using rule 132 (assigning_operator -> ASSIGN .)
    NOT             reduce using rule 132 (assigning_operator -> ASSIGN .)
    ICONST          reduce using rule 132 (assigning_operator -> ASSIGN .)


state 40

    (134) assigning_operator -> MINUSASSIGN .

    MINUS           reduce using rule 134 (assigning_operator -> MINUSASSIGN .)
    NOT             reduce using rule 134 (assigning_operator -> MINUSASSIGN .)
    ICONST          reduce using rule 134 (assigning_operator -> MINUSASSIGN .)


state 41

    (135) assigning_operator -> TIMESASSIGN .

    MINUS           reduce using rule 135 (assigning_operator -> TIMESASSIGN .)
    NOT             reduce using rule 135 (assigning_operator -> TIMESASSIGN .)
    ICONST          reduce using rule 135 (assigning_operator -> TIMESASSIGN .)


state 42

    (16) declaration_list -> declaration .

    SEMICOL         reduce using rule 16 (declaration_list -> declaration .)
    COMMA           reduce using rule 16 (declaration_list -> declaration .)


state 43

    (57) identifier_list -> identifier .

    COMMA           reduce using rule 57 (identifier_list -> identifier .)
    REF             reduce using rule 57 (identifier_list -> identifier .)
    ID              reduce using rule 57 (identifier_list -> identifier .)
    INT             reduce using rule 57 (identifier_list -> identifier .)
    BOOL            reduce using rule 57 (identifier_list -> identifier .)
    CHAR            reduce using rule 57 (identifier_list -> identifier .)
    CHARS           reduce using rule 57 (identifier_list -> identifier .)
    ARRAY           reduce using rule 57 (identifier_list -> identifier .)
    ASSIGN          reduce using rule 57 (identifier_list -> identifier .)


state 44

    (9) declaration_statement -> DCL declaration_list . SEMICOL
    (15) declaration_list -> declaration_list . COMMA declaration

    SEMICOL         shift and go to state 78
    COMMA           shift and go to state 77


state 45

    (17) declaration -> identifier_list . mode initialization
    (18) declaration -> identifier_list . mode
    (58) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    COMMA           shift and go to state 80
    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    composite_mode                 shift and go to state 90
    array_mode                     shift and go to state 81
    mode                           shift and go to state 91
    discrete_mode_name             shift and go to state 89
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    identifier                     shift and go to state 85
    discrete_range_mode            shift and go to state 94
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 46

    (74) array_element -> array_location LBRACK . expression_list RBRACK
    (75) array_slice -> array_location LBRACK . lower_bound COLON upper_bound RBRACK
    (89) expression_list -> . expression_list COMMA expression
    (90) expression_list -> . expression
    (44) lower_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    expression                     shift and go to state 100
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    lower_bound                    shift and go to state 101
    expression_list                shift and go to state 99
    operand4                       shift and go to state 50
    monadic_operator               shift and go to state 49
    operand3                       shift and go to state 57

state 47

    (121) monadic_operator -> MINUS .

    ICONST          reduce using rule 121 (monadic_operator -> MINUS .)


state 48

    (122) monadic_operator -> NOT .

    ICONST          reduce using rule 122 (monadic_operator -> NOT .)


state 49

    (119) operand3 -> monadic_operator . operand4
    (123) operand4 -> . ICONST

    ICONST          shift and go to state 54

    operand4                       shift and go to state 102

state 50

    (120) operand3 -> operand4 .

    TIMES           reduce using rule 120 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 120 (operand3 -> operand4 .)
    PERC            reduce using rule 120 (operand3 -> operand4 .)
    PLUS            reduce using rule 120 (operand3 -> operand4 .)
    MINUS           reduce using rule 120 (operand3 -> operand4 .)
    CONCAT          reduce using rule 120 (operand3 -> operand4 .)
    AND             reduce using rule 120 (operand3 -> operand4 .)
    OR              reduce using rule 120 (operand3 -> operand4 .)
    EQUALS          reduce using rule 120 (operand3 -> operand4 .)
    DIF             reduce using rule 120 (operand3 -> operand4 .)
    GTR             reduce using rule 120 (operand3 -> operand4 .)
    GEQ             reduce using rule 120 (operand3 -> operand4 .)
    LSS             reduce using rule 120 (operand3 -> operand4 .)
    LEQ             reduce using rule 120 (operand3 -> operand4 .)
    IN              reduce using rule 120 (operand3 -> operand4 .)
    SEMICOL         reduce using rule 120 (operand3 -> operand4 .)
    COMMA           reduce using rule 120 (operand3 -> operand4 .)
    RBRACK          reduce using rule 120 (operand3 -> operand4 .)
    COLON           reduce using rule 120 (operand3 -> operand4 .)
    THEN            reduce using rule 120 (operand3 -> operand4 .)
    RPAREN          reduce using rule 120 (operand3 -> operand4 .)


state 51

    (93) boolean_expression -> expression .

    THEN            reduce using rule 93 (boolean_expression -> expression .)


state 52

    (91) expression -> operand0 .
    (95) operand0 -> operand0 . operator1 operand1
    (96) operator1 -> . relational_operator
    (97) operator1 -> . membership_operator
    (98) relational_operator -> . AND
    (99) relational_operator -> . OR
    (100) relational_operator -> . EQUALS
    (101) relational_operator -> . DIF
    (102) relational_operator -> . GTR
    (103) relational_operator -> . GEQ
    (104) relational_operator -> . LSS
    (105) relational_operator -> . LEQ
    (106) membership_operator -> . IN

    SEMICOL         reduce using rule 91 (expression -> operand0 .)
    COMMA           reduce using rule 91 (expression -> operand0 .)
    COLON           reduce using rule 91 (expression -> operand0 .)
    RBRACK          reduce using rule 91 (expression -> operand0 .)
    RPAREN          reduce using rule 91 (expression -> operand0 .)
    THEN            reduce using rule 91 (expression -> operand0 .)
    AND             shift and go to state 103
    OR              shift and go to state 109
    EQUALS          shift and go to state 108
    DIF             shift and go to state 110
    GTR             shift and go to state 114
    GEQ             shift and go to state 113
    LSS             shift and go to state 104
    LEQ             shift and go to state 112
    IN              shift and go to state 111

    operator1                      shift and go to state 105
    membership_operator            shift and go to state 106
    relational_operator            shift and go to state 107

state 53

    (94) operand0 -> operand1 .
    (108) operand1 -> operand1 . operator2 operand2
    (109) operator2 -> . arithmetic_additive_operator
    (110) operator2 -> . string_concatenation_operator
    (111) arithmetic_additive_operator -> . PLUS
    (112) arithmetic_additive_operator -> . MINUS
    (113) string_concatenation_operator -> . CONCAT

    AND             reduce using rule 94 (operand0 -> operand1 .)
    OR              reduce using rule 94 (operand0 -> operand1 .)
    EQUALS          reduce using rule 94 (operand0 -> operand1 .)
    DIF             reduce using rule 94 (operand0 -> operand1 .)
    GTR             reduce using rule 94 (operand0 -> operand1 .)
    GEQ             reduce using rule 94 (operand0 -> operand1 .)
    LSS             reduce using rule 94 (operand0 -> operand1 .)
    LEQ             reduce using rule 94 (operand0 -> operand1 .)
    IN              reduce using rule 94 (operand0 -> operand1 .)
    COLON           reduce using rule 94 (operand0 -> operand1 .)
    RBRACK          reduce using rule 94 (operand0 -> operand1 .)
    COMMA           reduce using rule 94 (operand0 -> operand1 .)
    RPAREN          reduce using rule 94 (operand0 -> operand1 .)
    SEMICOL         reduce using rule 94 (operand0 -> operand1 .)
    THEN            reduce using rule 94 (operand0 -> operand1 .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 115
    CONCAT          shift and go to state 117

    arithmetic_additive_operator   shift and go to state 116
    string_concatenation_operator  shift and go to state 119
    operator2                      shift and go to state 120

state 54

    (123) operand4 -> ICONST .

    TIMES           reduce using rule 123 (operand4 -> ICONST .)
    DIVIDE          reduce using rule 123 (operand4 -> ICONST .)
    PERC            reduce using rule 123 (operand4 -> ICONST .)
    PLUS            reduce using rule 123 (operand4 -> ICONST .)
    MINUS           reduce using rule 123 (operand4 -> ICONST .)
    CONCAT          reduce using rule 123 (operand4 -> ICONST .)
    AND             reduce using rule 123 (operand4 -> ICONST .)
    OR              reduce using rule 123 (operand4 -> ICONST .)
    EQUALS          reduce using rule 123 (operand4 -> ICONST .)
    DIF             reduce using rule 123 (operand4 -> ICONST .)
    GTR             reduce using rule 123 (operand4 -> ICONST .)
    GEQ             reduce using rule 123 (operand4 -> ICONST .)
    LSS             reduce using rule 123 (operand4 -> ICONST .)
    LEQ             reduce using rule 123 (operand4 -> ICONST .)
    IN              reduce using rule 123 (operand4 -> ICONST .)
    SEMICOL         reduce using rule 123 (operand4 -> ICONST .)
    COMMA           reduce using rule 123 (operand4 -> ICONST .)
    COLON           reduce using rule 123 (operand4 -> ICONST .)
    THEN            reduce using rule 123 (operand4 -> ICONST .)
    RBRACK          reduce using rule 123 (operand4 -> ICONST .)
    RPAREN          reduce using rule 123 (operand4 -> ICONST .)


state 55

    (107) operand1 -> operand2 .
    (115) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (116) arithmetic_multiplicative_operator -> . TIMES
    (117) arithmetic_multiplicative_operator -> . DIVIDE
    (118) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 107 (operand1 -> operand2 .)
    MINUS           reduce using rule 107 (operand1 -> operand2 .)
    CONCAT          reduce using rule 107 (operand1 -> operand2 .)
    AND             reduce using rule 107 (operand1 -> operand2 .)
    OR              reduce using rule 107 (operand1 -> operand2 .)
    EQUALS          reduce using rule 107 (operand1 -> operand2 .)
    DIF             reduce using rule 107 (operand1 -> operand2 .)
    GTR             reduce using rule 107 (operand1 -> operand2 .)
    GEQ             reduce using rule 107 (operand1 -> operand2 .)
    LSS             reduce using rule 107 (operand1 -> operand2 .)
    LEQ             reduce using rule 107 (operand1 -> operand2 .)
    IN              reduce using rule 107 (operand1 -> operand2 .)
    SEMICOL         reduce using rule 107 (operand1 -> operand2 .)
    COMMA           reduce using rule 107 (operand1 -> operand2 .)
    RBRACK          reduce using rule 107 (operand1 -> operand2 .)
    THEN            reduce using rule 107 (operand1 -> operand2 .)
    COLON           reduce using rule 107 (operand1 -> operand2 .)
    RPAREN          reduce using rule 107 (operand1 -> operand2 .)
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 123
    PERC            shift and go to state 121

    arithmetic_multiplicative_operator shift and go to state 122

state 56

    (139) if_action -> IF boolean_expression . then_clause else_clause FI
    (140) if_action -> IF boolean_expression . then_clause FI
    (141) then_clause -> . THEN action_statement_list
    (142) then_clause -> . THEN empty

    THEN            shift and go to state 126

    then_clause                    shift and go to state 125

state 57

    (114) operand2 -> operand3 .

    TIMES           reduce using rule 114 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 114 (operand2 -> operand3 .)
    PERC            reduce using rule 114 (operand2 -> operand3 .)
    PLUS            reduce using rule 114 (operand2 -> operand3 .)
    MINUS           reduce using rule 114 (operand2 -> operand3 .)
    CONCAT          reduce using rule 114 (operand2 -> operand3 .)
    AND             reduce using rule 114 (operand2 -> operand3 .)
    OR              reduce using rule 114 (operand2 -> operand3 .)
    EQUALS          reduce using rule 114 (operand2 -> operand3 .)
    DIF             reduce using rule 114 (operand2 -> operand3 .)
    GTR             reduce using rule 114 (operand2 -> operand3 .)
    GEQ             reduce using rule 114 (operand2 -> operand3 .)
    LSS             reduce using rule 114 (operand2 -> operand3 .)
    LEQ             reduce using rule 114 (operand2 -> operand3 .)
    IN              reduce using rule 114 (operand2 -> operand3 .)
    RBRACK          reduce using rule 114 (operand2 -> operand3 .)
    COMMA           reduce using rule 114 (operand2 -> operand3 .)
    COLON           reduce using rule 114 (operand2 -> operand3 .)
    SEMICOL         reduce using rule 114 (operand2 -> operand3 .)
    THEN            reduce using rule 114 (operand2 -> operand3 .)
    RPAREN          reduce using rule 114 (operand2 -> operand3 .)


state 58

    (10) synonym_statement -> SYN synonym_list . SEMICOL
    (20) synonym_list -> synonym_list . COMMA synonym_definition

    SEMICOL         shift and go to state 128
    COMMA           shift and go to state 127


state 59

    (21) synonym_list -> synonym_definition .

    SEMICOL         reduce using rule 21 (synonym_list -> synonym_definition .)
    COMMA           reduce using rule 21 (synonym_list -> synonym_definition .)


state 60

    (22) synonym_definition -> identifier_list . mode ASSIGN constant_expression
    (23) synonym_definition -> identifier_list . ASSIGN constant_expression
    (58) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    ASSIGN          shift and go to state 130
    COMMA           shift and go to state 80
    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    composite_mode                 shift and go to state 90
    array_mode                     shift and go to state 81
    mode                           shift and go to state 129
    discrete_mode_name             shift and go to state 89
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    identifier                     shift and go to state 85
    discrete_range_mode            shift and go to state 94
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 61

    (126) label_id -> identifier .

    SEMICOL         reduce using rule 126 (label_id -> identifier .)


state 62

    (147) exit_action -> EXIT label_id .

    SEMICOL         reduce using rule 147 (exit_action -> EXIT label_id .)


state 63

    (14) action_statement -> action SEMICOL .

    END             reduce using rule 14 (action_statement -> action SEMICOL .)
    DCL             reduce using rule 14 (action_statement -> action SEMICOL .)
    SYN             reduce using rule 14 (action_statement -> action SEMICOL .)
    TYPE            reduce using rule 14 (action_statement -> action SEMICOL .)
    ID              reduce using rule 14 (action_statement -> action SEMICOL .)
    EXIT            reduce using rule 14 (action_statement -> action SEMICOL .)
    IF              reduce using rule 14 (action_statement -> action SEMICOL .)
    FI              reduce using rule 14 (action_statement -> action SEMICOL .)
    $end            reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSE            reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSIF           reduce using rule 14 (action_statement -> action SEMICOL .)


state 64

    (2) statement_list -> statement_list statement .

    END             reduce using rule 2 (statement_list -> statement_list statement .)
    DCL             reduce using rule 2 (statement_list -> statement_list statement .)
    SYN             reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 65

    (11) newmode_statement -> TYPE newmode_list . SEMICOL
    (25) newmode_list -> newmode_list . COMMA mode_definition

    SEMICOL         shift and go to state 132
    COMMA           shift and go to state 131


state 66

    (27) mode_definition -> identifier_list . ASSIGN mode
    (58) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 133
    COMMA           shift and go to state 80


state 67

    (26) newmode_list -> mode_definition .

    SEMICOL         reduce using rule 26 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 26 (newmode_list -> mode_definition .)


state 68

    (68) string_element -> string_location LBRACK start_element . RBRACK

    RBRACK          shift and go to state 134


state 69

    (92) integer_expression -> expression .

    RBRACK          reduce using rule 92 (integer_expression -> expression .)
    COLON           reduce using rule 92 (integer_expression -> expression .)


state 70

    (69) start_element -> integer_expression .
    (72) left_element -> integer_expression .

    RBRACK          reduce using rule 69 (start_element -> integer_expression .)
    COLON           reduce using rule 72 (left_element -> integer_expression .)


state 71

    (70) string_slice -> string_location LBRACK left_element . COLON right_element RBRACK

    COLON           shift and go to state 135


state 72

    (12) procedure_statement -> label_id COLON procedure_definition . SEMICOL

    SEMICOL         shift and go to state 136


state 73

    (148) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (149) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (150) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (151) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL statement_list END
    (152) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL END
    (153) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL END
    (154) procedure_definition -> PROC . LPAREN RPAREN SEMICOL statement_list END
    (155) procedure_definition -> PROC . LPAREN RPAREN SEMICOL END

    LPAREN          shift and go to state 137


state 74

    (66) location_name -> identifier .

    ARROW           reduce using rule 66 (location_name -> identifier .)
    ASSIGN          reduce using rule 66 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 66 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 66 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 66 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 66 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 66 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 66 (location_name -> identifier .)
    LBRACK          reduce using rule 66 (location_name -> identifier .)


state 75

    (13) action_statement -> label_id COLON action . SEMICOL

    SEMICOL         shift and go to state 138


state 76

    (131) assignment_action -> location assigning_operator expression .

    SEMICOL         reduce using rule 131 (assignment_action -> location assigning_operator expression .)


state 77

    (15) declaration_list -> declaration_list COMMA . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    declaration                    shift and go to state 139
    identifier_list                shift and go to state 45
    identifier                     shift and go to state 43

state 78

    (9) declaration_statement -> DCL declaration_list SEMICOL .

    END             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    DCL             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    SYN             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    TYPE            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    ID              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    EXIT            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    IF              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    $end            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)


state 79

    (36) integer_mode -> INT .

    LPAREN          reduce using rule 36 (integer_mode -> INT .)
    ASSIGN          reduce using rule 36 (integer_mode -> INT .)
    SEMICOL         reduce using rule 36 (integer_mode -> INT .)
    COMMA           reduce using rule 36 (integer_mode -> INT .)
    LOC             reduce using rule 36 (integer_mode -> INT .)
    RPAREN          reduce using rule 36 (integer_mode -> INT .)
    RBRACK          reduce using rule 36 (integer_mode -> INT .)


state 80

    (58) identifier_list -> identifier_list COMMA . identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    identifier                     shift and go to state 140

state 81

    (48) composite_mode -> array_mode .

    ASSIGN          reduce using rule 48 (composite_mode -> array_mode .)
    SEMICOL         reduce using rule 48 (composite_mode -> array_mode .)
    COMMA           reduce using rule 48 (composite_mode -> array_mode .)
    LOC             reduce using rule 48 (composite_mode -> array_mode .)
    RPAREN          reduce using rule 48 (composite_mode -> array_mode .)


state 82

    (51) array_mode -> ARRAY . LBRACK index_mode_list RBRACK element_mode

    LBRACK          shift and go to state 141


state 83

    (47) composite_mode -> string_mode .

    ASSIGN          reduce using rule 47 (composite_mode -> string_mode .)
    SEMICOL         reduce using rule 47 (composite_mode -> string_mode .)
    COMMA           reduce using rule 47 (composite_mode -> string_mode .)
    LOC             reduce using rule 47 (composite_mode -> string_mode .)
    RPAREN          reduce using rule 47 (composite_mode -> string_mode .)


state 84

    (46) reference_mode -> REF . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    composite_mode                 shift and go to state 90
    array_mode                     shift and go to state 81
    mode                           shift and go to state 142
    discrete_mode_name             shift and go to state 89
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    identifier                     shift and go to state 85
    discrete_range_mode            shift and go to state 94
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 85

    (41) mode_name -> identifier .
    (42) discrete_mode_name -> identifier .

    ASSIGN          reduce using rule 41 (mode_name -> identifier .)
    SEMICOL         reduce using rule 41 (mode_name -> identifier .)
    COMMA           reduce using rule 41 (mode_name -> identifier .)
    LOC             reduce using rule 41 (mode_name -> identifier .)
    RPAREN          reduce using rule 41 (mode_name -> identifier .)
    LPAREN          reduce using rule 42 (discrete_mode_name -> identifier .)


state 86

    (33) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    SEMICOL         reduce using rule 33 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 33 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 33 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    RBRACK          reduce using rule 33 (discrete_mode -> boolean_mode .)


state 87

    (49) string_mode -> CHARS . LBRACK string_length RBRACK

    LBRACK          shift and go to state 143


state 88

    (32) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    SEMICOL         reduce using rule 32 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 32 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    RBRACK          reduce using rule 32 (discrete_mode -> integer_mode .)


state 89

    (39) discrete_range_mode -> discrete_mode_name . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 144


state 90

    (31) mode -> composite_mode .

    ASSIGN          reduce using rule 31 (mode -> composite_mode .)
    SEMICOL         reduce using rule 31 (mode -> composite_mode .)
    COMMA           reduce using rule 31 (mode -> composite_mode .)
    LOC             reduce using rule 31 (mode -> composite_mode .)
    RPAREN          reduce using rule 31 (mode -> composite_mode .)


state 91

    (17) declaration -> identifier_list mode . initialization
    (18) declaration -> identifier_list mode .
    (19) initialization -> . ASSIGN expression

    SEMICOL         reduce using rule 18 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 18 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 145

    initialization                 shift and go to state 146

state 92

    (30) mode -> reference_mode .

    ASSIGN          reduce using rule 30 (mode -> reference_mode .)
    SEMICOL         reduce using rule 30 (mode -> reference_mode .)
    COMMA           reduce using rule 30 (mode -> reference_mode .)
    LOC             reduce using rule 30 (mode -> reference_mode .)
    RPAREN          reduce using rule 30 (mode -> reference_mode .)


state 93

    (28) mode -> mode_name .

    ASSIGN          reduce using rule 28 (mode -> mode_name .)
    SEMICOL         reduce using rule 28 (mode -> mode_name .)
    COMMA           reduce using rule 28 (mode -> mode_name .)
    LOC             reduce using rule 28 (mode -> mode_name .)
    RPAREN          reduce using rule 28 (mode -> mode_name .)


state 94

    (35) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    SEMICOL         reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RBRACK          reduce using rule 35 (discrete_mode -> discrete_range_mode .)


state 95

    (38) character_mode -> CHAR .

    LPAREN          reduce using rule 38 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 38 (character_mode -> CHAR .)
    SEMICOL         reduce using rule 38 (character_mode -> CHAR .)
    COMMA           reduce using rule 38 (character_mode -> CHAR .)
    LOC             reduce using rule 38 (character_mode -> CHAR .)
    RPAREN          reduce using rule 38 (character_mode -> CHAR .)
    RBRACK          reduce using rule 38 (character_mode -> CHAR .)


state 96

    (29) mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 29 (mode -> discrete_mode .)
    SEMICOL         reduce using rule 29 (mode -> discrete_mode .)
    COMMA           reduce using rule 29 (mode -> discrete_mode .)
    LOC             reduce using rule 29 (mode -> discrete_mode .)
    RPAREN          reduce using rule 29 (mode -> discrete_mode .)
    LPAREN          shift and go to state 147


state 97

    (37) boolean_mode -> BOOL .

    LPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 37 (boolean_mode -> BOOL .)
    SEMICOL         reduce using rule 37 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 37 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    LOC             reduce using rule 37 (boolean_mode -> BOOL .)
    RBRACK          reduce using rule 37 (boolean_mode -> BOOL .)


state 98

    (34) discrete_mode -> character_mode .

    LPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    SEMICOL         reduce using rule 34 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 34 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 34 (discrete_mode -> character_mode .)
    LOC             reduce using rule 34 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    RBRACK          reduce using rule 34 (discrete_mode -> character_mode .)


state 99

    (74) array_element -> array_location LBRACK expression_list . RBRACK
    (89) expression_list -> expression_list . COMMA expression

    RBRACK          shift and go to state 149
    COMMA           shift and go to state 148


state 100

    (90) expression_list -> expression .
    (44) lower_bound -> expression .

    RBRACK          reduce using rule 90 (expression_list -> expression .)
    COMMA           reduce using rule 90 (expression_list -> expression .)
    COLON           reduce using rule 44 (lower_bound -> expression .)


state 101

    (75) array_slice -> array_location LBRACK lower_bound . COLON upper_bound RBRACK

    COLON           shift and go to state 150


state 102

    (119) operand3 -> monadic_operator operand4 .

    TIMES           reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    DIVIDE          reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    PERC            reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    PLUS            reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    MINUS           reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    CONCAT          reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    AND             reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    OR              reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    EQUALS          reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    DIF             reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    GTR             reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    GEQ             reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    LSS             reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    LEQ             reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    IN              reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    SEMICOL         reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    COMMA           reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    RBRACK          reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    COLON           reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    THEN            reduce using rule 119 (operand3 -> monadic_operator operand4 .)
    RPAREN          reduce using rule 119 (operand3 -> monadic_operator operand4 .)


state 103

    (98) relational_operator -> AND .

    MINUS           reduce using rule 98 (relational_operator -> AND .)
    NOT             reduce using rule 98 (relational_operator -> AND .)
    ICONST          reduce using rule 98 (relational_operator -> AND .)


state 104

    (104) relational_operator -> LSS .

    MINUS           reduce using rule 104 (relational_operator -> LSS .)
    NOT             reduce using rule 104 (relational_operator -> LSS .)
    ICONST          reduce using rule 104 (relational_operator -> LSS .)


state 105

    (95) operand0 -> operand0 operator1 . operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand2                       shift and go to state 55
    operand1                       shift and go to state 151
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    operand3                       shift and go to state 57

state 106

    (97) operator1 -> membership_operator .

    MINUS           reduce using rule 97 (operator1 -> membership_operator .)
    NOT             reduce using rule 97 (operator1 -> membership_operator .)
    ICONST          reduce using rule 97 (operator1 -> membership_operator .)


state 107

    (96) operator1 -> relational_operator .

    MINUS           reduce using rule 96 (operator1 -> relational_operator .)
    NOT             reduce using rule 96 (operator1 -> relational_operator .)
    ICONST          reduce using rule 96 (operator1 -> relational_operator .)


state 108

    (100) relational_operator -> EQUALS .

    MINUS           reduce using rule 100 (relational_operator -> EQUALS .)
    NOT             reduce using rule 100 (relational_operator -> EQUALS .)
    ICONST          reduce using rule 100 (relational_operator -> EQUALS .)


state 109

    (99) relational_operator -> OR .

    MINUS           reduce using rule 99 (relational_operator -> OR .)
    NOT             reduce using rule 99 (relational_operator -> OR .)
    ICONST          reduce using rule 99 (relational_operator -> OR .)


state 110

    (101) relational_operator -> DIF .

    MINUS           reduce using rule 101 (relational_operator -> DIF .)
    NOT             reduce using rule 101 (relational_operator -> DIF .)
    ICONST          reduce using rule 101 (relational_operator -> DIF .)


state 111

    (106) membership_operator -> IN .

    MINUS           reduce using rule 106 (membership_operator -> IN .)
    NOT             reduce using rule 106 (membership_operator -> IN .)
    ICONST          reduce using rule 106 (membership_operator -> IN .)


state 112

    (105) relational_operator -> LEQ .

    MINUS           reduce using rule 105 (relational_operator -> LEQ .)
    NOT             reduce using rule 105 (relational_operator -> LEQ .)
    ICONST          reduce using rule 105 (relational_operator -> LEQ .)


state 113

    (103) relational_operator -> GEQ .

    MINUS           reduce using rule 103 (relational_operator -> GEQ .)
    NOT             reduce using rule 103 (relational_operator -> GEQ .)
    ICONST          reduce using rule 103 (relational_operator -> GEQ .)


state 114

    (102) relational_operator -> GTR .

    MINUS           reduce using rule 102 (relational_operator -> GTR .)
    NOT             reduce using rule 102 (relational_operator -> GTR .)
    ICONST          reduce using rule 102 (relational_operator -> GTR .)


state 115

    (112) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 112 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 112 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 112 (arithmetic_additive_operator -> MINUS .)


state 116

    (109) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 109 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 109 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 109 (operator2 -> arithmetic_additive_operator .)


state 117

    (113) string_concatenation_operator -> CONCAT .

    MINUS           reduce using rule 113 (string_concatenation_operator -> CONCAT .)
    NOT             reduce using rule 113 (string_concatenation_operator -> CONCAT .)
    ICONST          reduce using rule 113 (string_concatenation_operator -> CONCAT .)


state 118

    (111) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 111 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 111 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 111 (arithmetic_additive_operator -> PLUS .)


state 119

    (110) operator2 -> string_concatenation_operator .

    MINUS           reduce using rule 110 (operator2 -> string_concatenation_operator .)
    NOT             reduce using rule 110 (operator2 -> string_concatenation_operator .)
    ICONST          reduce using rule 110 (operator2 -> string_concatenation_operator .)


state 120

    (108) operand1 -> operand1 operator2 . operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand2                       shift and go to state 152
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    operand3                       shift and go to state 57

state 121

    (118) arithmetic_multiplicative_operator -> PERC .

    MINUS           reduce using rule 118 (arithmetic_multiplicative_operator -> PERC .)
    NOT             reduce using rule 118 (arithmetic_multiplicative_operator -> PERC .)
    ICONST          reduce using rule 118 (arithmetic_multiplicative_operator -> PERC .)


state 122

    (115) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    operand3                       shift and go to state 153

state 123

    (117) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 117 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 117 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 117 (arithmetic_multiplicative_operator -> DIVIDE .)


state 124

    (116) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 116 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 116 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 116 (arithmetic_multiplicative_operator -> TIMES .)


state 125

    (139) if_action -> IF boolean_expression then_clause . else_clause FI
    (140) if_action -> IF boolean_expression then_clause . FI
    (143) else_clause -> . ELSE action_statement_list
    (144) else_clause -> . ELSE empty
    (145) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (146) else_clause -> . ELSIF boolean_expression then_clause

    FI              shift and go to state 155
    ELSE            shift and go to state 157
    ELSIF           shift and go to state 154

    else_clause                    shift and go to state 156

state 126

    (141) then_clause -> THEN . action_statement_list
    (142) then_clause -> THEN . empty
    (124) action_statement_list -> . action_statement_list action_statement
    (125) action_statement_list -> . action_statement
    (165) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 165 (empty -> .)
    ELSE            reduce using rule 165 (empty -> .)
    ELSIF           reduce using rule 165 (empty -> .)
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    action_statement_list          shift and go to state 158
    label_id                       shift and go to state 159
    bracketed_action               shift and go to state 13
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    empty                          shift and go to state 160
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    exit_action                    shift and go to state 5
    dereferenced_reference         shift and go to state 20
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    string_element                 shift and go to state 23
    array_slice                    shift and go to state 21
    if_action                      shift and go to state 28
    action_statement               shift and go to state 161

state 127

    (20) synonym_list -> synonym_list COMMA . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    synonym_definition             shift and go to state 162
    identifier_list                shift and go to state 60
    identifier                     shift and go to state 43

state 128

    (10) synonym_statement -> SYN synonym_list SEMICOL .

    END             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    DCL             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    SYN             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    TYPE            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    ID              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    EXIT            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    IF              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    $end            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)


state 129

    (22) synonym_definition -> identifier_list mode . ASSIGN constant_expression

    ASSIGN          shift and go to state 163


state 130

    (23) synonym_definition -> identifier_list ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    expression                     shift and go to state 164
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    constant_expression            shift and go to state 165
    operand4                       shift and go to state 50
    operand3                       shift and go to state 57

state 131

    (25) newmode_list -> newmode_list COMMA . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    identifier                     shift and go to state 43
    identifier_list                shift and go to state 66
    mode_definition                shift and go to state 166

state 132

    (11) newmode_statement -> TYPE newmode_list SEMICOL .

    END             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    DCL             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SYN             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    TYPE            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    ID              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    EXIT            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    IF              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    $end            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)


state 133

    (27) mode_definition -> identifier_list ASSIGN . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    composite_mode                 shift and go to state 90
    array_mode                     shift and go to state 81
    mode                           shift and go to state 167
    discrete_mode_name             shift and go to state 89
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    identifier                     shift and go to state 85
    discrete_range_mode            shift and go to state 94
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 134

    (68) string_element -> string_location LBRACK start_element RBRACK .

    ARROW           reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    ASSIGN          reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    PLUSASSIGN      reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    MINUSASSIGN     reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    TIMESASSIGN     reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    PERCASSIGN      reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    CONCATASSIGN    reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    LBRACK          reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)


state 135

    (70) string_slice -> string_location LBRACK left_element COLON . right_element RBRACK
    (73) right_element -> . integer_expression
    (92) integer_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    expression                     shift and go to state 69
    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    right_element                  shift and go to state 169
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    integer_expression             shift and go to state 168
    operand3                       shift and go to state 57

state 136

    (12) procedure_statement -> label_id COLON procedure_definition SEMICOL .

    END             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    DCL             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SYN             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    TYPE            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    ID              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    EXIT            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    IF              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    $end            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)


state 137

    (148) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (149) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL END
    (150) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL statement_list END
    (151) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL statement_list END
    (152) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL END
    (153) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL END
    (154) procedure_definition -> PROC LPAREN . RPAREN SEMICOL statement_list END
    (155) procedure_definition -> PROC LPAREN . RPAREN SEMICOL END
    (156) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (157) formal_parameter_list -> . formal_parameter
    (158) formal_parameter -> . identifier_list parameter_spec
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    RPAREN          shift and go to state 170
    ID              shift and go to state 12

    formal_parameter               shift and go to state 171
    formal_parameter_list          shift and go to state 172
    identifier                     shift and go to state 43
    identifier_list                shift and go to state 173

state 138

    (13) action_statement -> label_id COLON action SEMICOL .

    END             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    DCL             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    SYN             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    TYPE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ID              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    EXIT            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    IF              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    FI              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    $end            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSIF           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)


state 139

    (15) declaration_list -> declaration_list COMMA declaration .

    SEMICOL         reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)


state 140

    (58) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ASSIGN          reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)


state 141

    (51) array_mode -> ARRAY LBRACK . index_mode_list RBRACK element_mode
    (52) index_mode_list -> . index_mode_list COMMA index_mode
    (53) index_mode_list -> . index_mode
    (54) index_mode -> . discrete_mode
    (55) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (43) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (44) lower_bound -> . expression
    (42) discrete_mode_name -> . identifier
    (91) expression -> . operand0
    (59) identifier -> . ID
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    ID              shift and go to state 12
    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    identifier                     shift and go to state 174
    expression                     shift and go to state 175
    index_mode_list                shift and go to state 176
    operand2                       shift and go to state 55
    lower_bound                    shift and go to state 177
    literal_range                  shift and go to state 178
    integer_mode                   shift and go to state 88
    discrete_mode_name             shift and go to state 89
    boolean_mode                   shift and go to state 86
    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    discrete_range_mode            shift and go to state 94
    operand0                       shift and go to state 52
    index_mode                     shift and go to state 179
    discrete_mode                  shift and go to state 180
    character_mode                 shift and go to state 98
    operand3                       shift and go to state 57

state 142

    (46) reference_mode -> REF mode .

    RPAREN          reduce using rule 46 (reference_mode -> REF mode .)
    LOC             reduce using rule 46 (reference_mode -> REF mode .)
    ASSIGN          reduce using rule 46 (reference_mode -> REF mode .)
    SEMICOL         reduce using rule 46 (reference_mode -> REF mode .)
    COMMA           reduce using rule 46 (reference_mode -> REF mode .)


state 143

    (49) string_mode -> CHARS LBRACK . string_length RBRACK
    (50) string_length -> . integer_literal
    (83) integer_literal -> . ICONST

    ICONST          shift and go to state 181

    string_length                  shift and go to state 183
    integer_literal                shift and go to state 182

state 144

    (39) discrete_range_mode -> discrete_mode_name LPAREN . literal_range RPAREN
    (43) literal_range -> . lower_bound COLON upper_bound
    (44) lower_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    operand4                       shift and go to state 50
    expression                     shift and go to state 175
    literal_range                  shift and go to state 184
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    lower_bound                    shift and go to state 177
    monadic_operator               shift and go to state 49
    operand3                       shift and go to state 57

state 145

    (19) initialization -> ASSIGN . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    expression                     shift and go to state 185
    operand3                       shift and go to state 57

state 146

    (17) declaration -> identifier_list mode initialization .

    SEMICOL         reduce using rule 17 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 17 (declaration -> identifier_list mode initialization .)


state 147

    (40) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (43) literal_range -> . lower_bound COLON upper_bound
    (44) lower_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    expression                     shift and go to state 175
    literal_range                  shift and go to state 186
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    lower_bound                    shift and go to state 177
    operand4                       shift and go to state 50
    monadic_operator               shift and go to state 49
    operand3                       shift and go to state 57

state 148

    (89) expression_list -> expression_list COMMA . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    expression                     shift and go to state 187
    operand3                       shift and go to state 57

state 149

    (74) array_element -> array_location LBRACK expression_list RBRACK .

    ARROW           reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    ASSIGN          reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    PLUSASSIGN      reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    MINUSASSIGN     reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    TIMESASSIGN     reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIVIDEASSIGN    reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    PERCASSIGN      reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    CONCATASSIGN    reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    LBRACK          reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)


state 150

    (75) array_slice -> array_location LBRACK lower_bound COLON . upper_bound RBRACK
    (45) upper_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    upper_bound                    shift and go to state 188
    expression                     shift and go to state 189
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    operand4                       shift and go to state 50
    monadic_operator               shift and go to state 49
    operand3                       shift and go to state 57

state 151

    (95) operand0 -> operand0 operator1 operand1 .
    (108) operand1 -> operand1 . operator2 operand2
    (109) operator2 -> . arithmetic_additive_operator
    (110) operator2 -> . string_concatenation_operator
    (111) arithmetic_additive_operator -> . PLUS
    (112) arithmetic_additive_operator -> . MINUS
    (113) string_concatenation_operator -> . CONCAT

    AND             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    EQUALS          reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    DIF             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    GTR             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    GEQ             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    LSS             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    LEQ             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    RBRACK          reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    SEMICOL         reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    THEN            reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 115
    CONCAT          shift and go to state 117

    arithmetic_additive_operator   shift and go to state 116
    operator2                      shift and go to state 120
    string_concatenation_operator  shift and go to state 119

state 152

    (108) operand1 -> operand1 operator2 operand2 .
    (115) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (116) arithmetic_multiplicative_operator -> . TIMES
    (117) arithmetic_multiplicative_operator -> . DIVIDE
    (118) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    CONCAT          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    EQUALS          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    DIF             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    GTR             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    GEQ             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    LSS             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    LEQ             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    SEMICOL         reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    RBRACK          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    THEN            reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 124
    DIVIDE          shift and go to state 123
    PERC            shift and go to state 121

    arithmetic_multiplicative_operator shift and go to state 122

state 153

    (115) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PERC            reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    CONCAT          reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUALS          reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIF             reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GTR             reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GEQ             reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LSS             reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LEQ             reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACK          reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMICOL         reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    THEN            reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 115 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 154

    (145) else_clause -> ELSIF . boolean_expression then_clause else_clause
    (146) else_clause -> ELSIF . boolean_expression then_clause
    (93) boolean_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    expression                     shift and go to state 51
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    boolean_expression             shift and go to state 190
    operand3                       shift and go to state 57

state 155

    (140) if_action -> IF boolean_expression then_clause FI .

    SEMICOL         reduce using rule 140 (if_action -> IF boolean_expression then_clause FI .)


state 156

    (139) if_action -> IF boolean_expression then_clause else_clause . FI

    FI              shift and go to state 191


state 157

    (143) else_clause -> ELSE . action_statement_list
    (144) else_clause -> ELSE . empty
    (124) action_statement_list -> . action_statement_list action_statement
    (125) action_statement_list -> . action_statement
    (165) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 165 (empty -> .)
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    action_statement_list          shift and go to state 192
    label_id                       shift and go to state 159
    bracketed_action               shift and go to state 13
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    empty                          shift and go to state 193
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    exit_action                    shift and go to state 5
    dereferenced_reference         shift and go to state 20
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    string_element                 shift and go to state 23
    array_slice                    shift and go to state 21
    if_action                      shift and go to state 28
    action_statement               shift and go to state 161

state 158

    (141) then_clause -> THEN action_statement_list .
    (124) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    ELSE            reduce using rule 141 (then_clause -> THEN action_statement_list .)
    ELSIF           reduce using rule 141 (then_clause -> THEN action_statement_list .)
    FI              reduce using rule 141 (then_clause -> THEN action_statement_list .)
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 159
    bracketed_action               shift and go to state 13
    assignment_action              shift and go to state 14
    array_element                  shift and go to state 9
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    exit_action                    shift and go to state 5
    dereferenced_reference         shift and go to state 20
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    string_element                 shift and go to state 23
    array_slice                    shift and go to state 21
    if_action                      shift and go to state 28
    action_statement               shift and go to state 194

state 159

    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 195


state 160

    (142) then_clause -> THEN empty .

    ELSE            reduce using rule 142 (then_clause -> THEN empty .)
    ELSIF           reduce using rule 142 (then_clause -> THEN empty .)
    FI              reduce using rule 142 (then_clause -> THEN empty .)


state 161

    (125) action_statement_list -> action_statement .

    ID              reduce using rule 125 (action_statement_list -> action_statement .)
    EXIT            reduce using rule 125 (action_statement_list -> action_statement .)
    IF              reduce using rule 125 (action_statement_list -> action_statement .)
    FI              reduce using rule 125 (action_statement_list -> action_statement .)
    ELSE            reduce using rule 125 (action_statement_list -> action_statement .)
    ELSIF           reduce using rule 125 (action_statement_list -> action_statement .)


state 162

    (20) synonym_list -> synonym_list COMMA synonym_definition .

    SEMICOL         reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)
    COMMA           reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)


state 163

    (22) synonym_definition -> identifier_list mode ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    expression                     shift and go to state 164
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    constant_expression            shift and go to state 196
    operand4                       shift and go to state 50
    operand3                       shift and go to state 57

state 164

    (24) constant_expression -> expression .

    SEMICOL         reduce using rule 24 (constant_expression -> expression .)
    COMMA           reduce using rule 24 (constant_expression -> expression .)


state 165

    (23) synonym_definition -> identifier_list ASSIGN constant_expression .

    SEMICOL         reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)
    COMMA           reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)


state 166

    (25) newmode_list -> newmode_list COMMA mode_definition .

    SEMICOL         reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)


state 167

    (27) mode_definition -> identifier_list ASSIGN mode .

    SEMICOL         reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)


state 168

    (73) right_element -> integer_expression .

    RBRACK          reduce using rule 73 (right_element -> integer_expression .)


state 169

    (70) string_slice -> string_location LBRACK left_element COLON right_element . RBRACK

    RBRACK          shift and go to state 197


state 170

    (151) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL statement_list END
    (153) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL END
    (154) procedure_definition -> PROC LPAREN RPAREN . SEMICOL statement_list END
    (155) procedure_definition -> PROC LPAREN RPAREN . SEMICOL END
    (162) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (163) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 199
    RETURNS         shift and go to state 200

    result_spec                    shift and go to state 198

state 171

    (157) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 157 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 157 (formal_parameter_list -> formal_parameter .)


state 172

    (148) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL statement_list END
    (149) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL END
    (150) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL statement_list END
    (152) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL END
    (156) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 202
    COMMA           shift and go to state 201


state 173

    (158) formal_parameter -> identifier_list . parameter_spec
    (58) identifier_list -> identifier_list . COMMA identifier
    (159) parameter_spec -> . mode parameter_attribute
    (160) parameter_spec -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    COMMA           shift and go to state 80
    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    composite_mode                 shift and go to state 90
    array_mode                     shift and go to state 81
    mode                           shift and go to state 204
    discrete_mode_name             shift and go to state 89
    discrete_range_mode            shift and go to state 94
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    identifier                     shift and go to state 85
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    parameter_spec                 shift and go to state 203
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 174

    (42) discrete_mode_name -> identifier .

    LPAREN          reduce using rule 42 (discrete_mode_name -> identifier .)


state 175

    (44) lower_bound -> expression .

    COLON           reduce using rule 44 (lower_bound -> expression .)


state 176

    (51) array_mode -> ARRAY LBRACK index_mode_list . RBRACK element_mode
    (52) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACK          shift and go to state 206
    COMMA           shift and go to state 205


state 177

    (43) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 207


state 178

    (55) index_mode -> literal_range .

    RBRACK          reduce using rule 55 (index_mode -> literal_range .)
    COMMA           reduce using rule 55 (index_mode -> literal_range .)


state 179

    (53) index_mode_list -> index_mode .

    RBRACK          reduce using rule 53 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 53 (index_mode_list -> index_mode .)


state 180

    (54) index_mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACK          reduce using rule 54 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 54 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 147


state 181

    (83) integer_literal -> ICONST .

    RBRACK          reduce using rule 83 (integer_literal -> ICONST .)


state 182

    (50) string_length -> integer_literal .

    RBRACK          reduce using rule 50 (string_length -> integer_literal .)


state 183

    (49) string_mode -> CHARS LBRACK string_length . RBRACK

    RBRACK          shift and go to state 208


state 184

    (39) discrete_range_mode -> discrete_mode_name LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 209


state 185

    (19) initialization -> ASSIGN expression .

    SEMICOL         reduce using rule 19 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 19 (initialization -> ASSIGN expression .)


state 186

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 210


state 187

    (89) expression_list -> expression_list COMMA expression .

    RBRACK          reduce using rule 89 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 89 (expression_list -> expression_list COMMA expression .)


state 188

    (75) array_slice -> array_location LBRACK lower_bound COLON upper_bound . RBRACK

    RBRACK          shift and go to state 211


state 189

    (45) upper_bound -> expression .

    RBRACK          reduce using rule 45 (upper_bound -> expression .)
    COMMA           reduce using rule 45 (upper_bound -> expression .)
    RPAREN          reduce using rule 45 (upper_bound -> expression .)


state 190

    (145) else_clause -> ELSIF boolean_expression . then_clause else_clause
    (146) else_clause -> ELSIF boolean_expression . then_clause
    (141) then_clause -> . THEN action_statement_list
    (142) then_clause -> . THEN empty

    THEN            shift and go to state 126

    then_clause                    shift and go to state 212

state 191

    (139) if_action -> IF boolean_expression then_clause else_clause FI .

    SEMICOL         reduce using rule 139 (if_action -> IF boolean_expression then_clause else_clause FI .)


state 192

    (143) else_clause -> ELSE action_statement_list .
    (124) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 143 (else_clause -> ELSE action_statement_list .)
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 159
    bracketed_action               shift and go to state 13
    assignment_action              shift and go to state 14
    array_element                  shift and go to state 9
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    exit_action                    shift and go to state 5
    dereferenced_reference         shift and go to state 20
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    string_element                 shift and go to state 23
    array_slice                    shift and go to state 21
    if_action                      shift and go to state 28
    action_statement               shift and go to state 194

state 193

    (144) else_clause -> ELSE empty .

    FI              reduce using rule 144 (else_clause -> ELSE empty .)


state 194

    (124) action_statement_list -> action_statement_list action_statement .

    ID              reduce using rule 124 (action_statement_list -> action_statement_list action_statement .)
    EXIT            reduce using rule 124 (action_statement_list -> action_statement_list action_statement .)
    IF              reduce using rule 124 (action_statement_list -> action_statement_list action_statement .)
    FI              reduce using rule 124 (action_statement_list -> action_statement_list action_statement .)
    ELSE            reduce using rule 124 (action_statement_list -> action_statement_list action_statement .)
    ELSIF           reduce using rule 124 (action_statement_list -> action_statement_list action_statement .)


state 195

    (13) action_statement -> label_id COLON . action SEMICOL
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (59) identifier -> . ID
    (71) string_location -> . location
    (76) array_location -> . location

    EXIT            shift and go to state 19
    IF              shift and go to state 11
    ID              shift and go to state 12

    string_location                shift and go to state 1
    bracketed_action               shift and go to state 13
    assignment_action              shift and go to state 14
    string_element                 shift and go to state 23
    identifier                     shift and go to state 74
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    exit_action                    shift and go to state 5
    dereferenced_reference         shift and go to state 20
    location_name                  shift and go to state 7
    action                         shift and go to state 75
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 21
    if_action                      shift and go to state 28

state 196

    (22) synonym_definition -> identifier_list mode ASSIGN constant_expression .

    SEMICOL         reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)
    COMMA           reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)


state 197

    (70) string_slice -> string_location LBRACK left_element COLON right_element RBRACK .

    ARROW           reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    ASSIGN          reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PLUSASSIGN      reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    MINUSASSIGN     reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    TIMESASSIGN     reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PERCASSIGN      reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    CONCATASSIGN    reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    LBRACK          reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)


state 198

    (151) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL statement_list END
    (153) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 213


state 199

    (154) procedure_definition -> PROC LPAREN RPAREN SEMICOL . statement_list END
    (155) procedure_definition -> PROC LPAREN RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 214
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 25
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    statement_list                 shift and go to state 215
    bracketed_action               shift and go to state 13

state 200

    (162) result_spec -> RETURNS . LPAREN mode result_attribute RPAREN
    (163) result_spec -> RETURNS . LPAREN mode RPAREN

    LPAREN          shift and go to state 216


state 201

    (156) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (158) formal_parameter -> . identifier_list parameter_spec
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 12

    identifier                     shift and go to state 43
    formal_parameter               shift and go to state 217
    identifier_list                shift and go to state 173

state 202

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL statement_list END
    (149) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL END
    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL statement_list END
    (152) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL END
    (162) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (163) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 219
    RETURNS         shift and go to state 200

    result_spec                    shift and go to state 218

state 203

    (158) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 158 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 158 (formal_parameter -> identifier_list parameter_spec .)


state 204

    (159) parameter_spec -> mode . parameter_attribute
    (160) parameter_spec -> mode .
    (161) parameter_attribute -> . LOC

    RPAREN          reduce using rule 160 (parameter_spec -> mode .)
    COMMA           reduce using rule 160 (parameter_spec -> mode .)
    LOC             shift and go to state 221

    parameter_attribute            shift and go to state 220

state 205

    (52) index_mode_list -> index_mode_list COMMA . index_mode
    (54) index_mode -> . discrete_mode
    (55) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (43) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (44) lower_bound -> . expression
    (42) discrete_mode_name -> . identifier
    (91) expression -> . operand0
    (59) identifier -> . ID
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    ID              shift and go to state 12
    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    identifier                     shift and go to state 174
    expression                     shift and go to state 175
    operand2                       shift and go to state 55
    lower_bound                    shift and go to state 177
    literal_range                  shift and go to state 178
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    discrete_mode_name             shift and go to state 89
    operand1                       shift and go to state 53
    monadic_operator               shift and go to state 49
    operand4                       shift and go to state 50
    discrete_range_mode            shift and go to state 94
    operand0                       shift and go to state 52
    index_mode                     shift and go to state 222
    discrete_mode                  shift and go to state 180
    character_mode                 shift and go to state 98
    operand3                       shift and go to state 57

state 206

    (51) array_mode -> ARRAY LBRACK index_mode_list RBRACK . element_mode
    (56) element_mode -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    element_mode                   shift and go to state 223
    composite_mode                 shift and go to state 90
    array_mode                     shift and go to state 81
    mode                           shift and go to state 224
    discrete_mode_name             shift and go to state 89
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    identifier                     shift and go to state 85
    discrete_range_mode            shift and go to state 94
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 207

    (43) literal_range -> lower_bound COLON . upper_bound
    (45) upper_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (114) operand2 -> . operand3
    (115) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (119) operand3 -> . monadic_operator operand4
    (120) operand3 -> . operand4
    (121) monadic_operator -> . MINUS
    (122) monadic_operator -> . NOT
    (123) operand4 -> . ICONST

    MINUS           shift and go to state 47
    NOT             shift and go to state 48
    ICONST          shift and go to state 54

    operand1                       shift and go to state 53
    upper_bound                    shift and go to state 225
    expression                     shift and go to state 189
    operand0                       shift and go to state 52
    operand2                       shift and go to state 55
    operand4                       shift and go to state 50
    monadic_operator               shift and go to state 49
    operand3                       shift and go to state 57

state 208

    (49) string_mode -> CHARS LBRACK string_length RBRACK .

    ASSIGN          reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    LOC             reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    RPAREN          reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    COMMA           reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    SEMICOL         reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)


state 209

    (39) discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    LOC             reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)


state 210

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 211

    (75) array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .

    ARROW           reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ASSIGN          reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUSASSIGN      reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUSASSIGN     reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TIMESASSIGN     reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDEASSIGN    reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PERCASSIGN      reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCATASSIGN    reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LBRACK          reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)


state 212

    (145) else_clause -> ELSIF boolean_expression then_clause . else_clause
    (146) else_clause -> ELSIF boolean_expression then_clause .
    (143) else_clause -> . ELSE action_statement_list
    (144) else_clause -> . ELSE empty
    (145) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (146) else_clause -> . ELSIF boolean_expression then_clause

    FI              reduce using rule 146 (else_clause -> ELSIF boolean_expression then_clause .)
    ELSE            shift and go to state 157
    ELSIF           shift and go to state 154

    else_clause                    shift and go to state 226

state 213

    (151) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . statement_list END
    (153) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 227
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 25
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    statement_list                 shift and go to state 228
    bracketed_action               shift and go to state 13

state 214

    (155) procedure_definition -> PROC LPAREN RPAREN SEMICOL END .

    SEMICOL         reduce using rule 155 (procedure_definition -> PROC LPAREN RPAREN SEMICOL END .)


state 215

    (154) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 229
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 64
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    bracketed_action               shift and go to state 13

state 216

    (162) result_spec -> RETURNS LPAREN . mode result_attribute RPAREN
    (163) result_spec -> RETURNS LPAREN . mode RPAREN
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 84
    ID              shift and go to state 12
    INT             shift and go to state 79
    BOOL            shift and go to state 97
    CHAR            shift and go to state 95
    CHARS           shift and go to state 87
    ARRAY           shift and go to state 82

    identifier                     shift and go to state 85
    array_mode                     shift and go to state 81
    mode                           shift and go to state 230
    discrete_mode_name             shift and go to state 89
    string_mode                    shift and go to state 83
    reference_mode                 shift and go to state 92
    mode_name                      shift and go to state 93
    composite_mode                 shift and go to state 90
    discrete_range_mode            shift and go to state 94
    discrete_mode                  shift and go to state 96
    boolean_mode                   shift and go to state 86
    integer_mode                   shift and go to state 88
    character_mode                 shift and go to state 98

state 217

    (156) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 156 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 156 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 218

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL statement_list END
    (149) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 231


state 219

    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . statement_list END
    (152) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 232
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 25
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    statement_list                 shift and go to state 233
    bracketed_action               shift and go to state 13

state 220

    (159) parameter_spec -> mode parameter_attribute .

    RPAREN          reduce using rule 159 (parameter_spec -> mode parameter_attribute .)
    COMMA           reduce using rule 159 (parameter_spec -> mode parameter_attribute .)


state 221

    (161) parameter_attribute -> LOC .

    RPAREN          reduce using rule 161 (parameter_attribute -> LOC .)
    COMMA           reduce using rule 161 (parameter_attribute -> LOC .)


state 222

    (52) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACK          reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)


state 223

    (51) array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .

    ASSIGN          reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    SEMICOL         reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    COMMA           reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    LOC             reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    RPAREN          reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)


state 224

    (56) element_mode -> mode .

    ASSIGN          reduce using rule 56 (element_mode -> mode .)
    SEMICOL         reduce using rule 56 (element_mode -> mode .)
    COMMA           reduce using rule 56 (element_mode -> mode .)
    LOC             reduce using rule 56 (element_mode -> mode .)
    RPAREN          reduce using rule 56 (element_mode -> mode .)


state 225

    (43) literal_range -> lower_bound COLON upper_bound .

    RBRACK          reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)
    RPAREN          reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)


state 226

    (145) else_clause -> ELSIF boolean_expression then_clause else_clause .

    FI              reduce using rule 145 (else_clause -> ELSIF boolean_expression then_clause else_clause .)


state 227

    (153) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 153 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .)


state 228

    (151) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 234
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 64
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    bracketed_action               shift and go to state 13

state 229

    (154) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 154 (procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .)


state 230

    (162) result_spec -> RETURNS LPAREN mode . result_attribute RPAREN
    (163) result_spec -> RETURNS LPAREN mode . RPAREN
    (164) result_attribute -> . LOC

    RPAREN          shift and go to state 237
    LOC             shift and go to state 236

    result_attribute               shift and go to state 235

state 231

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . statement_list END
    (149) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 238
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 25
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    statement_list                 shift and go to state 239
    bracketed_action               shift and go to state 13

state 232

    (152) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .

    SEMICOL         reduce using rule 152 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .)


state 233

    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 240
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 64
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    bracketed_action               shift and go to state 13

state 234

    (151) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 151 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .)


state 235

    (162) result_spec -> RETURNS LPAREN mode result_attribute . RPAREN

    RPAREN          shift and go to state 241


state 236

    (164) result_attribute -> LOC .

    RPAREN          reduce using rule 164 (result_attribute -> LOC .)


state 237

    (163) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMICOL         reduce using rule 163 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 238

    (149) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 149 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .)


state 239

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (126) label_id -> . identifier
    (127) action -> . bracketed_action
    (128) action -> . assignment_action
    (129) action -> . exit_action
    (59) identifier -> . ID
    (130) bracketed_action -> . if_action
    (131) assignment_action -> . location assigning_operator expression
    (147) exit_action -> . EXIT label_id
    (139) if_action -> . IF boolean_expression then_clause else_clause FI
    (140) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 242
    DCL             shift and go to state 6
    SYN             shift and go to state 17
    TYPE            shift and go to state 30
    ID              shift and go to state 12
    EXIT            shift and go to state 19
    IF              shift and go to state 11

    string_location                shift and go to state 1
    label_id                       shift and go to state 2
    declaration_statement          shift and go to state 3
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 14
    identifier                     shift and go to state 15
    location                       shift and go to state 4
    string_slice                   shift and go to state 18
    array_location                 shift and go to state 10
    dereferenced_reference         shift and go to state 20
    exit_action                    shift and go to state 5
    array_slice                    shift and go to state 21
    location_name                  shift and go to state 7
    action                         shift and go to state 22
    procedure_statement            shift and go to state 8
    string_element                 shift and go to state 23
    newmode_statement              shift and go to state 24
    statement                      shift and go to state 64
    synonym_statement              shift and go to state 26
    action_statement               shift and go to state 27
    if_action                      shift and go to state 28
    bracketed_action               shift and go to state 13

state 240

    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 150 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .)


state 241

    (162) result_spec -> RETURNS LPAREN mode result_attribute RPAREN .

    SEMICOL         reduce using rule 162 (result_spec -> RETURNS LPAREN mode result_attribute RPAREN .)


state 242

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 148 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 4 resolved using rule (string_location -> location)
WARNING: rejected rule (array_location -> location) in state 4
WARNING: Rule (array_location -> location) is never reduced
