
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D56CEFF88DDBF9A29F98BAC3A47463E6'
    
_lr_action_items = {'FALSE':([5,15,39,49,60,68,72,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[50,50,50,50,50,50,50,50,50,50,50,-151,-155,50,-156,-153,-154,-152,-157,50,-125,-126,-124,-123,-122,50,-109,-112,-110,-118,-116,-113,50,-114,-115,-117,-111,-119,-129,50,-130,-131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'PROC':([103,],[194,]),'COLON':([1,3,7,9,17,23,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,88,110,123,124,126,127,151,152,189,190,197,208,209,211,214,215,216,218,241,245,253,262,271,274,277,295,298,315,325,326,],[-60,-141,-64,-59,-62,103,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,161,-67,-71,-101,210,-138,-132,-133,-43,239,-191,-202,-68,-121,-108,-128,261,-94,-73,-190,-201,-91,308,-43,-66,-70,-99,-74,-100,-92,]),'LENGTH':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[10,10,10,10,-3,-8,10,-5,-6,10,-4,-7,10,10,10,10,10,10,-140,10,10,-14,10,10,-2,10,-151,-155,10,-156,-153,-154,-152,-157,10,-125,-126,-124,-123,-122,10,-109,-112,-110,-118,-116,-113,10,-114,-115,-117,-111,-119,-129,10,-130,-131,10,10,10,-139,-9,10,10,-10,-11,10,10,10,10,10,10,10,10,10,10,10,10,10,-13,-12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'RETURN':([0,8,18,22,24,26,27,40,41,87,92,97,103,104,161,162,165,166,187,202,205,223,234,237,242,243,285,320,340,341,345,349,352,353,359,],[5,5,-3,-8,5,-5,-6,-4,-7,-140,5,-14,5,-2,5,5,-139,-9,5,-10,-11,5,5,5,-13,-12,5,5,5,5,5,5,5,5,5,]),'CCONST':([5,15,39,49,60,68,72,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[63,63,63,63,63,63,63,63,63,63,63,-151,-155,63,-156,-153,-154,-152,-157,63,-125,-126,-124,-123,-122,63,-109,-112,-110,-118,-116,-113,63,-114,-115,-117,-111,-119,-129,63,-130,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ARROW':([1,3,5,7,9,15,17,25,29,32,33,34,35,39,43,49,60,68,71,72,77,78,80,91,100,105,106,107,108,109,110,111,112,113,114,122,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,197,201,208,209,210,213,219,225,228,230,231,235,239,240,241,245,246,247,253,256,257,261,277,295,299,303,305,308,309,315,],[-60,-66,53,-64,-59,53,-62,-65,-61,-188,-58,110,-63,53,-189,53,53,53,-65,53,53,110,-66,53,53,53,-151,-155,53,-156,-67,-153,-154,-152,-157,53,110,-125,-126,-124,-123,-122,53,-109,-112,-110,-118,-116,-113,53,-114,-115,-117,-111,-119,-129,53,-130,-131,53,-191,53,-202,-68,53,53,53,53,53,53,53,53,53,53,-73,-190,53,53,-201,53,53,53,-66,-70,53,53,53,53,53,-74,]),'CONCATASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,110,197,208,209,241,245,253,295,315,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,114,-63,-189,-66,-67,-191,-202,-68,-73,-190,-201,-70,-74,]),'LEQ':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,138,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'EQUALS':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,140,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'RBRACK':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,110,123,124,125,127,151,152,170,173,175,176,184,185,186,189,191,197,208,209,211,214,215,217,218,241,245,253,254,255,262,272,273,275,276,280,281,286,287,288,295,298,301,311,312,315,325,326,332,333,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-67,-69,-101,209,-138,-132,-133,-33,-35,-38,-36,-32,-37,-34,-96,241,-191,-202,-68,-121,-108,-128,262,-94,-73,-190,-201,-72,295,-91,-54,-53,-52,310,313,-49,-44,315,-95,-70,-99,326,-40,-39,-74,-100,-92,-42,-51,]),'DO':([0,8,18,22,24,26,27,40,41,87,92,97,103,104,161,162,165,166,187,202,205,223,234,237,242,243,285,320,340,341,345,349,352,353,359,],[8,8,-3,-8,8,-5,-6,-4,-7,-140,8,-14,8,-2,8,8,-139,-9,8,-10,-11,8,8,8,-13,-12,8,8,8,8,8,8,8,8,8,]),'RETURNS':([291,322,],[318,318,]),'ARRAY':([33,94,95,115,171,204,229,289,310,339,],[-58,172,-56,172,172,172,-57,172,172,172,]),'COMMA':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,93,94,95,96,110,115,116,117,119,120,121,127,151,152,168,169,170,173,175,176,177,178,179,180,182,183,184,185,186,189,191,195,196,197,198,207,208,209,211,214,215,217,218,224,226,227,229,241,245,248,249,250,251,252,253,262,270,272,273,275,276,286,288,289,290,292,293,294,295,298,311,312,313,315,316,317,325,326,332,333,334,335,337,338,343,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,167,174,-56,-16,-67,174,-21,203,174,206,-26,-138,-132,-133,-46,-18,-33,-35,-38,-36,-47,-29,-41,-30,-31,-28,-32,-37,-34,-96,240,-194,246,-191,-193,246,-202,-68,-121,-108,-128,240,-94,-15,-17,-45,-57,-73,-190,-24,-23,-20,-27,-25,-201,-91,-19,-54,-53,-52,309,-44,-95,174,-220,321,-192,-22,-70,-99,-40,-39,-48,-74,-223,-221,-100,-92,-42,-51,-55,-50,-222,-224,-219,]),'LOWER':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[11,11,11,11,-3,-8,11,-5,-6,11,-4,-7,11,11,11,11,11,11,-140,11,11,-14,11,11,-2,11,-151,-155,11,-156,-153,-154,-152,-157,11,-125,-126,-124,-123,-122,11,-109,-112,-110,-118,-116,-113,11,-114,-115,-117,-111,-119,-129,11,-130,-131,11,11,11,-139,-9,11,11,-10,-11,11,11,11,11,11,11,11,11,11,11,11,11,11,-13,-12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'DCL':([0,18,22,24,26,27,40,41,97,104,166,202,205,242,243,320,340,341,345,349,352,353,359,],[13,-3,-8,13,-5,-6,-4,-7,-14,-2,-9,-10,-11,-13,-12,13,13,13,13,13,13,13,13,]),'TIMESASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,110,197,208,209,241,245,253,295,315,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,112,-63,-189,-66,-67,-191,-202,-68,-73,-190,-201,-70,-74,]),'OR':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,136,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'PRINT':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[38,38,38,38,-3,-8,38,-5,-6,38,-4,-7,38,38,38,38,38,38,-140,38,38,-14,38,38,-2,38,-151,-155,38,-156,-153,-154,-152,-157,38,-125,-126,-124,-123,-122,38,-109,-112,-110,-118,-116,-113,38,-114,-115,-117,-111,-119,-129,38,-130,-131,38,38,38,-139,-9,38,38,-10,-11,38,38,38,38,38,38,38,38,38,38,38,38,38,-13,-12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'NUM':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[19,19,19,19,-3,-8,19,-5,-6,19,-4,-7,19,19,19,19,19,19,-140,19,19,-14,19,19,-2,19,-151,-155,19,-156,-153,-154,-152,-157,19,-125,-126,-124,-123,-122,19,-109,-112,-110,-118,-116,-113,19,-114,-115,-117,-111,-119,-129,19,-130,-131,19,19,19,-139,-9,19,19,-10,-11,19,19,19,19,19,19,19,19,19,19,19,19,19,-13,-12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'CHAR':([33,94,95,115,171,204,220,228,229,268,289,309,310,339,],[-58,175,-56,175,175,175,175,175,-57,175,175,175,175,175,]),'DOWN':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,110,124,127,151,152,155,157,197,208,209,211,214,215,218,241,245,253,262,263,264,265,295,298,304,315,325,326,330,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-67,-101,-138,-132,-133,-180,221,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-184,-181,306,-70,-99,329,-74,-100,-92,-182,]),'THEN':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,98,99,110,127,134,151,152,197,208,209,211,214,215,218,241,245,253,262,282,295,296,298,315,324,325,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-102,187,-67,-138,213,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,187,-70,213,-99,-74,213,-100,-92,]),'PERCASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,110,197,208,209,241,245,253,295,315,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,109,-63,-189,-66,-67,-191,-202,-68,-73,-190,-201,-70,-74,]),'OD':([8,87,92,97,162,165,223,242,],[90,-140,164,-14,222,-139,269,-13,]),'SUCC':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[31,31,31,31,-3,-8,31,-5,-6,31,-4,-7,31,31,31,31,31,31,-140,31,31,-14,31,31,-2,31,-151,-155,31,-156,-153,-154,-152,-157,31,-125,-126,-124,-123,-122,31,-109,-112,-110,-118,-116,-113,31,-114,-115,-117,-111,-119,-129,31,-130,-131,31,31,31,-139,-9,31,31,-10,-11,31,31,31,31,31,31,31,31,31,31,31,31,31,-13,-12,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'SCONST':([5,15,39,49,60,68,72,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[64,64,64,64,64,64,64,64,64,64,64,-151,-155,64,-156,-153,-154,-152,-157,64,-125,-126,-124,-123,-122,64,-109,-112,-110,-118,-116,-113,64,-114,-115,-117,-111,-119,-129,64,-130,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'TYPE':([0,18,22,24,26,27,40,41,97,104,166,202,205,242,243,320,340,341,345,349,352,353,359,],[42,-3,-8,42,-5,-6,-4,-7,-14,-2,-9,-10,-11,-13,-12,42,42,42,42,42,42,42,42,]),'ELSE':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,87,97,110,127,151,152,165,187,188,197,208,209,211,212,214,215,218,233,234,241,242,245,253,259,260,262,295,298,314,315,323,325,326,346,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-140,-14,-67,-138,-132,-133,-139,-228,237,-191,-202,-68,-121,257,-108,-128,-94,-161,-160,-73,-13,-190,-201,257,-103,-91,-70,-99,237,-74,-106,-100,-92,-105,]),'EXIT':([0,8,18,22,24,26,27,40,41,87,92,97,103,104,161,162,165,166,187,202,205,223,234,237,242,243,285,320,340,341,345,349,352,353,359,],[20,20,-3,-8,20,-5,-6,-4,-7,-140,20,-14,20,-2,20,20,-139,-9,20,-10,-11,20,20,20,-13,-12,20,20,20,20,20,20,20,20,20,]),'PRED':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[21,21,21,21,-3,-8,21,-5,-6,21,-4,-7,21,21,21,21,21,21,-140,21,21,-14,21,21,-2,21,-151,-155,21,-156,-153,-154,-152,-157,21,-125,-126,-124,-123,-122,21,-109,-112,-110,-118,-116,-113,21,-114,-115,-117,-111,-119,-129,21,-130,-131,21,21,21,-139,-9,21,21,-10,-11,21,21,21,21,21,21,21,21,21,21,21,21,21,-13,-12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'DIF':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,142,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'TRUE':([5,15,39,49,60,68,72,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[69,69,69,69,69,69,69,69,69,69,69,-151,-155,69,-156,-153,-154,-152,-157,69,-125,-126,-124,-123,-122,69,-109,-112,-110,-118,-116,-113,69,-114,-115,-117,-111,-119,-129,69,-130,-131,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'FI':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,87,97,110,127,151,152,165,187,188,197,208,209,211,214,215,218,233,234,236,237,241,242,245,253,258,262,284,285,295,297,298,300,314,315,325,326,336,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-140,-14,-67,-138,-132,-133,-139,-228,238,-191,-202,-68,-121,-108,-128,-94,-161,-160,283,-228,-73,-13,-190,-201,298,-91,-163,-162,-70,-104,-99,325,-165,-74,-100,-92,-164,]),'CONCAT':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,129,-80,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,129,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'GTR':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,143,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'DIVIDEASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,110,197,208,209,241,245,253,295,315,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,107,-63,-189,-66,-67,-191,-202,-68,-73,-190,-201,-70,-74,]),'LPAREN':([3,5,6,10,11,15,19,21,28,31,33,38,39,45,46,49,60,68,72,77,80,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,170,173,175,176,178,179,184,185,186,194,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,266,267,273,277,299,303,305,307,308,309,311,312,318,],[-195,77,-206,-208,-207,77,-203,-204,105,-205,-58,-210,77,-209,122,77,77,77,77,77,-195,77,77,77,-151,-155,77,-156,-153,-154,-152,-157,77,-125,-126,-124,-123,-122,77,-109,-112,-110,-118,-116,-113,77,-114,-115,-117,-111,-119,-129,77,-130,-131,77,-33,-35,-38,-36,230,231,-32,-37,-34,244,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,230,231,230,231,77,77,77,230,77,77,-40,-39,339,]),'TIMES':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,61,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-80,-88,-90,-127,147,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,147,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'TO':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,110,124,127,151,152,197,208,209,211,214,215,218,241,245,253,262,263,264,265,295,298,304,306,315,325,326,329,330,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-67,-101,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-184,-181,303,-70,-99,303,303,-74,-100,-92,303,-182,]),'NULL':([5,15,39,49,60,68,72,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[57,57,57,57,57,57,57,57,57,57,57,-151,-155,57,-156,-153,-154,-152,-157,57,-125,-126,-124,-123,-122,57,-109,-112,-110,-118,-116,-113,57,-114,-115,-117,-111,-119,-129,57,-130,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'READ':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[45,45,45,45,-3,-8,45,-5,-6,45,-4,-7,45,45,45,45,45,45,-140,45,45,-14,45,45,-2,45,-151,-155,45,-156,-153,-154,-152,-157,45,-125,-126,-124,-123,-122,45,-109,-112,-110,-118,-116,-113,45,-114,-115,-117,-111,-119,-129,45,-130,-131,45,45,45,-139,-9,45,45,-10,-11,45,45,45,45,45,45,45,45,45,45,45,45,45,-13,-12,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MINUS':([1,5,7,9,15,17,29,32,33,35,39,43,49,50,51,52,54,56,57,58,59,60,61,63,64,65,66,67,69,70,71,74,76,77,78,79,80,81,83,91,100,105,106,107,108,109,110,111,112,113,114,122,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,197,201,208,209,210,211,213,214,215,218,219,225,228,230,231,235,239,240,241,245,246,247,253,256,257,261,262,277,295,299,303,305,308,309,315,326,],[-60,68,-64,-59,68,-62,-61,-188,-58,-63,68,-189,68,-86,-77,-134,-82,-84,-89,-81,128,68,-80,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,68,-135,-85,-66,-78,-137,68,68,68,-151,-155,68,-156,-67,-153,-154,-152,-157,68,-138,-125,-126,-124,-123,-122,68,-109,-112,-110,-118,-116,-113,68,-114,-115,-117,-111,-119,-129,68,-130,-131,-132,-133,68,-191,68,-202,-68,68,-121,68,128,-128,-94,68,68,68,68,68,68,68,68,-73,-190,68,68,-201,68,68,68,-91,-66,-70,68,68,68,68,68,-74,-92,]),'MINUSASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,110,197,208,209,241,245,253,295,315,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,111,-63,-189,-66,-67,-191,-202,-68,-73,-190,-201,-70,-74,]),'DIVIDE':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,61,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-80,-88,-90,-127,149,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,149,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'REF':([33,94,95,115,171,204,229,289,310,339,],[-58,171,-56,171,171,171,-57,171,171,171,]),'END':([18,22,26,27,40,41,97,104,166,202,205,242,243,320,340,341,345,349,352,353,359,],[-3,-8,-5,-6,-4,-7,-14,-2,-9,-10,-11,-13,-12,342,350,351,354,358,360,361,363,]),'ASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,95,110,115,119,155,157,168,169,170,173,175,176,177,178,179,180,182,183,184,185,186,197,200,208,209,227,229,241,245,253,295,311,312,313,315,334,335,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,106,-63,-189,-66,-56,-67,201,204,-180,219,-46,225,-33,-35,-38,-36,-47,-29,-41,-30,-31,-28,-32,-37,-34,-191,247,-202,-68,-45,-57,-73,-190,-201,-70,-40,-39,-48,-74,-55,-50,]),'$end':([4,18,22,24,26,27,40,41,97,104,166,202,205,242,243,],[0,-3,-8,-1,-5,-6,-4,-7,-14,-2,-9,-10,-11,-13,-12,]),'CHARS':([33,94,95,115,171,204,229,289,310,339,],[-58,181,-56,181,181,181,-57,181,181,181,]),'ELSIF':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,87,97,110,127,151,152,165,187,188,197,208,209,211,212,214,215,218,233,234,241,242,245,253,259,260,262,295,298,314,315,323,325,326,346,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-140,-14,-67,-138,-132,-133,-139,-228,235,-191,-202,-68,-121,256,-108,-128,-94,-161,-160,-73,-13,-190,-201,299,-103,-91,-70,-99,235,-74,-106,-100,-92,-105,]),'PLUS':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,130,-80,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,130,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'SEMICOL':([1,2,5,7,9,12,14,17,25,29,30,32,33,35,36,43,44,47,48,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,67,69,70,71,73,74,76,78,79,80,81,82,83,85,86,89,90,93,96,98,101,102,110,116,117,118,120,121,127,151,152,156,158,159,160,163,164,168,169,170,173,175,176,177,178,179,180,182,183,184,185,186,192,193,197,199,208,209,211,214,215,218,222,224,226,227,238,241,245,248,249,250,251,252,253,262,263,266,269,270,283,291,294,295,298,302,307,311,312,313,315,319,322,325,326,327,328,331,334,335,342,344,347,350,351,354,357,358,360,361,362,363,],[-60,-143,-198,-64,-59,-148,97,-62,-144,-61,-149,-188,-58,-63,-142,-189,-145,-147,-146,-86,-77,-134,-82,-200,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-197,-76,-83,-135,-85,-66,-78,-98,-137,-171,-172,162,-169,166,-16,-102,-141,-196,-67,-21,202,-199,205,-26,-138,-132,-133,-173,-174,-175,-170,-187,-168,-46,-18,-33,-35,-38,-36,-47,-29,-41,-30,-31,-28,-32,-37,-34,242,243,-191,-150,-202,-68,-121,-108,-128,-94,-167,-15,-17,-45,-159,-73,-190,-24,-23,-20,-27,-25,-201,-91,-184,-186,-166,-19,-158,320,-22,-70,-99,-179,-185,-40,-39,-48,-74,340,345,-100,-92,-183,-177,-178,-55,-50,-218,352,-176,-216,-217,-215,-226,-214,-212,-213,-225,-211,]),'INT':([33,94,95,115,171,204,220,228,229,268,289,309,310,339,],[-58,176,-56,176,176,176,176,176,-57,176,176,176,176,176,]),'ID':([0,5,8,13,15,18,20,22,24,26,27,33,37,39,40,41,42,49,53,60,68,72,77,84,87,91,92,94,95,97,100,103,104,105,106,107,108,109,111,112,113,114,115,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,167,171,174,187,201,202,203,204,205,206,210,213,219,220,223,225,228,229,230,231,234,235,237,239,240,242,243,244,246,247,256,257,261,268,285,289,299,303,305,308,309,310,320,321,339,340,341,345,349,352,353,359,],[33,33,33,33,33,-3,33,-8,33,-5,-6,-58,33,33,-4,-7,33,33,33,33,33,33,33,33,-140,33,33,33,-56,-14,33,33,-2,33,-151,-155,33,-156,-153,-154,-152,-157,33,33,-125,-126,-124,-123,-122,33,-109,-112,-110,-118,-116,-113,33,-114,-115,-117,-111,-119,-129,33,-130,-131,33,33,33,-139,-9,33,33,33,33,33,-10,33,33,-11,33,33,33,33,33,33,33,33,-57,33,33,33,33,33,33,33,-13,-12,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FOR':([8,],[84,]),'AND':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,145,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'PERC':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,61,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-80,-88,-90,-127,150,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,150,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'NOT':([5,15,39,49,60,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[72,72,72,72,72,72,72,72,72,-151,-155,72,-156,-153,-154,-152,-157,72,-125,-126,-124,-123,-122,72,-109,-112,-110,-118,-116,-113,72,-114,-115,-117,-111,-119,-129,72,-130,-131,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'LSS':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,144,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'SYN':([0,18,22,24,26,27,40,41,97,104,166,202,205,242,243,320,340,341,345,349,352,353,359,],[37,-3,-8,37,-5,-6,-4,-7,-14,-2,-9,-10,-11,-13,-12,37,37,37,37,37,37,37,37,]),'WHILE':([1,7,8,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,86,110,127,151,152,156,158,159,170,173,175,176,184,185,186,197,208,209,211,214,215,218,241,245,253,262,263,266,295,298,302,307,311,312,315,325,326,327,328,331,347,],[-60,-64,91,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,91,-67,-138,-132,-133,-173,-174,-175,-33,-35,-38,-36,-32,-37,-34,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-184,-186,-70,-99,-179,-185,-40,-39,-74,-100,-92,-183,-177,-178,-176,]),'LOC':([33,168,170,173,175,176,177,178,179,180,182,183,184,185,186,227,311,312,313,316,334,335,348,],[-58,-46,-33,-35,-38,-36,-47,-29,-41,-30,-31,-28,-32,-37,-34,-45,-40,-39,-48,338,-55,-50,356,]),'ICONST':([5,15,39,49,60,68,72,77,91,100,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,201,210,213,219,225,228,230,231,232,235,239,240,246,247,256,257,261,299,303,305,308,309,],[79,79,79,79,79,79,79,79,79,79,79,-151,-155,79,-156,-153,-154,-152,-157,79,-125,-126,-124,-123,-122,79,-109,-112,-110,-118,-116,-113,79,-114,-115,-117,-111,-119,-129,79,-130,-131,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'RESULT':([0,8,18,22,24,26,27,40,41,87,92,97,103,104,161,162,165,166,187,202,205,223,234,237,242,243,285,320,340,341,345,349,352,353,359,],[39,39,-3,-8,39,-5,-6,-4,-7,-140,39,-14,39,-2,39,39,-139,-9,39,-10,-11,39,39,39,-13,-12,39,39,39,39,39,39,39,39,39,]),'RPAREN':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,105,110,122,127,151,152,154,168,170,173,175,176,177,178,179,180,182,183,184,185,186,195,196,197,198,207,208,209,211,214,215,218,227,241,244,245,253,262,278,279,286,290,292,293,295,298,311,312,313,315,316,317,325,326,332,334,335,337,338,343,348,355,356,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,197,-67,208,-138,-132,-133,218,-46,-33,-35,-38,-36,-47,-29,-41,-30,-31,-28,-32,-37,-34,-194,245,-191,-193,253,-202,-68,-121,-108,-128,-94,-45,-73,291,-190,-201,-91,311,312,-44,-220,322,-192,-70,-99,-40,-39,-48,-74,-223,-221,-100,-92,-42,-55,-50,-222,-224,-219,357,362,-227,]),'UPPER':([0,5,8,15,18,22,24,26,27,39,40,41,49,53,60,68,72,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[6,6,6,6,-3,-8,6,-5,-6,6,-4,-7,6,6,6,6,6,6,-140,6,6,-14,6,6,-2,6,-151,-155,6,-156,-153,-154,-152,-157,6,-125,-126,-124,-123,-122,6,-109,-112,-110,-118,-116,-113,6,-114,-115,-117,-111,-119,-129,6,-130,-131,6,6,6,-139,-9,6,6,-10,-11,6,6,6,6,6,6,6,6,6,6,6,6,6,-13,-12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'GEQ':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,139,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-66,-70,-74,-92,]),'IF':([0,5,8,15,18,22,24,26,27,39,40,41,49,60,77,87,91,92,97,100,103,104,105,106,107,108,109,111,112,113,114,122,153,161,162,165,166,187,201,202,205,210,213,219,223,225,228,230,231,234,235,237,239,240,242,243,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[15,60,15,60,-3,-8,15,-5,-6,60,-4,-7,60,60,60,-140,60,15,-14,60,15,-2,60,-151,-155,60,-156,-153,-154,-152,-157,60,60,15,15,-139,-9,15,60,-10,-11,60,60,60,15,60,60,60,60,15,60,15,60,60,-13,-12,60,60,60,60,60,15,60,60,60,60,60,15,15,15,15,15,15,15,15,]),'BOOL':([33,94,95,115,171,204,220,228,229,268,289,309,310,339,],[-58,185,-56,185,185,185,185,185,-57,185,185,185,185,185,]),'LBRACK':([1,3,7,9,16,17,25,29,32,33,34,35,43,50,51,54,56,57,58,61,63,64,69,70,71,74,75,76,78,79,80,81,83,110,127,172,181,197,208,209,218,241,245,253,262,277,295,315,326,],[-60,49,-64,-59,100,-62,-65,-61,-188,-58,-75,-63,-189,-86,-77,-82,-84,-89,-81,-80,-88,-90,-87,-79,-65,-76,153,-83,-75,-85,49,-78,-93,-67,-75,228,232,-191,-202,-68,-94,-73,-190,-201,-91,49,-70,-74,-92,]),'PLUSASSIGN':([1,3,7,9,17,25,29,32,33,34,35,43,80,110,197,208,209,241,245,253,295,315,],[-60,-66,-64,-59,-62,-65,-61,-188,-58,113,-63,-189,-66,-67,-191,-202,-68,-73,-190,-201,-70,-74,]),'IN':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,83,110,127,151,152,155,157,197,208,209,211,214,215,218,221,241,245,253,262,277,295,315,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,146,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-137,-67,-138,-132,-133,-180,220,-191,-202,-68,-121,-108,-128,-94,268,-73,-190,-201,-91,-66,-70,-74,-92,]),'BY':([1,7,9,17,29,32,33,35,43,50,51,52,54,56,57,58,59,61,62,63,64,65,66,67,69,70,71,74,76,78,79,80,81,82,83,110,127,151,152,197,208,209,211,214,215,218,241,245,253,262,263,264,265,295,298,315,325,326,],[-60,-64,-59,-62,-61,-188,-58,-63,-189,-86,-77,-134,-82,-84,-89,-81,-107,-80,-97,-88,-90,-127,-120,-136,-87,-79,-65,-76,-83,-135,-85,-66,-78,-98,-137,-67,-138,-132,-133,-191,-202,-68,-121,-108,-128,-94,-73,-190,-201,-91,-184,-181,305,-70,-99,-74,-100,-92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'dereferenced_reference':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'value_array_element':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'operand4':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[52,52,52,52,52,151,152,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'relational_operator':([62,],[135,]),'string_mode':([94,115,171,204,289,310,339,],[168,168,168,168,168,168,168,]),'else_clause':([188,314,],[236,336,]),'identifier_list':([13,37,42,167,203,206,244,321,],[94,115,119,94,115,119,289,289,]),'procedure_definition':([103,],[193,]),'lower_bound':([100,153,228,230,231,309,],[190,216,271,271,271,271,]),'boolean_literal':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_length':([232,],[280,]),'string_element':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'integer_literal':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,232,235,239,240,246,247,256,257,261,299,303,305,308,309,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,281,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'string_concatenation_operator':([59,214,],[131,131,]),'statement':([0,24,320,340,341,345,349,352,353,359,],[18,104,18,18,104,18,104,18,104,104,]),'literal_range':([228,230,231,309,],[272,278,279,272,]),'discrete_mode':([94,115,171,204,220,228,268,289,309,310,339,],[178,178,178,178,266,273,307,178,273,178,178,]),'initialization':([169,],[226,]),'else_expression':([212,259,],[258,300,]),'label_id':([0,8,20,24,92,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[23,88,102,23,88,88,88,88,88,88,88,23,23,23,23,23,23,23,23,]),'upper_bound':([239,261,308,],[287,301,332,]),'composite_mode':([94,115,171,204,289,310,339,],[182,182,182,182,182,182,182,]),'action_statement':([0,8,24,92,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[22,87,22,165,87,87,165,165,87,165,22,22,22,22,22,22,22,22,]),'statement_list':([0,320,340,345,352,],[24,341,349,353,359,]),'parenthesized_expression':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'call_action':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[25,71,25,71,25,71,71,71,71,71,71,71,71,25,71,25,71,71,71,71,71,71,71,25,25,25,71,71,71,71,25,71,71,71,71,25,71,25,71,71,71,71,71,71,71,25,71,71,71,71,71,25,25,25,25,25,25,25,25,]),'parameter_attribute':([316,],[337,]),'expression':([5,15,39,49,60,77,91,100,105,108,122,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[55,98,55,124,98,154,98,189,195,199,195,189,248,124,260,263,270,274,274,274,98,286,288,195,248,98,297,286,98,263,124,286,274,]),'integer_mode':([94,115,171,204,220,228,268,289,309,310,339,],[184,184,184,184,184,184,184,184,184,184,184,]),'result_attribute':([348,],[355,]),'control_part':([8,],[89,]),'right_element':([210,],[255,]),'result':([5,39,],[73,118,]),'character_mode':([94,115,171,204,220,228,268,289,309,310,339,],[186,186,186,186,186,186,186,186,186,186,186,]),'newmode_list':([42,],[120,]),'do_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'loop_counter':([84,],[157,]),'index_mode_list':([228,],[276,]),'expression_list':([100,153,],[191,217,]),'if_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'step_enumeration':([84,],[159,]),'array_slice':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'procedure_statement':([0,24,320,340,341,345,349,352,353,359,],[41,41,41,41,41,41,41,41,41,41,]),'declaration_statement':([0,24,320,340,341,345,349,352,353,359,],[40,40,40,40,40,40,40,40,40,40,]),'action_statement_list':([8,162,187,237,],[92,223,234,285,]),'then_clause':([99,282,],[188,314,]),'reference_mode':([94,115,171,204,289,310,339,],[180,180,180,180,180,180,180,]),'elsif_expression':([212,],[259,]),'value_array_slice':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'conditional_expression':([5,15,39,49,60,77,91,100,105,108,122,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'mode_name':([94,115,171,204,289,310,339,],[183,183,183,183,183,183,183,]),'primitive_value':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'index_mode':([228,309,],[275,333,]),'result_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'result_spec':([291,322,],[319,344,]),'return_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'synonym_list':([37,],[117,]),'assignment_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'program':([0,],[4,]),'integer_expression':([49,210,305,],[123,254,330,]),'referenced_location':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'membership_operator':([62,],[137,]),'character_literal':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'formal_parameter':([244,321,],[290,343,]),'empty_literal':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'location_name':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'declaration_list':([13,],[93,]),'boolean_mode':([94,115,171,204,220,228,268,289,309,310,339,],[170,170,170,170,170,170,170,170,170,170,170,]),'character_string_literal':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[14,14,14,14,192,192,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'array_location':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'procedure_name':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'arithmetic_multiplicative_operator':([66,211,],[148,148,]),'operand0':([5,15,39,49,60,77,91,100,105,108,122,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'constant_expression':([201,247,],[249,294,]),'operand2':([5,15,39,49,60,77,91,100,105,108,122,133,141,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[66,66,66,66,66,66,66,66,66,66,66,211,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'operator1':([62,],[141,]),'parameter_spec':([289,],[317,]),'boolean_expression':([15,60,91,235,256,299,],[99,134,163,282,296,324,]),'parameter_list':([105,122,],[196,207,]),'iteration':([84,],[156,]),'while_control':([8,86,],[85,160,]),'step_value':([265,],[304,]),'synonym_definition':([37,203,],[116,250,]),'empty':([187,237,],[233,284,]),'synonym_statement':([0,24,320,340,341,345,349,352,353,359,],[26,26,26,26,26,26,26,26,26,26,]),'string_slice':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'exit_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'operand1':([5,15,39,49,60,77,91,100,105,108,122,141,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[59,59,59,59,59,59,59,59,59,59,59,214,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'mode':([94,115,171,204,289,310,339,],[169,200,227,251,316,334,348,]),'literal':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'array_primitive_value':([5,15,39,49,60,68,72,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'mode_definition':([42,206,],[121,252,]),'discrete_range_mode':([94,115,171,204,220,228,268,289,309,310,339,],[173,173,173,173,173,173,173,173,173,173,173,]),'procedure_call':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'builtin_name':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'operator2':([59,214,],[133,133,]),'location':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[34,78,34,78,34,78,78,127,78,78,78,78,78,34,78,34,78,78,78,78,78,78,78,34,34,34,78,78,78,78,34,78,78,78,78,34,78,34,78,78,78,78,78,78,78,34,78,78,78,78,78,34,34,34,34,34,34,34,34,]),'array_element':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'bracketed_action':([0,8,24,92,103,161,162,187,223,234,237,285,320,340,341,345,349,352,353,359,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'array_mode':([94,115,171,204,289,310,339,],[177,177,177,177,177,177,177,]),'then_expression':([134,296,324,],[212,323,346,]),'assigning_operator':([34,],[108,]),'start_element':([49,],[125,]),'start_value':([219,],[265,]),'left_element':([49,],[126,]),'identifier':([0,5,8,13,15,20,24,37,39,42,49,53,60,68,72,77,84,91,92,94,100,103,105,108,115,122,133,141,148,153,161,162,167,171,174,187,201,203,204,206,210,213,219,220,223,225,228,230,231,234,235,237,239,240,244,246,247,256,257,261,268,285,289,299,303,305,308,309,310,320,321,339,340,341,345,349,352,353,359,],[3,80,3,95,80,101,3,95,80,95,80,80,80,80,80,80,155,80,3,179,80,80,80,80,179,80,80,80,80,80,80,3,95,179,229,3,80,95,179,95,80,80,80,267,3,80,277,80,80,3,80,3,80,80,95,80,80,80,80,80,267,3,179,80,80,80,80,277,179,3,95,179,3,3,3,3,3,3,3,]),'end_value':([265,304,306,329,],[302,328,331,347,]),'discrete_expression':([219,303,],[264,327,]),'operand3':([5,15,39,49,60,77,91,100,105,108,122,133,141,148,153,201,210,213,219,225,228,230,231,235,239,240,246,247,256,257,261,299,303,305,308,309,],[65,65,65,65,65,65,65,65,65,65,65,65,65,215,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'builtin_call':([0,5,8,15,24,39,49,53,60,68,72,77,91,92,100,103,105,108,122,133,141,148,153,161,162,187,201,210,213,219,223,225,228,230,231,234,235,237,239,240,246,247,256,257,261,285,299,303,305,308,309,320,340,341,345,349,352,353,359,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'newmode_statement':([0,24,320,340,341,345,349,352,353,359,],[27,27,27,27,27,27,27,27,27,27,]),'parameter':([105,122,246,],[198,198,293,]),'for_control':([8,],[86,]),'formal_parameter_list':([244,],[292,]),'arithmetic_additive_operator':([59,214,],[132,132,]),'range_enumeration':([84,],[158,]),'element_mode':([310,],[335,]),'declaration':([13,167,],[96,224,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',62),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',68),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',69),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',76),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',77),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',78),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',79),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',80),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyaparser.py',84),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyaparser.py',89),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyaparser.py',94),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyaparser.py',99),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyaparser.py',104),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyaparser.py',108),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',114),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',115),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',122),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',123),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',130),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',136),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',137),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyaparser.py',144),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyaparser.py',145),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',152),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',158),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',159),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',166),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',170),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',171),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',172),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',173),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',177),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',178),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',179),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',180),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',184),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',188),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',192),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',196),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',197),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',201),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',209),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',213),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',217),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',221),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',225),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',226),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyaparser.py',230),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyaparser.py',234),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyaparser.py',238),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',242),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',243),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',250),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',251),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',255),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',261),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',262),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',269),
  ('location -> location_name','location',1,'p_location','lyaparser.py',275),
  ('location -> dereferenced_reference','location',1,'p_location','lyaparser.py',276),
  ('location -> string_element','location',1,'p_location','lyaparser.py',277),
  ('location -> string_slice','location',1,'p_location','lyaparser.py',278),
  ('location -> array_element','location',1,'p_location','lyaparser.py',279),
  ('location -> array_slice','location',1,'p_location','lyaparser.py',280),
  ('location -> call_action','location',1,'p_location','lyaparser.py',281),
  ('location_name -> identifier','location_name',1,'p_location_name','lyaparser.py',285),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaparser.py',289),
  ('string_element -> identifier LBRACK start_element RBRACK','string_element',4,'p_string_element','lyaparser.py',293),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyaparser.py',297),
  ('string_slice -> identifier LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyaparser.py',301),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyaparser.py',309),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyaparser.py',313),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyaparser.py',317),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyaparser.py',321),
  ('array_location -> location','array_location',1,'p_array_location','lyaparser.py',325),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',331),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',332),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',333),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',334),
  ('literal -> integer_literal','literal',1,'p_literal','lyaparser.py',338),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaparser.py',339),
  ('literal -> character_literal','literal',1,'p_literal','lyaparser.py',340),
  ('literal -> empty_literal','literal',1,'p_literal','lyaparser.py',341),
  ('literal -> character_string_literal','literal',1,'p_literal','lyaparser.py',342),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyaparser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaparser.py',350),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaparser.py',351),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyaparser.py',355),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaparser.py',359),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyaparser.py',363),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyaparser.py',369),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyaparser.py',373),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',377),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',383),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',387),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',388),
  ('expression -> operand0','expression',1,'p_expression','lyaparser.py',395),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',396),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',400),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyaparser.py',404),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaparser.py',408),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',412),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',416),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',420),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyaparser.py',424),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',428),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaparser.py',432),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyaparser.py',436),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaparser.py',440),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaparser.py',441),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaparser.py',445),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaparser.py',446),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyaparser.py',447),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyaparser.py',448),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyaparser.py',449),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyaparser.py',450),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyaparser.py',451),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyaparser.py',452),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaparser.py',456),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaparser.py',460),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyaparser.py',464),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaparser.py',468),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaparser.py',469),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',473),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',474),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyaparser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaparser.py',482),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyaparser.py',486),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',490),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',491),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',492),
  ('operand3 -> MINUS operand4','operand3',2,'p_operand3_uminus','lyaparser.py',496),
  ('operand3 -> NOT operand4','operand3',2,'p_operand3_monadic','lyaparser.py',500),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaparser.py',504),
  ('operand4 -> location','operand4',1,'p_operand4','lyaparser.py',509),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaparser.py',510),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaparser.py',511),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',515),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',521),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',522),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',529),
  ('action -> bracketed_action','action',1,'p_action','lyaparser.py',533),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',534),
  ('action -> call_action','action',1,'p_action','lyaparser.py',535),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',536),
  ('action -> return_action','action',1,'p_action','lyaparser.py',537),
  ('action -> result_action','action',1,'p_action','lyaparser.py',538),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',542),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',543),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',547),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',552),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',553),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',554),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',555),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',556),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',557),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',558),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyaparser.py',564),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',568),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',572),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyaparser.py',576),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',580),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyaparser.py',584),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyaparser.py',588),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyaparser.py',592),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyaparser.py',596),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyaparser.py',600),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',604),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyaparser.py',608),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyaparser.py',612),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',616),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',617),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',621),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',625),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',626),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyaparser.py',630),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyaparser.py',634),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyaparser.py',638),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',642),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',646),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',650),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaparser.py',654),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',658),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',662),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration_down','lyaparser.py',666),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',670),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',674),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',680),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',681),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyaparser.py',685),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',689),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyaparser.py',693),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaparser.py',694),
  ('parameter -> expression','parameter',1,'p_parameter','lyaparser.py',701),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyaparser.py',705),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyaparser.py',709),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyaparser.py',713),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',717),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaparser.py',721),
  ('result -> expression','result',1,'p_result','lyaparser.py',725),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyaparser.py',729),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',733),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',737),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',738),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',739),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',740),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',741),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',742),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',743),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',744),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyaparser.py',750),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyaparser.py',754),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyaparser.py',758),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyaparser.py',762),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyaparser.py',766),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyaparser.py',770),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyaparser.py',774),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyaparser.py',778),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',782),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',783),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',790),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaparser.py',794),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',795),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaparser.py',802),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','lyaparser.py',806),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaparser.py',810),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaparser.py',814),
  ('empty -> <empty>','empty',0,'p_empty','lyaparser.py',820),
]
