Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CIRCUMF
    DBLQUO
    RCURL
    LCURL
    DBLSLASH
    SINGQUO

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     statement -> action_statement
Rule 9     declaration_statement -> DCL declaration_list SEMICOL
Rule 10    synonym_statement -> SYN synonym_list SEMICOL
Rule 11    newmode_statement -> TYPE newmode_list SEMICOL
Rule 12    procedure_statement -> label_id COLON procedure_definition SEMICOL
Rule 13    action_statement -> label_id COLON action SEMICOL
Rule 14    action_statement -> action SEMICOL
Rule 15    declaration_list -> declaration_list COMMA declaration
Rule 16    declaration_list -> declaration
Rule 17    declaration -> identifier_list mode initialization
Rule 18    declaration -> identifier_list mode
Rule 19    initialization -> ASSIGN expression
Rule 20    synonym_list -> synonym_list COMMA synonym_definition
Rule 21    synonym_list -> synonym_definition
Rule 22    synonym_definition -> identifier_list mode ASSIGN constant_expression
Rule 23    synonym_definition -> identifier_list ASSIGN constant_expression
Rule 24    constant_expression -> expression
Rule 25    newmode_list -> newmode_list COMMA mode_definition
Rule 26    newmode_list -> mode_definition
Rule 27    mode_definition -> identifier_list ASSIGN mode
Rule 28    mode -> mode_name
Rule 29    mode -> discrete_mode
Rule 30    mode -> reference_mode
Rule 31    mode -> composite_mode
Rule 32    discrete_mode -> integer_mode
Rule 33    discrete_mode -> boolean_mode
Rule 34    discrete_mode -> character_mode
Rule 35    discrete_mode -> discrete_range_mode
Rule 36    integer_mode -> INT
Rule 37    boolean_mode -> BOOL
Rule 38    character_mode -> CHAR
Rule 39    discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN
Rule 40    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 41    mode_name -> identifier
Rule 42    discrete_mode_name -> identifier
Rule 43    literal_range -> lower_bound COLON upper_bound
Rule 44    lower_bound -> expression
Rule 45    upper_bound -> expression
Rule 46    reference_mode -> REF mode
Rule 47    composite_mode -> string_mode
Rule 48    composite_mode -> array_mode
Rule 49    string_mode -> CHARS LBRACK string_length RBRACK
Rule 50    string_length -> integer_literal
Rule 51    array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode
Rule 52    index_mode_list -> index_mode_list COMMA index_mode
Rule 53    index_mode_list -> index_mode
Rule 54    index_mode -> discrete_mode
Rule 55    index_mode -> literal_range
Rule 56    element_mode -> mode
Rule 57    identifier_list -> identifier
Rule 58    identifier_list -> identifier_list COMMA identifier
Rule 59    identifier -> ID
Rule 60    location -> location_name
Rule 61    location -> dereferenced_reference
Rule 62    location -> string_element
Rule 63    location -> string_slice
Rule 64    location -> array_element
Rule 65    location -> array_slice
Rule 66    location -> call_action
Rule 67    location_name -> identifier
Rule 68    dereferenced_reference -> location ARROW
Rule 69    string_element -> string_location LBRACK start_element RBRACK
Rule 70    start_element -> integer_expression
Rule 71    string_slice -> string_location LBRACK left_element COLON right_element RBRACK
Rule 72    string_location -> location
Rule 73    left_element -> integer_expression
Rule 74    right_element -> integer_expression
Rule 75    array_element -> array_location LBRACK expression_list RBRACK
Rule 76    array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK
Rule 77    array_location -> location
Rule 78    primitive_value -> literal
Rule 79    primitive_value -> value_array_element
Rule 80    primitive_value -> value_array_slice
Rule 81    primitive_value -> parenthesized_expression
Rule 82    literal -> integer_literal
Rule 83    literal -> boolean_literal
Rule 84    literal -> character_literal
Rule 85    literal -> empty_literal
Rule 86    literal -> character_string_literal
Rule 87    integer_literal -> ICONST
Rule 88    boolean_literal -> FALSE
Rule 89    boolean_literal -> TRUE
Rule 90    character_literal -> CCONST
Rule 91    empty_literal -> NULL
Rule 92    character_string_literal -> SCONST
Rule 93    value_array_element -> array_primitive_value LBRACK expression_list RBRACK
Rule 94    value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
Rule 95    array_primitive_value -> primitive_value
Rule 96    parenthesized_expression -> LPAREN expression RPAREN
Rule 97    expression_list -> expression_list COMMA expression
Rule 98    expression_list -> expression
Rule 99    expression -> operand0
Rule 100   expression -> conditional_expression
Rule 101   conditional_expression -> IF boolean_expression then_expression else_expression FI
Rule 102   conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI
Rule 103   integer_expression -> expression
Rule 104   boolean_expression -> expression
Rule 105   then_expression -> THEN expression
Rule 106   else_expression -> ELSE expression
Rule 107   elsif_expression -> elsif_expression ELSIF boolean_expression then_expression
Rule 108   elsif_expression -> ELSIF boolean_expression then_expression
Rule 109   operand0 -> operand1
Rule 110   operand0 -> operand0 operator1 operand1
Rule 111   operator1 -> relational_operator
Rule 112   operator1 -> membership_operator
Rule 113   relational_operator -> AND
Rule 114   relational_operator -> OR
Rule 115   relational_operator -> EQUALS
Rule 116   relational_operator -> DIF
Rule 117   relational_operator -> GTR
Rule 118   relational_operator -> GEQ
Rule 119   relational_operator -> LSS
Rule 120   relational_operator -> LEQ
Rule 121   membership_operator -> IN
Rule 122   operand1 -> operand2
Rule 123   operand1 -> operand1 operator2 operand2
Rule 124   operator2 -> arithmetic_additive_operator
Rule 125   operator2 -> string_concatenation_operator
Rule 126   arithmetic_additive_operator -> PLUS
Rule 127   arithmetic_additive_operator -> MINUS
Rule 128   string_concatenation_operator -> CONCAT
Rule 129   operand2 -> operand3
Rule 130   operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 131   arithmetic_multiplicative_operator -> TIMES
Rule 132   arithmetic_multiplicative_operator -> DIVIDE
Rule 133   arithmetic_multiplicative_operator -> PERC
Rule 134   operand3 -> monadic_operator operand4
Rule 135   operand3 -> operand4
Rule 136   operand3 -> integer_literal
Rule 137   monadic_operator -> MINUS
Rule 138   monadic_operator -> NOT
Rule 139   operand4 -> location
Rule 140   operand4 -> referenced_location
Rule 141   operand4 -> primitive_value
Rule 142   referenced_location -> ARROW location
Rule 143   action_statement_list -> action_statement_list action_statement
Rule 144   action_statement_list -> action_statement
Rule 145   label_id -> identifier
Rule 146   action -> bracketed_action
Rule 147   action -> assignment_action
Rule 148   action -> call_action
Rule 149   action -> exit_action
Rule 150   action -> return_action
Rule 151   action -> result_action
Rule 152   bracketed_action -> if_action
Rule 153   bracketed_action -> do_action
Rule 154   assignment_action -> location assigning_operator expression
Rule 155   assigning_operator -> ASSIGN
Rule 156   assigning_operator -> PLUSASSIGN
Rule 157   assigning_operator -> MINUSASSIGN
Rule 158   assigning_operator -> TIMESASSIGN
Rule 159   assigning_operator -> DIVIDEASSIGN
Rule 160   assigning_operator -> PERCASSIGN
Rule 161   assigning_operator -> CONCATASSIGN
Rule 162   if_action -> IF boolean_expression then_clause else_clause FI
Rule 163   if_action -> IF boolean_expression then_clause FI
Rule 164   then_clause -> THEN action_statement_list
Rule 165   then_clause -> THEN empty
Rule 166   else_clause -> ELSE action_statement_list
Rule 167   else_clause -> ELSE empty
Rule 168   else_clause -> ELSIF boolean_expression then_clause else_clause
Rule 169   else_clause -> ELSIF boolean_expression then_clause
Rule 170   do_action -> DO control_part SEMICOL action_statement_list OD
Rule 171   do_action -> DO control_part SEMICOL OD
Rule 172   do_action -> DO action_statement_list OD
Rule 173   do_action -> DO OD
Rule 174   control_part -> for_control while_control
Rule 175   control_part -> while_control
Rule 176   control_part -> for_control
Rule 177   for_control -> FOR iteration
Rule 178   iteration -> range_enumeration
Rule 179   iteration -> step_enumeration
Rule 180   step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value
Rule 181   step_enumeration -> loop_counter ASSIGN start_value step_value end_value
Rule 182   step_enumeration -> loop_counter ASSIGN start_value DOWN end_value
Rule 183   step_enumeration -> loop_counter ASSIGN start_value end_value
Rule 184   loop_counter -> identifier
Rule 185   start_value -> discrete_expression
Rule 186   step_value -> BY integer_expression
Rule 187   end_value -> TO discrete_expression
Rule 188   discrete_expression -> expression
Rule 189   range_enumeration -> loop_counter DOWN IN discrete_mode_name
Rule 190   range_enumeration -> loop_counter IN discrete_mode_name
Rule 191   while_control -> WHILE boolean_expression
Rule 192   call_action -> procedure_call
Rule 193   call_action -> builtin_call
Rule 194   procedure_call -> procedure_name LPAREN parameter_list RPAREN
Rule 195   procedure_call -> procedure_name LPAREN RPAREN
Rule 196   parameter_list -> parameter_list COMMA parameter
Rule 197   parameter_list -> parameter
Rule 198   parameter -> expression
Rule 199   procedure_name -> identifier
Rule 200   exit_action -> EXIT label_id
Rule 201   return_action -> RETURN result
Rule 202   return_action -> RETURN
Rule 203   result_action -> RESULT result
Rule 204   result -> expression
Rule 205   builtin_call -> builtin_name LPAREN parameter_list RPAREN
Rule 206   builtin_call -> builtin_name LPAREN RPAREN
Rule 207   builtin_name -> NUM
Rule 208   builtin_name -> PRED
Rule 209   builtin_name -> SUCC
Rule 210   builtin_name -> UPPER
Rule 211   builtin_name -> LOWER
Rule 212   builtin_name -> LENGTH
Rule 213   builtin_name -> READ
Rule 214   builtin_name -> PRINT
Rule 215   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
Rule 216   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
Rule 217   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
Rule 218   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END
Rule 219   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END
Rule 220   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END
Rule 221   procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END
Rule 222   procedure_definition -> PROC LPAREN RPAREN SEMICOL END
Rule 223   formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 224   formal_parameter_list -> formal_parameter
Rule 225   formal_parameter -> identifier_list parameter_spec
Rule 226   parameter_spec -> mode parameter_attribute
Rule 227   parameter_spec -> mode
Rule 228   parameter_attribute -> LOC
Rule 229   result_spec -> RETURNS LPAREN mode result_attribute RPAREN
Rule 230   result_spec -> RETURNS LPAREN mode RPAREN
Rule 231   result_attribute -> LOC
Rule 232   empty -> <empty>

Terminals, with rules where they appear

AND                  : 113
ARRAY                : 51
ARROW                : 68 142
ASSIGN               : 19 22 23 27 155 180 181 182 183
BOOL                 : 37
BY                   : 186
CCONST               : 90
CHAR                 : 38
CHARS                : 49
CIRCUMF              : 
COLON                : 12 13 43 71 76 94
COMMA                : 15 20 25 52 58 97 196 223
CONCAT               : 128
CONCATASSIGN         : 161
DBLQUO               : 
DBLSLASH             : 
DCL                  : 9
DIF                  : 116
DIVIDE               : 132
DIVIDEASSIGN         : 159
DO                   : 170 171 172 173
DOWN                 : 180 182 189
ELSE                 : 106 166 167
ELSIF                : 107 108 168 169
END                  : 215 216 217 218 219 220 221 222
EQUALS               : 115
EXIT                 : 200
FALSE                : 88
FI                   : 101 102 162 163
FOR                  : 177
GEQ                  : 118
GTR                  : 117
ICONST               : 87
ID                   : 59
IF                   : 101 102 162 163
IN                   : 121 189 190
INT                  : 36
LBRACK               : 49 51 69 71 75 76 93 94
LCURL                : 
LENGTH               : 212
LEQ                  : 120
LOC                  : 228 231
LOWER                : 211
LPAREN               : 39 40 96 194 195 205 206 215 216 217 218 219 220 221 222 229 230
LSS                  : 119
MINUS                : 127 137
MINUSASSIGN          : 157
NOT                  : 138
NULL                 : 91
NUM                  : 207
OD                   : 170 171 172 173
OR                   : 114
PERC                 : 133
PERCASSIGN           : 160
PLUS                 : 126
PLUSASSIGN           : 156
PRED                 : 208
PRINT                : 214
PROC                 : 215 216 217 218 219 220 221 222
RBRACK               : 49 51 69 71 75 76 93 94
RCURL                : 
READ                 : 213
REF                  : 46
RESULT               : 203
RETURN               : 201 202
RETURNS              : 229 230
RPAREN               : 39 40 96 194 195 205 206 215 216 217 218 219 220 221 222 229 230
SCONST               : 92
SEMICOL              : 9 10 11 12 13 14 170 171 215 216 217 218 219 220 221 222
SINGQUO              : 
SUCC                 : 209
SYN                  : 10
THEN                 : 105 164 165
TIMES                : 131
TIMESASSIGN          : 158
TO                   : 187
TRUE                 : 89
TYPE                 : 11
UPPER                : 210
WHILE                : 191
error                : 

Nonterminals, with rules where they appear

action               : 13 14
action_statement     : 8 143 144
action_statement_list : 143 164 166 170 172
arithmetic_additive_operator : 124
arithmetic_multiplicative_operator : 130
array_element        : 64
array_location       : 75 76
array_mode           : 48
array_primitive_value : 93 94
array_slice          : 65
assigning_operator   : 154
assignment_action    : 147
boolean_expression   : 101 102 107 108 162 163 168 169 191
boolean_literal      : 83
boolean_mode         : 33
bracketed_action     : 146
builtin_call         : 193
builtin_name         : 205 206
call_action          : 66 148
character_literal    : 84
character_mode       : 34
character_string_literal : 86
composite_mode       : 31
conditional_expression : 100
constant_expression  : 22 23
control_part         : 170 171
declaration          : 15 16
declaration_list     : 9 15
declaration_statement : 4
dereferenced_reference : 61
discrete_expression  : 185 187
discrete_mode        : 29 40 54
discrete_mode_name   : 39 189 190
discrete_range_mode  : 35
do_action            : 153
element_mode         : 51
else_clause          : 162 168
else_expression      : 101 102
elsif_expression     : 102 107
empty                : 165 167
empty_literal        : 85
end_value            : 180 181 182 183
exit_action          : 149
expression           : 19 24 44 45 96 97 98 103 104 105 106 154 188 198 204
expression_list      : 75 93 97
for_control          : 174 176
formal_parameter     : 223 224
formal_parameter_list : 215 216 217 219 223
identifier           : 41 42 57 58 67 145 184 199
identifier_list      : 17 18 22 23 27 58 225
if_action            : 152
index_mode           : 52 53
index_mode_list      : 51 52
initialization       : 17
integer_expression   : 70 73 74 186
integer_literal      : 50 82 136
integer_mode         : 32
iteration            : 177
label_id             : 12 13 200
left_element         : 71
literal              : 78
literal_range        : 39 40 55
location             : 68 72 77 139 142 154
location_name        : 60
loop_counter         : 180 181 182 183 189 190
lower_bound          : 43 76 94
membership_operator  : 112
mode                 : 17 18 22 27 46 56 226 227 229 230
mode_definition      : 25 26
mode_name            : 28
monadic_operator     : 134
newmode_list         : 11 25
newmode_statement    : 6
operand0             : 99 110
operand1             : 109 110 123
operand2             : 122 123 130
operand3             : 129 130
operand4             : 134 135
operator1            : 110
operator2            : 123
parameter            : 196 197
parameter_attribute  : 226
parameter_list       : 194 196 205
parameter_spec       : 225
parenthesized_expression : 81
primitive_value      : 95 141
procedure_call       : 192
procedure_definition : 12
procedure_name       : 194 195
procedure_statement  : 7
program              : 0
range_enumeration    : 178
reference_mode       : 30
referenced_location  : 140
relational_operator  : 111
result               : 201 203
result_action        : 151
result_attribute     : 229
result_spec          : 215 216 218 220
return_action        : 150
right_element        : 71
start_element        : 69
start_value          : 180 181 182 183
statement            : 2 3
statement_list       : 1 2 215 217 218 221
step_enumeration     : 179
step_value           : 180 181
string_concatenation_operator : 125
string_element       : 62
string_length        : 49
string_location      : 69 71
string_mode          : 47
string_slice         : 63
synonym_definition   : 20 21
synonym_list         : 10 20
synonym_statement    : 5
then_clause          : 162 163 168 169
then_expression      : 101 102 107 108
upper_bound          : 43 76 94
value_array_element  : 79
value_array_slice    : 80
while_control        : 174 175

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    statement_list                 shift and go to state 16
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    synonym_statement              shift and go to state 21
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 30
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    program                        shift and go to state 42
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 1

    (211) builtin_name -> LOWER .

    LPAREN          reduce using rule 211 (builtin_name -> LOWER .)


state 2

    (207) builtin_name -> NUM .

    LPAREN          reduce using rule 207 (builtin_name -> NUM .)


state 3

    (212) builtin_name -> LENGTH .

    LPAREN          reduce using rule 212 (builtin_name -> LENGTH .)


state 4

    (69) string_element -> string_location . LBRACK start_element RBRACK
    (71) string_slice -> string_location . LBRACK left_element COLON right_element RBRACK

    LBRACK          shift and go to state 50


state 5

    (154) assignment_action -> location . assigning_operator expression
    (68) dereferenced_reference -> location . ARROW
    (72) string_location -> location .
    (77) array_location -> location .
    (155) assigning_operator -> . ASSIGN
    (156) assigning_operator -> . PLUSASSIGN
    (157) assigning_operator -> . MINUSASSIGN
    (158) assigning_operator -> . TIMESASSIGN
    (159) assigning_operator -> . DIVIDEASSIGN
    (160) assigning_operator -> . PERCASSIGN
    (161) assigning_operator -> . CONCATASSIGN

  ! reduce/reduce conflict for LBRACK resolved using rule 72 (string_location -> location .)
    ARROW           shift and go to state 53
    LBRACK          reduce using rule 72 (string_location -> location .)
    ASSIGN          shift and go to state 58
    PLUSASSIGN      shift and go to state 52
    MINUSASSIGN     shift and go to state 57
    TIMESASSIGN     shift and go to state 56
    DIVIDEASSIGN    shift and go to state 59
    PERCASSIGN      shift and go to state 55
    CONCATASSIGN    shift and go to state 54

  ! LBRACK          [ reduce using rule 77 (array_location -> location .) ]

    assigning_operator             shift and go to state 51

state 6

    (194) procedure_call -> procedure_name . LPAREN parameter_list RPAREN
    (195) procedure_call -> procedure_name . LPAREN RPAREN

    LPAREN          shift and go to state 60


state 7

    (9) declaration_statement -> DCL . declaration_list SEMICOL
    (15) declaration_list -> . declaration_list COMMA declaration
    (16) declaration_list -> . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 61
    identifier_list                shift and go to state 62
    declaration_list               shift and go to state 63
    declaration                    shift and go to state 64

state 8

    (62) location -> string_element .

    ARROW           reduce using rule 62 (location -> string_element .)
    TIMES           reduce using rule 62 (location -> string_element .)
    DIVIDE          reduce using rule 62 (location -> string_element .)
    PERC            reduce using rule 62 (location -> string_element .)
    PLUS            reduce using rule 62 (location -> string_element .)
    MINUS           reduce using rule 62 (location -> string_element .)
    CONCAT          reduce using rule 62 (location -> string_element .)
    AND             reduce using rule 62 (location -> string_element .)
    OR              reduce using rule 62 (location -> string_element .)
    EQUALS          reduce using rule 62 (location -> string_element .)
    DIF             reduce using rule 62 (location -> string_element .)
    GTR             reduce using rule 62 (location -> string_element .)
    GEQ             reduce using rule 62 (location -> string_element .)
    LSS             reduce using rule 62 (location -> string_element .)
    LEQ             reduce using rule 62 (location -> string_element .)
    IN              reduce using rule 62 (location -> string_element .)
    ELSE            reduce using rule 62 (location -> string_element .)
    ELSIF           reduce using rule 62 (location -> string_element .)
    LBRACK          reduce using rule 62 (location -> string_element .)
    SEMICOL         reduce using rule 62 (location -> string_element .)
    RPAREN          reduce using rule 62 (location -> string_element .)
    RBRACK          reduce using rule 62 (location -> string_element .)
    COMMA           reduce using rule 62 (location -> string_element .)
    ASSIGN          reduce using rule 62 (location -> string_element .)
    PLUSASSIGN      reduce using rule 62 (location -> string_element .)
    MINUSASSIGN     reduce using rule 62 (location -> string_element .)
    TIMESASSIGN     reduce using rule 62 (location -> string_element .)
    DIVIDEASSIGN    reduce using rule 62 (location -> string_element .)
    PERCASSIGN      reduce using rule 62 (location -> string_element .)
    CONCATASSIGN    reduce using rule 62 (location -> string_element .)
    COLON           reduce using rule 62 (location -> string_element .)
    THEN            reduce using rule 62 (location -> string_element .)
    DOWN            reduce using rule 62 (location -> string_element .)
    BY              reduce using rule 62 (location -> string_element .)
    TO              reduce using rule 62 (location -> string_element .)
    FI              reduce using rule 62 (location -> string_element .)
    WHILE           reduce using rule 62 (location -> string_element .)


state 9

    (152) bracketed_action -> if_action .

    SEMICOL         reduce using rule 152 (bracketed_action -> if_action .)


state 10

    (63) location -> string_slice .

    ARROW           reduce using rule 63 (location -> string_slice .)
    TIMES           reduce using rule 63 (location -> string_slice .)
    DIVIDE          reduce using rule 63 (location -> string_slice .)
    PERC            reduce using rule 63 (location -> string_slice .)
    PLUS            reduce using rule 63 (location -> string_slice .)
    MINUS           reduce using rule 63 (location -> string_slice .)
    CONCAT          reduce using rule 63 (location -> string_slice .)
    AND             reduce using rule 63 (location -> string_slice .)
    OR              reduce using rule 63 (location -> string_slice .)
    EQUALS          reduce using rule 63 (location -> string_slice .)
    DIF             reduce using rule 63 (location -> string_slice .)
    GTR             reduce using rule 63 (location -> string_slice .)
    GEQ             reduce using rule 63 (location -> string_slice .)
    LSS             reduce using rule 63 (location -> string_slice .)
    LEQ             reduce using rule 63 (location -> string_slice .)
    IN              reduce using rule 63 (location -> string_slice .)
    ELSE            reduce using rule 63 (location -> string_slice .)
    ELSIF           reduce using rule 63 (location -> string_slice .)
    LBRACK          reduce using rule 63 (location -> string_slice .)
    SEMICOL         reduce using rule 63 (location -> string_slice .)
    RPAREN          reduce using rule 63 (location -> string_slice .)
    RBRACK          reduce using rule 63 (location -> string_slice .)
    COMMA           reduce using rule 63 (location -> string_slice .)
    ASSIGN          reduce using rule 63 (location -> string_slice .)
    PLUSASSIGN      reduce using rule 63 (location -> string_slice .)
    MINUSASSIGN     reduce using rule 63 (location -> string_slice .)
    TIMESASSIGN     reduce using rule 63 (location -> string_slice .)
    DIVIDEASSIGN    reduce using rule 63 (location -> string_slice .)
    PERCASSIGN      reduce using rule 63 (location -> string_slice .)
    CONCATASSIGN    reduce using rule 63 (location -> string_slice .)
    COLON           reduce using rule 63 (location -> string_slice .)
    THEN            reduce using rule 63 (location -> string_slice .)
    DOWN            reduce using rule 63 (location -> string_slice .)
    BY              reduce using rule 63 (location -> string_slice .)
    TO              reduce using rule 63 (location -> string_slice .)
    FI              reduce using rule 63 (location -> string_slice .)
    WHILE           reduce using rule 63 (location -> string_slice .)


state 11

    (60) location -> location_name .

    ARROW           reduce using rule 60 (location -> location_name .)
    TIMES           reduce using rule 60 (location -> location_name .)
    DIVIDE          reduce using rule 60 (location -> location_name .)
    PERC            reduce using rule 60 (location -> location_name .)
    PLUS            reduce using rule 60 (location -> location_name .)
    MINUS           reduce using rule 60 (location -> location_name .)
    CONCAT          reduce using rule 60 (location -> location_name .)
    AND             reduce using rule 60 (location -> location_name .)
    OR              reduce using rule 60 (location -> location_name .)
    EQUALS          reduce using rule 60 (location -> location_name .)
    DIF             reduce using rule 60 (location -> location_name .)
    GTR             reduce using rule 60 (location -> location_name .)
    GEQ             reduce using rule 60 (location -> location_name .)
    LSS             reduce using rule 60 (location -> location_name .)
    LEQ             reduce using rule 60 (location -> location_name .)
    IN              reduce using rule 60 (location -> location_name .)
    ELSE            reduce using rule 60 (location -> location_name .)
    ELSIF           reduce using rule 60 (location -> location_name .)
    LBRACK          reduce using rule 60 (location -> location_name .)
    SEMICOL         reduce using rule 60 (location -> location_name .)
    RPAREN          reduce using rule 60 (location -> location_name .)
    RBRACK          reduce using rule 60 (location -> location_name .)
    COMMA           reduce using rule 60 (location -> location_name .)
    ASSIGN          reduce using rule 60 (location -> location_name .)
    PLUSASSIGN      reduce using rule 60 (location -> location_name .)
    MINUSASSIGN     reduce using rule 60 (location -> location_name .)
    TIMESASSIGN     reduce using rule 60 (location -> location_name .)
    DIVIDEASSIGN    reduce using rule 60 (location -> location_name .)
    PERCASSIGN      reduce using rule 60 (location -> location_name .)
    CONCATASSIGN    reduce using rule 60 (location -> location_name .)
    COLON           reduce using rule 60 (location -> location_name .)
    THEN            reduce using rule 60 (location -> location_name .)
    DOWN            reduce using rule 60 (location -> location_name .)
    BY              reduce using rule 60 (location -> location_name .)
    TO              reduce using rule 60 (location -> location_name .)
    FI              reduce using rule 60 (location -> location_name .)
    WHILE           reduce using rule 60 (location -> location_name .)


state 12

    (214) builtin_name -> PRINT .

    LPAREN          reduce using rule 214 (builtin_name -> PRINT .)


state 13

    (148) action -> call_action .
    (66) location -> call_action .

    SEMICOL         reduce using rule 148 (action -> call_action .)
    ARROW           reduce using rule 66 (location -> call_action .)
    ASSIGN          reduce using rule 66 (location -> call_action .)
    PLUSASSIGN      reduce using rule 66 (location -> call_action .)
    MINUSASSIGN     reduce using rule 66 (location -> call_action .)
    TIMESASSIGN     reduce using rule 66 (location -> call_action .)
    DIVIDEASSIGN    reduce using rule 66 (location -> call_action .)
    PERCASSIGN      reduce using rule 66 (location -> call_action .)
    CONCATASSIGN    reduce using rule 66 (location -> call_action .)
    LBRACK          reduce using rule 66 (location -> call_action .)


state 14

    (205) builtin_call -> builtin_name . LPAREN parameter_list RPAREN
    (206) builtin_call -> builtin_name . LPAREN RPAREN

    LPAREN          shift and go to state 65


state 15

    (208) builtin_name -> PRED .

    LPAREN          reduce using rule 208 (builtin_name -> PRED .)


state 16

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    synonym_statement              shift and go to state 21
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 66
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 17

    (153) bracketed_action -> do_action .

    SEMICOL         reduce using rule 153 (bracketed_action -> do_action .)


state 18

    (145) label_id -> identifier .
    (67) location_name -> identifier .
    (199) procedure_name -> identifier .

    COLON           reduce using rule 145 (label_id -> identifier .)
    ARROW           reduce using rule 67 (location_name -> identifier .)
    ASSIGN          reduce using rule 67 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 67 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 67 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 67 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 67 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 67 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 67 (location_name -> identifier .)
    LBRACK          reduce using rule 67 (location_name -> identifier .)
    LPAREN          reduce using rule 199 (procedure_name -> identifier .)


state 19

    (192) call_action -> procedure_call .

    ARROW           reduce using rule 192 (call_action -> procedure_call .)
    TIMES           reduce using rule 192 (call_action -> procedure_call .)
    DIVIDE          reduce using rule 192 (call_action -> procedure_call .)
    PERC            reduce using rule 192 (call_action -> procedure_call .)
    PLUS            reduce using rule 192 (call_action -> procedure_call .)
    MINUS           reduce using rule 192 (call_action -> procedure_call .)
    CONCAT          reduce using rule 192 (call_action -> procedure_call .)
    AND             reduce using rule 192 (call_action -> procedure_call .)
    OR              reduce using rule 192 (call_action -> procedure_call .)
    EQUALS          reduce using rule 192 (call_action -> procedure_call .)
    DIF             reduce using rule 192 (call_action -> procedure_call .)
    GTR             reduce using rule 192 (call_action -> procedure_call .)
    GEQ             reduce using rule 192 (call_action -> procedure_call .)
    LSS             reduce using rule 192 (call_action -> procedure_call .)
    LEQ             reduce using rule 192 (call_action -> procedure_call .)
    IN              reduce using rule 192 (call_action -> procedure_call .)
    THEN            reduce using rule 192 (call_action -> procedure_call .)
    LBRACK          reduce using rule 192 (call_action -> procedure_call .)
    SEMICOL         reduce using rule 192 (call_action -> procedure_call .)
    RBRACK          reduce using rule 192 (call_action -> procedure_call .)
    ASSIGN          reduce using rule 192 (call_action -> procedure_call .)
    PLUSASSIGN      reduce using rule 192 (call_action -> procedure_call .)
    MINUSASSIGN     reduce using rule 192 (call_action -> procedure_call .)
    TIMESASSIGN     reduce using rule 192 (call_action -> procedure_call .)
    DIVIDEASSIGN    reduce using rule 192 (call_action -> procedure_call .)
    PERCASSIGN      reduce using rule 192 (call_action -> procedure_call .)
    CONCATASSIGN    reduce using rule 192 (call_action -> procedure_call .)
    COLON           reduce using rule 192 (call_action -> procedure_call .)
    RPAREN          reduce using rule 192 (call_action -> procedure_call .)
    COMMA           reduce using rule 192 (call_action -> procedure_call .)
    ELSE            reduce using rule 192 (call_action -> procedure_call .)
    ELSIF           reduce using rule 192 (call_action -> procedure_call .)
    DOWN            reduce using rule 192 (call_action -> procedure_call .)
    BY              reduce using rule 192 (call_action -> procedure_call .)
    TO              reduce using rule 192 (call_action -> procedure_call .)
    FI              reduce using rule 192 (call_action -> procedure_call .)
    WHILE           reduce using rule 192 (call_action -> procedure_call .)


state 20

    (12) procedure_statement -> label_id . COLON procedure_definition SEMICOL
    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 67


state 21

    (5) statement -> synonym_statement .

    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    EXIT            reduce using rule 5 (statement -> synonym_statement .)
    RETURN          reduce using rule 5 (statement -> synonym_statement .)
    RESULT          reduce using rule 5 (statement -> synonym_statement .)
    IF              reduce using rule 5 (statement -> synonym_statement .)
    DO              reduce using rule 5 (statement -> synonym_statement .)
    NUM             reduce using rule 5 (statement -> synonym_statement .)
    PRED            reduce using rule 5 (statement -> synonym_statement .)
    SUCC            reduce using rule 5 (statement -> synonym_statement .)
    UPPER           reduce using rule 5 (statement -> synonym_statement .)
    LOWER           reduce using rule 5 (statement -> synonym_statement .)
    LENGTH          reduce using rule 5 (statement -> synonym_statement .)
    READ            reduce using rule 5 (statement -> synonym_statement .)
    PRINT           reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)
    END             reduce using rule 5 (statement -> synonym_statement .)


state 22

    (193) call_action -> builtin_call .

    ARROW           reduce using rule 193 (call_action -> builtin_call .)
    TIMES           reduce using rule 193 (call_action -> builtin_call .)
    DIVIDE          reduce using rule 193 (call_action -> builtin_call .)
    PERC            reduce using rule 193 (call_action -> builtin_call .)
    PLUS            reduce using rule 193 (call_action -> builtin_call .)
    MINUS           reduce using rule 193 (call_action -> builtin_call .)
    CONCAT          reduce using rule 193 (call_action -> builtin_call .)
    AND             reduce using rule 193 (call_action -> builtin_call .)
    OR              reduce using rule 193 (call_action -> builtin_call .)
    EQUALS          reduce using rule 193 (call_action -> builtin_call .)
    DIF             reduce using rule 193 (call_action -> builtin_call .)
    GTR             reduce using rule 193 (call_action -> builtin_call .)
    GEQ             reduce using rule 193 (call_action -> builtin_call .)
    LSS             reduce using rule 193 (call_action -> builtin_call .)
    LEQ             reduce using rule 193 (call_action -> builtin_call .)
    IN              reduce using rule 193 (call_action -> builtin_call .)
    THEN            reduce using rule 193 (call_action -> builtin_call .)
    LBRACK          reduce using rule 193 (call_action -> builtin_call .)
    SEMICOL         reduce using rule 193 (call_action -> builtin_call .)
    RBRACK          reduce using rule 193 (call_action -> builtin_call .)
    ASSIGN          reduce using rule 193 (call_action -> builtin_call .)
    PLUSASSIGN      reduce using rule 193 (call_action -> builtin_call .)
    MINUSASSIGN     reduce using rule 193 (call_action -> builtin_call .)
    TIMESASSIGN     reduce using rule 193 (call_action -> builtin_call .)
    DIVIDEASSIGN    reduce using rule 193 (call_action -> builtin_call .)
    PERCASSIGN      reduce using rule 193 (call_action -> builtin_call .)
    CONCATASSIGN    reduce using rule 193 (call_action -> builtin_call .)
    COLON           reduce using rule 193 (call_action -> builtin_call .)
    RPAREN          reduce using rule 193 (call_action -> builtin_call .)
    COMMA           reduce using rule 193 (call_action -> builtin_call .)
    ELSE            reduce using rule 193 (call_action -> builtin_call .)
    ELSIF           reduce using rule 193 (call_action -> builtin_call .)
    DOWN            reduce using rule 193 (call_action -> builtin_call .)
    BY              reduce using rule 193 (call_action -> builtin_call .)
    TO              reduce using rule 193 (call_action -> builtin_call .)
    FI              reduce using rule 193 (call_action -> builtin_call .)
    WHILE           reduce using rule 193 (call_action -> builtin_call .)


state 23

    (75) array_element -> array_location . LBRACK expression_list RBRACK
    (76) array_slice -> array_location . LBRACK lower_bound COLON upper_bound RBRACK

    LBRACK          shift and go to state 68


state 24

    (151) action -> result_action .

    SEMICOL         reduce using rule 151 (action -> result_action .)


state 25

    (150) action -> return_action .

    SEMICOL         reduce using rule 150 (action -> return_action .)


state 26

    (6) statement -> newmode_statement .

    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    EXIT            reduce using rule 6 (statement -> newmode_statement .)
    RETURN          reduce using rule 6 (statement -> newmode_statement .)
    RESULT          reduce using rule 6 (statement -> newmode_statement .)
    IF              reduce using rule 6 (statement -> newmode_statement .)
    DO              reduce using rule 6 (statement -> newmode_statement .)
    NUM             reduce using rule 6 (statement -> newmode_statement .)
    PRED            reduce using rule 6 (statement -> newmode_statement .)
    SUCC            reduce using rule 6 (statement -> newmode_statement .)
    UPPER           reduce using rule 6 (statement -> newmode_statement .)
    LOWER           reduce using rule 6 (statement -> newmode_statement .)
    LENGTH          reduce using rule 6 (statement -> newmode_statement .)
    READ            reduce using rule 6 (statement -> newmode_statement .)
    PRINT           reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)
    END             reduce using rule 6 (statement -> newmode_statement .)


state 27

    (61) location -> dereferenced_reference .

    ARROW           reduce using rule 61 (location -> dereferenced_reference .)
    TIMES           reduce using rule 61 (location -> dereferenced_reference .)
    DIVIDE          reduce using rule 61 (location -> dereferenced_reference .)
    PERC            reduce using rule 61 (location -> dereferenced_reference .)
    PLUS            reduce using rule 61 (location -> dereferenced_reference .)
    MINUS           reduce using rule 61 (location -> dereferenced_reference .)
    CONCAT          reduce using rule 61 (location -> dereferenced_reference .)
    AND             reduce using rule 61 (location -> dereferenced_reference .)
    OR              reduce using rule 61 (location -> dereferenced_reference .)
    EQUALS          reduce using rule 61 (location -> dereferenced_reference .)
    DIF             reduce using rule 61 (location -> dereferenced_reference .)
    GTR             reduce using rule 61 (location -> dereferenced_reference .)
    GEQ             reduce using rule 61 (location -> dereferenced_reference .)
    LSS             reduce using rule 61 (location -> dereferenced_reference .)
    LEQ             reduce using rule 61 (location -> dereferenced_reference .)
    IN              reduce using rule 61 (location -> dereferenced_reference .)
    ELSE            reduce using rule 61 (location -> dereferenced_reference .)
    ELSIF           reduce using rule 61 (location -> dereferenced_reference .)
    LBRACK          reduce using rule 61 (location -> dereferenced_reference .)
    SEMICOL         reduce using rule 61 (location -> dereferenced_reference .)
    RPAREN          reduce using rule 61 (location -> dereferenced_reference .)
    RBRACK          reduce using rule 61 (location -> dereferenced_reference .)
    COMMA           reduce using rule 61 (location -> dereferenced_reference .)
    ASSIGN          reduce using rule 61 (location -> dereferenced_reference .)
    PLUSASSIGN      reduce using rule 61 (location -> dereferenced_reference .)
    MINUSASSIGN     reduce using rule 61 (location -> dereferenced_reference .)
    TIMESASSIGN     reduce using rule 61 (location -> dereferenced_reference .)
    DIVIDEASSIGN    reduce using rule 61 (location -> dereferenced_reference .)
    PERCASSIGN      reduce using rule 61 (location -> dereferenced_reference .)
    CONCATASSIGN    reduce using rule 61 (location -> dereferenced_reference .)
    COLON           reduce using rule 61 (location -> dereferenced_reference .)
    THEN            reduce using rule 61 (location -> dereferenced_reference .)
    DOWN            reduce using rule 61 (location -> dereferenced_reference .)
    BY              reduce using rule 61 (location -> dereferenced_reference .)
    TO              reduce using rule 61 (location -> dereferenced_reference .)
    FI              reduce using rule 61 (location -> dereferenced_reference .)
    WHILE           reduce using rule 61 (location -> dereferenced_reference .)


state 28

    (209) builtin_name -> SUCC .

    LPAREN          reduce using rule 209 (builtin_name -> SUCC .)


state 29

    (149) action -> exit_action .

    SEMICOL         reduce using rule 149 (action -> exit_action .)


state 30

    (3) statement_list -> statement .

    END             reduce using rule 3 (statement_list -> statement .)
    DCL             reduce using rule 3 (statement_list -> statement .)
    SYN             reduce using rule 3 (statement_list -> statement .)
    TYPE            reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    EXIT            reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    RESULT          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    DO              reduce using rule 3 (statement_list -> statement .)
    NUM             reduce using rule 3 (statement_list -> statement .)
    PRED            reduce using rule 3 (statement_list -> statement .)
    SUCC            reduce using rule 3 (statement_list -> statement .)
    UPPER           reduce using rule 3 (statement_list -> statement .)
    LOWER           reduce using rule 3 (statement_list -> statement .)
    LENGTH          reduce using rule 3 (statement_list -> statement .)
    READ            reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 31

    (10) synonym_statement -> SYN . synonym_list SEMICOL
    (20) synonym_list -> . synonym_list COMMA synonym_definition
    (21) synonym_list -> . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    synonym_definition             shift and go to state 69
    identifier                     shift and go to state 61
    identifier_list                shift and go to state 70
    synonym_list                   shift and go to state 71

state 32

    (7) statement -> procedure_statement .

    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    EXIT            reduce using rule 7 (statement -> procedure_statement .)
    RETURN          reduce using rule 7 (statement -> procedure_statement .)
    RESULT          reduce using rule 7 (statement -> procedure_statement .)
    IF              reduce using rule 7 (statement -> procedure_statement .)
    DO              reduce using rule 7 (statement -> procedure_statement .)
    NUM             reduce using rule 7 (statement -> procedure_statement .)
    PRED            reduce using rule 7 (statement -> procedure_statement .)
    SUCC            reduce using rule 7 (statement -> procedure_statement .)
    UPPER           reduce using rule 7 (statement -> procedure_statement .)
    LOWER           reduce using rule 7 (statement -> procedure_statement .)
    LENGTH          reduce using rule 7 (statement -> procedure_statement .)
    READ            reduce using rule 7 (statement -> procedure_statement .)
    PRINT           reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)
    END             reduce using rule 7 (statement -> procedure_statement .)


state 33

    (65) location -> array_slice .

    ARROW           reduce using rule 65 (location -> array_slice .)
    TIMES           reduce using rule 65 (location -> array_slice .)
    DIVIDE          reduce using rule 65 (location -> array_slice .)
    PERC            reduce using rule 65 (location -> array_slice .)
    PLUS            reduce using rule 65 (location -> array_slice .)
    MINUS           reduce using rule 65 (location -> array_slice .)
    CONCAT          reduce using rule 65 (location -> array_slice .)
    AND             reduce using rule 65 (location -> array_slice .)
    OR              reduce using rule 65 (location -> array_slice .)
    EQUALS          reduce using rule 65 (location -> array_slice .)
    DIF             reduce using rule 65 (location -> array_slice .)
    GTR             reduce using rule 65 (location -> array_slice .)
    GEQ             reduce using rule 65 (location -> array_slice .)
    LSS             reduce using rule 65 (location -> array_slice .)
    LEQ             reduce using rule 65 (location -> array_slice .)
    IN              reduce using rule 65 (location -> array_slice .)
    ELSE            reduce using rule 65 (location -> array_slice .)
    ELSIF           reduce using rule 65 (location -> array_slice .)
    LBRACK          reduce using rule 65 (location -> array_slice .)
    SEMICOL         reduce using rule 65 (location -> array_slice .)
    RPAREN          reduce using rule 65 (location -> array_slice .)
    RBRACK          reduce using rule 65 (location -> array_slice .)
    COMMA           reduce using rule 65 (location -> array_slice .)
    ASSIGN          reduce using rule 65 (location -> array_slice .)
    PLUSASSIGN      reduce using rule 65 (location -> array_slice .)
    MINUSASSIGN     reduce using rule 65 (location -> array_slice .)
    TIMESASSIGN     reduce using rule 65 (location -> array_slice .)
    DIVIDEASSIGN    reduce using rule 65 (location -> array_slice .)
    PERCASSIGN      reduce using rule 65 (location -> array_slice .)
    CONCATASSIGN    reduce using rule 65 (location -> array_slice .)
    COLON           reduce using rule 65 (location -> array_slice .)
    THEN            reduce using rule 65 (location -> array_slice .)
    DOWN            reduce using rule 65 (location -> array_slice .)
    BY              reduce using rule 65 (location -> array_slice .)
    TO              reduce using rule 65 (location -> array_slice .)
    FI              reduce using rule 65 (location -> array_slice .)
    WHILE           reduce using rule 65 (location -> array_slice .)


state 34

    (213) builtin_name -> READ .

    LPAREN          reduce using rule 213 (builtin_name -> READ .)


state 35

    (11) newmode_statement -> TYPE . newmode_list SEMICOL
    (25) newmode_list -> . newmode_list COMMA mode_definition
    (26) newmode_list -> . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    newmode_list                   shift and go to state 72
    identifier                     shift and go to state 61
    mode_definition                shift and go to state 74
    identifier_list                shift and go to state 73

state 36

    (201) return_action -> RETURN . result
    (202) return_action -> RETURN .
    (204) result -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    SEMICOL         reduce using rule 202 (return_action -> RETURN .)
    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 89
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    result                         shift and go to state 102
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 37

    (14) action_statement -> action . SEMICOL

    SEMICOL         shift and go to state 110


state 38

    (203) result_action -> RESULT . result
    (204) result -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 89
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    result                         shift and go to state 111
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 39

    (170) do_action -> DO . control_part SEMICOL action_statement_list OD
    (171) do_action -> DO . control_part SEMICOL OD
    (172) do_action -> DO . action_statement_list OD
    (173) do_action -> DO . OD
    (174) control_part -> . for_control while_control
    (175) control_part -> . while_control
    (176) control_part -> . for_control
    (143) action_statement_list -> . action_statement_list action_statement
    (144) action_statement_list -> . action_statement
    (177) for_control -> . FOR iteration
    (191) while_control -> . WHILE boolean_expression
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    OD              shift and go to state 118
    FOR             shift and go to state 119
    WHILE           shift and go to state 117
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    action_statement_list          shift and go to state 112
    string_location                shift and go to state 4
    control_part                   shift and go to state 115
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    while_control                  shift and go to state 113
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    for_control                    shift and go to state 114
    exit_action                    shift and go to state 29
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    assignment_action              shift and go to state 46
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49
    action_statement               shift and go to state 120
    string_element                 shift and go to state 8

state 40

    (4) statement -> declaration_statement .

    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    EXIT            reduce using rule 4 (statement -> declaration_statement .)
    RETURN          reduce using rule 4 (statement -> declaration_statement .)
    RESULT          reduce using rule 4 (statement -> declaration_statement .)
    IF              reduce using rule 4 (statement -> declaration_statement .)
    DO              reduce using rule 4 (statement -> declaration_statement .)
    NUM             reduce using rule 4 (statement -> declaration_statement .)
    PRED            reduce using rule 4 (statement -> declaration_statement .)
    SUCC            reduce using rule 4 (statement -> declaration_statement .)
    UPPER           reduce using rule 4 (statement -> declaration_statement .)
    LOWER           reduce using rule 4 (statement -> declaration_statement .)
    LENGTH          reduce using rule 4 (statement -> declaration_statement .)
    READ            reduce using rule 4 (statement -> declaration_statement .)
    PRINT           reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)
    END             reduce using rule 4 (statement -> declaration_statement .)


state 41

    (146) action -> bracketed_action .

    SEMICOL         reduce using rule 146 (action -> bracketed_action .)


state 42

    (0) S' -> program .



state 43

    (210) builtin_name -> UPPER .

    LPAREN          reduce using rule 210 (builtin_name -> UPPER .)


state 44

    (200) exit_action -> EXIT . label_id
    (145) label_id -> . identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 121
    label_id                       shift and go to state 122

state 45

    (162) if_action -> IF . boolean_expression then_clause else_clause FI
    (163) if_action -> IF . boolean_expression then_clause FI
    (104) boolean_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_expression             shift and go to state 124
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 123
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 46

    (147) action -> assignment_action .

    SEMICOL         reduce using rule 147 (action -> assignment_action .)


state 47

    (59) identifier -> ID .

    ARROW           reduce using rule 59 (identifier -> ID .)
    TIMES           reduce using rule 59 (identifier -> ID .)
    DIVIDE          reduce using rule 59 (identifier -> ID .)
    PERC            reduce using rule 59 (identifier -> ID .)
    PLUS            reduce using rule 59 (identifier -> ID .)
    MINUS           reduce using rule 59 (identifier -> ID .)
    CONCAT          reduce using rule 59 (identifier -> ID .)
    AND             reduce using rule 59 (identifier -> ID .)
    OR              reduce using rule 59 (identifier -> ID .)
    EQUALS          reduce using rule 59 (identifier -> ID .)
    DIF             reduce using rule 59 (identifier -> ID .)
    GTR             reduce using rule 59 (identifier -> ID .)
    GEQ             reduce using rule 59 (identifier -> ID .)
    LSS             reduce using rule 59 (identifier -> ID .)
    LEQ             reduce using rule 59 (identifier -> ID .)
    IN              reduce using rule 59 (identifier -> ID .)
    RBRACK          reduce using rule 59 (identifier -> ID .)
    COLON           reduce using rule 59 (identifier -> ID .)
    LBRACK          reduce using rule 59 (identifier -> ID .)
    LPAREN          reduce using rule 59 (identifier -> ID .)
    COMMA           reduce using rule 59 (identifier -> ID .)
    ASSIGN          reduce using rule 59 (identifier -> ID .)
    SEMICOL         reduce using rule 59 (identifier -> ID .)
    LOC             reduce using rule 59 (identifier -> ID .)
    RPAREN          reduce using rule 59 (identifier -> ID .)
    THEN            reduce using rule 59 (identifier -> ID .)
    ELSE            reduce using rule 59 (identifier -> ID .)
    ELSIF           reduce using rule 59 (identifier -> ID .)
    DOWN            reduce using rule 59 (identifier -> ID .)
    BY              reduce using rule 59 (identifier -> ID .)
    TO              reduce using rule 59 (identifier -> ID .)
    FI              reduce using rule 59 (identifier -> ID .)
    WHILE           reduce using rule 59 (identifier -> ID .)
    PLUSASSIGN      reduce using rule 59 (identifier -> ID .)
    MINUSASSIGN     reduce using rule 59 (identifier -> ID .)
    TIMESASSIGN     reduce using rule 59 (identifier -> ID .)
    DIVIDEASSIGN    reduce using rule 59 (identifier -> ID .)
    PERCASSIGN      reduce using rule 59 (identifier -> ID .)
    CONCATASSIGN    reduce using rule 59 (identifier -> ID .)
    REF             reduce using rule 59 (identifier -> ID .)
    ID              reduce using rule 59 (identifier -> ID .)
    INT             reduce using rule 59 (identifier -> ID .)
    BOOL            reduce using rule 59 (identifier -> ID .)
    CHAR            reduce using rule 59 (identifier -> ID .)
    CHARS           reduce using rule 59 (identifier -> ID .)
    ARRAY           reduce using rule 59 (identifier -> ID .)


state 48

    (8) statement -> action_statement .

    DCL             reduce using rule 8 (statement -> action_statement .)
    SYN             reduce using rule 8 (statement -> action_statement .)
    TYPE            reduce using rule 8 (statement -> action_statement .)
    ID              reduce using rule 8 (statement -> action_statement .)
    EXIT            reduce using rule 8 (statement -> action_statement .)
    RETURN          reduce using rule 8 (statement -> action_statement .)
    RESULT          reduce using rule 8 (statement -> action_statement .)
    IF              reduce using rule 8 (statement -> action_statement .)
    DO              reduce using rule 8 (statement -> action_statement .)
    NUM             reduce using rule 8 (statement -> action_statement .)
    PRED            reduce using rule 8 (statement -> action_statement .)
    SUCC            reduce using rule 8 (statement -> action_statement .)
    UPPER           reduce using rule 8 (statement -> action_statement .)
    LOWER           reduce using rule 8 (statement -> action_statement .)
    LENGTH          reduce using rule 8 (statement -> action_statement .)
    READ            reduce using rule 8 (statement -> action_statement .)
    PRINT           reduce using rule 8 (statement -> action_statement .)
    $end            reduce using rule 8 (statement -> action_statement .)
    END             reduce using rule 8 (statement -> action_statement .)


state 49

    (64) location -> array_element .

    ARROW           reduce using rule 64 (location -> array_element .)
    TIMES           reduce using rule 64 (location -> array_element .)
    DIVIDE          reduce using rule 64 (location -> array_element .)
    PERC            reduce using rule 64 (location -> array_element .)
    PLUS            reduce using rule 64 (location -> array_element .)
    MINUS           reduce using rule 64 (location -> array_element .)
    CONCAT          reduce using rule 64 (location -> array_element .)
    AND             reduce using rule 64 (location -> array_element .)
    OR              reduce using rule 64 (location -> array_element .)
    EQUALS          reduce using rule 64 (location -> array_element .)
    DIF             reduce using rule 64 (location -> array_element .)
    GTR             reduce using rule 64 (location -> array_element .)
    GEQ             reduce using rule 64 (location -> array_element .)
    LSS             reduce using rule 64 (location -> array_element .)
    LEQ             reduce using rule 64 (location -> array_element .)
    IN              reduce using rule 64 (location -> array_element .)
    ELSE            reduce using rule 64 (location -> array_element .)
    ELSIF           reduce using rule 64 (location -> array_element .)
    LBRACK          reduce using rule 64 (location -> array_element .)
    SEMICOL         reduce using rule 64 (location -> array_element .)
    RPAREN          reduce using rule 64 (location -> array_element .)
    RBRACK          reduce using rule 64 (location -> array_element .)
    COMMA           reduce using rule 64 (location -> array_element .)
    ASSIGN          reduce using rule 64 (location -> array_element .)
    PLUSASSIGN      reduce using rule 64 (location -> array_element .)
    MINUSASSIGN     reduce using rule 64 (location -> array_element .)
    TIMESASSIGN     reduce using rule 64 (location -> array_element .)
    DIVIDEASSIGN    reduce using rule 64 (location -> array_element .)
    PERCASSIGN      reduce using rule 64 (location -> array_element .)
    CONCATASSIGN    reduce using rule 64 (location -> array_element .)
    COLON           reduce using rule 64 (location -> array_element .)
    THEN            reduce using rule 64 (location -> array_element .)
    DOWN            reduce using rule 64 (location -> array_element .)
    BY              reduce using rule 64 (location -> array_element .)
    TO              reduce using rule 64 (location -> array_element .)
    FI              reduce using rule 64 (location -> array_element .)
    WHILE           reduce using rule 64 (location -> array_element .)


state 50

    (69) string_element -> string_location LBRACK . start_element RBRACK
    (71) string_slice -> string_location LBRACK . left_element COLON right_element RBRACK
    (70) start_element -> . integer_expression
    (73) left_element -> . integer_expression
    (103) integer_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    start_element                  shift and go to state 125
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    integer_expression             shift and go to state 126
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 127
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    left_element                   shift and go to state 128
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 51

    (154) assignment_action -> location assigning_operator . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 129
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 52

    (156) assigning_operator -> PLUSASSIGN .

    IF              reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    MINUS           reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    NOT             reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    ICONST          reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    ARROW           reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    LPAREN          reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    ID              reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    FALSE           reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    TRUE            reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    CCONST          reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    NULL            reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    SCONST          reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    NUM             reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    PRED            reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    SUCC            reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    UPPER           reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    LOWER           reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    LENGTH          reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    READ            reduce using rule 156 (assigning_operator -> PLUSASSIGN .)
    PRINT           reduce using rule 156 (assigning_operator -> PLUSASSIGN .)


state 53

    (68) dereferenced_reference -> location ARROW .

    ARROW           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    ASSIGN          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    PLUSASSIGN      reduce using rule 68 (dereferenced_reference -> location ARROW .)
    MINUSASSIGN     reduce using rule 68 (dereferenced_reference -> location ARROW .)
    TIMESASSIGN     reduce using rule 68 (dereferenced_reference -> location ARROW .)
    DIVIDEASSIGN    reduce using rule 68 (dereferenced_reference -> location ARROW .)
    PERCASSIGN      reduce using rule 68 (dereferenced_reference -> location ARROW .)
    CONCATASSIGN    reduce using rule 68 (dereferenced_reference -> location ARROW .)
    LBRACK          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    TIMES           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    DIVIDE          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    PERC            reduce using rule 68 (dereferenced_reference -> location ARROW .)
    PLUS            reduce using rule 68 (dereferenced_reference -> location ARROW .)
    MINUS           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    CONCAT          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    AND             reduce using rule 68 (dereferenced_reference -> location ARROW .)
    OR              reduce using rule 68 (dereferenced_reference -> location ARROW .)
    EQUALS          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    DIF             reduce using rule 68 (dereferenced_reference -> location ARROW .)
    GTR             reduce using rule 68 (dereferenced_reference -> location ARROW .)
    GEQ             reduce using rule 68 (dereferenced_reference -> location ARROW .)
    LSS             reduce using rule 68 (dereferenced_reference -> location ARROW .)
    LEQ             reduce using rule 68 (dereferenced_reference -> location ARROW .)
    IN              reduce using rule 68 (dereferenced_reference -> location ARROW .)
    THEN            reduce using rule 68 (dereferenced_reference -> location ARROW .)
    WHILE           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    SEMICOL         reduce using rule 68 (dereferenced_reference -> location ARROW .)
    COMMA           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    RBRACK          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    RPAREN          reduce using rule 68 (dereferenced_reference -> location ARROW .)
    DOWN            reduce using rule 68 (dereferenced_reference -> location ARROW .)
    BY              reduce using rule 68 (dereferenced_reference -> location ARROW .)
    TO              reduce using rule 68 (dereferenced_reference -> location ARROW .)
    COLON           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    ELSE            reduce using rule 68 (dereferenced_reference -> location ARROW .)
    ELSIF           reduce using rule 68 (dereferenced_reference -> location ARROW .)
    FI              reduce using rule 68 (dereferenced_reference -> location ARROW .)


state 54

    (161) assigning_operator -> CONCATASSIGN .

    IF              reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    MINUS           reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    NOT             reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    ICONST          reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    ARROW           reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    LPAREN          reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    ID              reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    FALSE           reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    TRUE            reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    CCONST          reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    NULL            reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    SCONST          reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    NUM             reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    PRED            reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    SUCC            reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    UPPER           reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    LOWER           reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    LENGTH          reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    READ            reduce using rule 161 (assigning_operator -> CONCATASSIGN .)
    PRINT           reduce using rule 161 (assigning_operator -> CONCATASSIGN .)


state 55

    (160) assigning_operator -> PERCASSIGN .

    IF              reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    MINUS           reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    NOT             reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    ICONST          reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    ARROW           reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    LPAREN          reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    ID              reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    FALSE           reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    TRUE            reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    CCONST          reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    NULL            reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    SCONST          reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    NUM             reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    PRED            reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    SUCC            reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    UPPER           reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    LOWER           reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    LENGTH          reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    READ            reduce using rule 160 (assigning_operator -> PERCASSIGN .)
    PRINT           reduce using rule 160 (assigning_operator -> PERCASSIGN .)


state 56

    (158) assigning_operator -> TIMESASSIGN .

    IF              reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    MINUS           reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    NOT             reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    ICONST          reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    ARROW           reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    LPAREN          reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    ID              reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    FALSE           reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    TRUE            reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    CCONST          reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    NULL            reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    SCONST          reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    NUM             reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    PRED            reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    SUCC            reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    UPPER           reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    LOWER           reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    LENGTH          reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    READ            reduce using rule 158 (assigning_operator -> TIMESASSIGN .)
    PRINT           reduce using rule 158 (assigning_operator -> TIMESASSIGN .)


state 57

    (157) assigning_operator -> MINUSASSIGN .

    IF              reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    MINUS           reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    NOT             reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    ICONST          reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    ARROW           reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    LPAREN          reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    ID              reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    FALSE           reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    TRUE            reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    CCONST          reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    NULL            reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    SCONST          reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    NUM             reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    PRED            reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    SUCC            reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    UPPER           reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    LOWER           reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    LENGTH          reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    READ            reduce using rule 157 (assigning_operator -> MINUSASSIGN .)
    PRINT           reduce using rule 157 (assigning_operator -> MINUSASSIGN .)


state 58

    (155) assigning_operator -> ASSIGN .

    IF              reduce using rule 155 (assigning_operator -> ASSIGN .)
    MINUS           reduce using rule 155 (assigning_operator -> ASSIGN .)
    NOT             reduce using rule 155 (assigning_operator -> ASSIGN .)
    ICONST          reduce using rule 155 (assigning_operator -> ASSIGN .)
    ARROW           reduce using rule 155 (assigning_operator -> ASSIGN .)
    LPAREN          reduce using rule 155 (assigning_operator -> ASSIGN .)
    ID              reduce using rule 155 (assigning_operator -> ASSIGN .)
    FALSE           reduce using rule 155 (assigning_operator -> ASSIGN .)
    TRUE            reduce using rule 155 (assigning_operator -> ASSIGN .)
    CCONST          reduce using rule 155 (assigning_operator -> ASSIGN .)
    NULL            reduce using rule 155 (assigning_operator -> ASSIGN .)
    SCONST          reduce using rule 155 (assigning_operator -> ASSIGN .)
    NUM             reduce using rule 155 (assigning_operator -> ASSIGN .)
    PRED            reduce using rule 155 (assigning_operator -> ASSIGN .)
    SUCC            reduce using rule 155 (assigning_operator -> ASSIGN .)
    UPPER           reduce using rule 155 (assigning_operator -> ASSIGN .)
    LOWER           reduce using rule 155 (assigning_operator -> ASSIGN .)
    LENGTH          reduce using rule 155 (assigning_operator -> ASSIGN .)
    READ            reduce using rule 155 (assigning_operator -> ASSIGN .)
    PRINT           reduce using rule 155 (assigning_operator -> ASSIGN .)


state 59

    (159) assigning_operator -> DIVIDEASSIGN .

    IF              reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    MINUS           reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    NOT             reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    ICONST          reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    ARROW           reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    LPAREN          reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    ID              reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    FALSE           reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    TRUE            reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    CCONST          reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    NULL            reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    SCONST          reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    NUM             reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    PRED            reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    SUCC            reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    UPPER           reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    LOWER           reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    LENGTH          reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    READ            reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)
    PRINT           reduce using rule 159 (assigning_operator -> DIVIDEASSIGN .)


state 60

    (194) procedure_call -> procedure_name LPAREN . parameter_list RPAREN
    (195) procedure_call -> procedure_name LPAREN . RPAREN
    (196) parameter_list -> . parameter_list COMMA parameter
    (197) parameter_list -> . parameter
    (198) parameter -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    RPAREN          shift and go to state 132
    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    procedure_name                 shift and go to state 6
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    parameter                      shift and go to state 130
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 131
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    parameter_list                 shift and go to state 133
    value_array_element            shift and go to state 101
    integer_literal                shift and go to state 86
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 61

    (57) identifier_list -> identifier .

    ASSIGN          reduce using rule 57 (identifier_list -> identifier .)
    COMMA           reduce using rule 57 (identifier_list -> identifier .)
    REF             reduce using rule 57 (identifier_list -> identifier .)
    ID              reduce using rule 57 (identifier_list -> identifier .)
    INT             reduce using rule 57 (identifier_list -> identifier .)
    BOOL            reduce using rule 57 (identifier_list -> identifier .)
    CHAR            reduce using rule 57 (identifier_list -> identifier .)
    CHARS           reduce using rule 57 (identifier_list -> identifier .)
    ARRAY           reduce using rule 57 (identifier_list -> identifier .)


state 62

    (17) declaration -> identifier_list . mode initialization
    (18) declaration -> identifier_list . mode
    (58) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    COMMA           shift and go to state 142
    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    boolean_mode                   shift and go to state 143
    identifier                     shift and go to state 144
    array_mode                     shift and go to state 139
    discrete_mode_name             shift and go to state 151
    mode_name                      shift and go to state 137
    mode                           shift and go to state 148
    discrete_mode                  shift and go to state 138
    reference_mode                 shift and go to state 149
    composite_mode                 shift and go to state 150
    discrete_range_mode            shift and go to state 140
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    string_mode                    shift and go to state 141

state 63

    (9) declaration_statement -> DCL declaration_list . SEMICOL
    (15) declaration_list -> declaration_list . COMMA declaration

    SEMICOL         shift and go to state 154
    COMMA           shift and go to state 155


state 64

    (16) declaration_list -> declaration .

    SEMICOL         reduce using rule 16 (declaration_list -> declaration .)
    COMMA           reduce using rule 16 (declaration_list -> declaration .)


state 65

    (205) builtin_call -> builtin_name LPAREN . parameter_list RPAREN
    (206) builtin_call -> builtin_name LPAREN . RPAREN
    (196) parameter_list -> . parameter_list COMMA parameter
    (197) parameter_list -> . parameter
    (198) parameter -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    RPAREN          shift and go to state 156
    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    parameter                      shift and go to state 130
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 131
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    parameter_list                 shift and go to state 157
    value_array_element            shift and go to state 101
    integer_literal                shift and go to state 86
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 66

    (2) statement_list -> statement_list statement .

    END             reduce using rule 2 (statement_list -> statement_list statement .)
    DCL             reduce using rule 2 (statement_list -> statement_list statement .)
    SYN             reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    RESULT          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    DO              reduce using rule 2 (statement_list -> statement_list statement .)
    NUM             reduce using rule 2 (statement_list -> statement_list statement .)
    PRED            reduce using rule 2 (statement_list -> statement_list statement .)
    SUCC            reduce using rule 2 (statement_list -> statement_list statement .)
    UPPER           reduce using rule 2 (statement_list -> statement_list statement .)
    LOWER           reduce using rule 2 (statement_list -> statement_list statement .)
    LENGTH          reduce using rule 2 (statement_list -> statement_list statement .)
    READ            reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 67

    (12) procedure_statement -> label_id COLON . procedure_definition SEMICOL
    (13) action_statement -> label_id COLON . action SEMICOL
    (215) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (216) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (217) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (218) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL statement_list END
    (219) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL END
    (220) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL END
    (221) procedure_definition -> . PROC LPAREN RPAREN SEMICOL statement_list END
    (222) procedure_definition -> . PROC LPAREN RPAREN SEMICOL END
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location

    PROC            shift and go to state 160
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12
    ID              shift and go to state 47

    identifier                     shift and go to state 85
    assignment_action              shift and go to state 46
    exit_action                    shift and go to state 29
    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    procedure_definition           shift and go to state 158
    call_action                    shift and go to state 13
    action                         shift and go to state 159
    do_action                      shift and go to state 17
    bracketed_action               shift and go to state 41
    procedure_call                 shift and go to state 19
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    array_location                 shift and go to state 23
    array_element                  shift and go to state 49

state 68

    (75) array_element -> array_location LBRACK . expression_list RBRACK
    (76) array_slice -> array_location LBRACK . lower_bound COLON upper_bound RBRACK
    (97) expression_list -> . expression_list COMMA expression
    (98) expression_list -> . expression
    (44) lower_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 161
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    expression_list                shift and go to state 162
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    lower_bound                    shift and go to state 163
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 69

    (21) synonym_list -> synonym_definition .

    SEMICOL         reduce using rule 21 (synonym_list -> synonym_definition .)
    COMMA           reduce using rule 21 (synonym_list -> synonym_definition .)


state 70

    (22) synonym_definition -> identifier_list . mode ASSIGN constant_expression
    (23) synonym_definition -> identifier_list . ASSIGN constant_expression
    (58) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    ASSIGN          shift and go to state 164
    COMMA           shift and go to state 142
    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    boolean_mode                   shift and go to state 143
    identifier                     shift and go to state 144
    array_mode                     shift and go to state 139
    discrete_mode_name             shift and go to state 151
    mode                           shift and go to state 165
    mode_name                      shift and go to state 137
    discrete_mode                  shift and go to state 138
    reference_mode                 shift and go to state 149
    composite_mode                 shift and go to state 150
    discrete_range_mode            shift and go to state 140
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    string_mode                    shift and go to state 141

state 71

    (10) synonym_statement -> SYN synonym_list . SEMICOL
    (20) synonym_list -> synonym_list . COMMA synonym_definition

    SEMICOL         shift and go to state 167
    COMMA           shift and go to state 166


state 72

    (11) newmode_statement -> TYPE newmode_list . SEMICOL
    (25) newmode_list -> newmode_list . COMMA mode_definition

    SEMICOL         shift and go to state 169
    COMMA           shift and go to state 168


state 73

    (27) mode_definition -> identifier_list . ASSIGN mode
    (58) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 170
    COMMA           shift and go to state 142


state 74

    (26) newmode_list -> mode_definition .

    SEMICOL         reduce using rule 26 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 26 (newmode_list -> mode_definition .)


state 75

    (85) literal -> empty_literal .

    TIMES           reduce using rule 85 (literal -> empty_literal .)
    DIVIDE          reduce using rule 85 (literal -> empty_literal .)
    PERC            reduce using rule 85 (literal -> empty_literal .)
    PLUS            reduce using rule 85 (literal -> empty_literal .)
    MINUS           reduce using rule 85 (literal -> empty_literal .)
    CONCAT          reduce using rule 85 (literal -> empty_literal .)
    AND             reduce using rule 85 (literal -> empty_literal .)
    OR              reduce using rule 85 (literal -> empty_literal .)
    EQUALS          reduce using rule 85 (literal -> empty_literal .)
    DIF             reduce using rule 85 (literal -> empty_literal .)
    GTR             reduce using rule 85 (literal -> empty_literal .)
    GEQ             reduce using rule 85 (literal -> empty_literal .)
    LSS             reduce using rule 85 (literal -> empty_literal .)
    LEQ             reduce using rule 85 (literal -> empty_literal .)
    IN              reduce using rule 85 (literal -> empty_literal .)
    RBRACK          reduce using rule 85 (literal -> empty_literal .)
    COLON           reduce using rule 85 (literal -> empty_literal .)
    LBRACK          reduce using rule 85 (literal -> empty_literal .)
    RPAREN          reduce using rule 85 (literal -> empty_literal .)
    COMMA           reduce using rule 85 (literal -> empty_literal .)
    THEN            reduce using rule 85 (literal -> empty_literal .)
    FI              reduce using rule 85 (literal -> empty_literal .)
    SEMICOL         reduce using rule 85 (literal -> empty_literal .)
    ELSE            reduce using rule 85 (literal -> empty_literal .)
    ELSIF           reduce using rule 85 (literal -> empty_literal .)
    DOWN            reduce using rule 85 (literal -> empty_literal .)
    BY              reduce using rule 85 (literal -> empty_literal .)
    TO              reduce using rule 85 (literal -> empty_literal .)
    WHILE           reduce using rule 85 (literal -> empty_literal .)


state 76

    (83) literal -> boolean_literal .

    TIMES           reduce using rule 83 (literal -> boolean_literal .)
    DIVIDE          reduce using rule 83 (literal -> boolean_literal .)
    PERC            reduce using rule 83 (literal -> boolean_literal .)
    PLUS            reduce using rule 83 (literal -> boolean_literal .)
    MINUS           reduce using rule 83 (literal -> boolean_literal .)
    CONCAT          reduce using rule 83 (literal -> boolean_literal .)
    AND             reduce using rule 83 (literal -> boolean_literal .)
    OR              reduce using rule 83 (literal -> boolean_literal .)
    EQUALS          reduce using rule 83 (literal -> boolean_literal .)
    DIF             reduce using rule 83 (literal -> boolean_literal .)
    GTR             reduce using rule 83 (literal -> boolean_literal .)
    GEQ             reduce using rule 83 (literal -> boolean_literal .)
    LSS             reduce using rule 83 (literal -> boolean_literal .)
    LEQ             reduce using rule 83 (literal -> boolean_literal .)
    IN              reduce using rule 83 (literal -> boolean_literal .)
    RBRACK          reduce using rule 83 (literal -> boolean_literal .)
    COLON           reduce using rule 83 (literal -> boolean_literal .)
    LBRACK          reduce using rule 83 (literal -> boolean_literal .)
    RPAREN          reduce using rule 83 (literal -> boolean_literal .)
    COMMA           reduce using rule 83 (literal -> boolean_literal .)
    THEN            reduce using rule 83 (literal -> boolean_literal .)
    FI              reduce using rule 83 (literal -> boolean_literal .)
    SEMICOL         reduce using rule 83 (literal -> boolean_literal .)
    ELSE            reduce using rule 83 (literal -> boolean_literal .)
    ELSIF           reduce using rule 83 (literal -> boolean_literal .)
    DOWN            reduce using rule 83 (literal -> boolean_literal .)
    BY              reduce using rule 83 (literal -> boolean_literal .)
    TO              reduce using rule 83 (literal -> boolean_literal .)
    WHILE           reduce using rule 83 (literal -> boolean_literal .)


state 77

    (99) expression -> operand0 .
    (110) operand0 -> operand0 . operator1 operand1
    (111) operator1 -> . relational_operator
    (112) operator1 -> . membership_operator
    (113) relational_operator -> . AND
    (114) relational_operator -> . OR
    (115) relational_operator -> . EQUALS
    (116) relational_operator -> . DIF
    (117) relational_operator -> . GTR
    (118) relational_operator -> . GEQ
    (119) relational_operator -> . LSS
    (120) relational_operator -> . LEQ
    (121) membership_operator -> . IN

    DOWN            reduce using rule 99 (expression -> operand0 .)
    BY              reduce using rule 99 (expression -> operand0 .)
    TO              reduce using rule 99 (expression -> operand0 .)
    RBRACK          reduce using rule 99 (expression -> operand0 .)
    COMMA           reduce using rule 99 (expression -> operand0 .)
    COLON           reduce using rule 99 (expression -> operand0 .)
    SEMICOL         reduce using rule 99 (expression -> operand0 .)
    THEN            reduce using rule 99 (expression -> operand0 .)
    RPAREN          reduce using rule 99 (expression -> operand0 .)
    ELSE            reduce using rule 99 (expression -> operand0 .)
    ELSIF           reduce using rule 99 (expression -> operand0 .)
    WHILE           reduce using rule 99 (expression -> operand0 .)
    FI              reduce using rule 99 (expression -> operand0 .)
    AND             shift and go to state 181
    OR              shift and go to state 177
    EQUALS          shift and go to state 178
    DIF             shift and go to state 172
    GTR             shift and go to state 182
    GEQ             shift and go to state 173
    LSS             shift and go to state 175
    LEQ             shift and go to state 174
    IN              shift and go to state 171

    relational_operator            shift and go to state 179
    operator1                      shift and go to state 180
    membership_operator            shift and go to state 176

state 78

    (86) literal -> character_string_literal .

    TIMES           reduce using rule 86 (literal -> character_string_literal .)
    DIVIDE          reduce using rule 86 (literal -> character_string_literal .)
    PERC            reduce using rule 86 (literal -> character_string_literal .)
    PLUS            reduce using rule 86 (literal -> character_string_literal .)
    MINUS           reduce using rule 86 (literal -> character_string_literal .)
    CONCAT          reduce using rule 86 (literal -> character_string_literal .)
    AND             reduce using rule 86 (literal -> character_string_literal .)
    OR              reduce using rule 86 (literal -> character_string_literal .)
    EQUALS          reduce using rule 86 (literal -> character_string_literal .)
    DIF             reduce using rule 86 (literal -> character_string_literal .)
    GTR             reduce using rule 86 (literal -> character_string_literal .)
    GEQ             reduce using rule 86 (literal -> character_string_literal .)
    LSS             reduce using rule 86 (literal -> character_string_literal .)
    LEQ             reduce using rule 86 (literal -> character_string_literal .)
    IN              reduce using rule 86 (literal -> character_string_literal .)
    RBRACK          reduce using rule 86 (literal -> character_string_literal .)
    COLON           reduce using rule 86 (literal -> character_string_literal .)
    LBRACK          reduce using rule 86 (literal -> character_string_literal .)
    RPAREN          reduce using rule 86 (literal -> character_string_literal .)
    COMMA           reduce using rule 86 (literal -> character_string_literal .)
    THEN            reduce using rule 86 (literal -> character_string_literal .)
    FI              reduce using rule 86 (literal -> character_string_literal .)
    SEMICOL         reduce using rule 86 (literal -> character_string_literal .)
    ELSE            reduce using rule 86 (literal -> character_string_literal .)
    ELSIF           reduce using rule 86 (literal -> character_string_literal .)
    DOWN            reduce using rule 86 (literal -> character_string_literal .)
    BY              reduce using rule 86 (literal -> character_string_literal .)
    TO              reduce using rule 86 (literal -> character_string_literal .)
    WHILE           reduce using rule 86 (literal -> character_string_literal .)


state 79

    (91) empty_literal -> NULL .

    TIMES           reduce using rule 91 (empty_literal -> NULL .)
    DIVIDE          reduce using rule 91 (empty_literal -> NULL .)
    PERC            reduce using rule 91 (empty_literal -> NULL .)
    PLUS            reduce using rule 91 (empty_literal -> NULL .)
    MINUS           reduce using rule 91 (empty_literal -> NULL .)
    CONCAT          reduce using rule 91 (empty_literal -> NULL .)
    AND             reduce using rule 91 (empty_literal -> NULL .)
    OR              reduce using rule 91 (empty_literal -> NULL .)
    EQUALS          reduce using rule 91 (empty_literal -> NULL .)
    DIF             reduce using rule 91 (empty_literal -> NULL .)
    GTR             reduce using rule 91 (empty_literal -> NULL .)
    GEQ             reduce using rule 91 (empty_literal -> NULL .)
    LSS             reduce using rule 91 (empty_literal -> NULL .)
    LEQ             reduce using rule 91 (empty_literal -> NULL .)
    IN              reduce using rule 91 (empty_literal -> NULL .)
    ELSE            reduce using rule 91 (empty_literal -> NULL .)
    ELSIF           reduce using rule 91 (empty_literal -> NULL .)
    LBRACK          reduce using rule 91 (empty_literal -> NULL .)
    RBRACK          reduce using rule 91 (empty_literal -> NULL .)
    COLON           reduce using rule 91 (empty_literal -> NULL .)
    SEMICOL         reduce using rule 91 (empty_literal -> NULL .)
    COMMA           reduce using rule 91 (empty_literal -> NULL .)
    WHILE           reduce using rule 91 (empty_literal -> NULL .)
    DOWN            reduce using rule 91 (empty_literal -> NULL .)
    TO              reduce using rule 91 (empty_literal -> NULL .)
    THEN            reduce using rule 91 (empty_literal -> NULL .)
    RPAREN          reduce using rule 91 (empty_literal -> NULL .)
    BY              reduce using rule 91 (empty_literal -> NULL .)
    FI              reduce using rule 91 (empty_literal -> NULL .)


state 80

    (139) operand4 -> location .
    (68) dereferenced_reference -> location . ARROW
    (72) string_location -> location .
    (77) array_location -> location .

  ! reduce/reduce conflict for LBRACK resolved using rule 72 (string_location -> location .)
    TIMES           reduce using rule 139 (operand4 -> location .)
    DIVIDE          reduce using rule 139 (operand4 -> location .)
    PERC            reduce using rule 139 (operand4 -> location .)
    PLUS            reduce using rule 139 (operand4 -> location .)
    MINUS           reduce using rule 139 (operand4 -> location .)
    CONCAT          reduce using rule 139 (operand4 -> location .)
    AND             reduce using rule 139 (operand4 -> location .)
    OR              reduce using rule 139 (operand4 -> location .)
    EQUALS          reduce using rule 139 (operand4 -> location .)
    DIF             reduce using rule 139 (operand4 -> location .)
    GTR             reduce using rule 139 (operand4 -> location .)
    GEQ             reduce using rule 139 (operand4 -> location .)
    LSS             reduce using rule 139 (operand4 -> location .)
    LEQ             reduce using rule 139 (operand4 -> location .)
    IN              reduce using rule 139 (operand4 -> location .)
    SEMICOL         reduce using rule 139 (operand4 -> location .)
    THEN            reduce using rule 139 (operand4 -> location .)
    RBRACK          reduce using rule 139 (operand4 -> location .)
    COLON           reduce using rule 139 (operand4 -> location .)
    RPAREN          reduce using rule 139 (operand4 -> location .)
    COMMA           reduce using rule 139 (operand4 -> location .)
    ELSE            reduce using rule 139 (operand4 -> location .)
    ELSIF           reduce using rule 139 (operand4 -> location .)
    DOWN            reduce using rule 139 (operand4 -> location .)
    BY              reduce using rule 139 (operand4 -> location .)
    TO              reduce using rule 139 (operand4 -> location .)
    FI              reduce using rule 139 (operand4 -> location .)
    WHILE           reduce using rule 139 (operand4 -> location .)
    ARROW           shift and go to state 53
    LBRACK          reduce using rule 72 (string_location -> location .)

  ! LBRACK          [ reduce using rule 77 (array_location -> location .) ]


state 81

    (122) operand1 -> operand2 .
    (130) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (131) arithmetic_multiplicative_operator -> . TIMES
    (132) arithmetic_multiplicative_operator -> . DIVIDE
    (133) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 122 (operand1 -> operand2 .)
    MINUS           reduce using rule 122 (operand1 -> operand2 .)
    CONCAT          reduce using rule 122 (operand1 -> operand2 .)
    AND             reduce using rule 122 (operand1 -> operand2 .)
    OR              reduce using rule 122 (operand1 -> operand2 .)
    EQUALS          reduce using rule 122 (operand1 -> operand2 .)
    DIF             reduce using rule 122 (operand1 -> operand2 .)
    GTR             reduce using rule 122 (operand1 -> operand2 .)
    GEQ             reduce using rule 122 (operand1 -> operand2 .)
    LSS             reduce using rule 122 (operand1 -> operand2 .)
    LEQ             reduce using rule 122 (operand1 -> operand2 .)
    IN              reduce using rule 122 (operand1 -> operand2 .)
    THEN            reduce using rule 122 (operand1 -> operand2 .)
    RPAREN          reduce using rule 122 (operand1 -> operand2 .)
    ELSE            reduce using rule 122 (operand1 -> operand2 .)
    ELSIF           reduce using rule 122 (operand1 -> operand2 .)
    RBRACK          reduce using rule 122 (operand1 -> operand2 .)
    COMMA           reduce using rule 122 (operand1 -> operand2 .)
    FI              reduce using rule 122 (operand1 -> operand2 .)
    SEMICOL         reduce using rule 122 (operand1 -> operand2 .)
    COLON           reduce using rule 122 (operand1 -> operand2 .)
    DOWN            reduce using rule 122 (operand1 -> operand2 .)
    TO              reduce using rule 122 (operand1 -> operand2 .)
    BY              reduce using rule 122 (operand1 -> operand2 .)
    WHILE           reduce using rule 122 (operand1 -> operand2 .)
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 186
    PERC            shift and go to state 184

    arithmetic_multiplicative_operator shift and go to state 185

state 82

    (93) value_array_element -> array_primitive_value . LBRACK expression_list RBRACK
    (94) value_array_slice -> array_primitive_value . LBRACK lower_bound COLON upper_bound RBRACK

    LBRACK          shift and go to state 187


state 83

    (66) location -> call_action .

    ARROW           reduce using rule 66 (location -> call_action .)
    TIMES           reduce using rule 66 (location -> call_action .)
    DIVIDE          reduce using rule 66 (location -> call_action .)
    PERC            reduce using rule 66 (location -> call_action .)
    PLUS            reduce using rule 66 (location -> call_action .)
    MINUS           reduce using rule 66 (location -> call_action .)
    CONCAT          reduce using rule 66 (location -> call_action .)
    AND             reduce using rule 66 (location -> call_action .)
    OR              reduce using rule 66 (location -> call_action .)
    EQUALS          reduce using rule 66 (location -> call_action .)
    DIF             reduce using rule 66 (location -> call_action .)
    GTR             reduce using rule 66 (location -> call_action .)
    GEQ             reduce using rule 66 (location -> call_action .)
    LSS             reduce using rule 66 (location -> call_action .)
    LEQ             reduce using rule 66 (location -> call_action .)
    IN              reduce using rule 66 (location -> call_action .)
    ELSE            reduce using rule 66 (location -> call_action .)
    ELSIF           reduce using rule 66 (location -> call_action .)
    LBRACK          reduce using rule 66 (location -> call_action .)
    SEMICOL         reduce using rule 66 (location -> call_action .)
    RPAREN          reduce using rule 66 (location -> call_action .)
    RBRACK          reduce using rule 66 (location -> call_action .)
    COMMA           reduce using rule 66 (location -> call_action .)
    COLON           reduce using rule 66 (location -> call_action .)
    THEN            reduce using rule 66 (location -> call_action .)
    DOWN            reduce using rule 66 (location -> call_action .)
    BY              reduce using rule 66 (location -> call_action .)
    TO              reduce using rule 66 (location -> call_action .)
    FI              reduce using rule 66 (location -> call_action .)
    WHILE           reduce using rule 66 (location -> call_action .)


state 84

    (140) operand4 -> referenced_location .

    TIMES           reduce using rule 140 (operand4 -> referenced_location .)
    DIVIDE          reduce using rule 140 (operand4 -> referenced_location .)
    PERC            reduce using rule 140 (operand4 -> referenced_location .)
    PLUS            reduce using rule 140 (operand4 -> referenced_location .)
    MINUS           reduce using rule 140 (operand4 -> referenced_location .)
    CONCAT          reduce using rule 140 (operand4 -> referenced_location .)
    AND             reduce using rule 140 (operand4 -> referenced_location .)
    OR              reduce using rule 140 (operand4 -> referenced_location .)
    EQUALS          reduce using rule 140 (operand4 -> referenced_location .)
    DIF             reduce using rule 140 (operand4 -> referenced_location .)
    GTR             reduce using rule 140 (operand4 -> referenced_location .)
    GEQ             reduce using rule 140 (operand4 -> referenced_location .)
    LSS             reduce using rule 140 (operand4 -> referenced_location .)
    LEQ             reduce using rule 140 (operand4 -> referenced_location .)
    IN              reduce using rule 140 (operand4 -> referenced_location .)
    SEMICOL         reduce using rule 140 (operand4 -> referenced_location .)
    THEN            reduce using rule 140 (operand4 -> referenced_location .)
    RBRACK          reduce using rule 140 (operand4 -> referenced_location .)
    COLON           reduce using rule 140 (operand4 -> referenced_location .)
    RPAREN          reduce using rule 140 (operand4 -> referenced_location .)
    COMMA           reduce using rule 140 (operand4 -> referenced_location .)
    ELSE            reduce using rule 140 (operand4 -> referenced_location .)
    ELSIF           reduce using rule 140 (operand4 -> referenced_location .)
    DOWN            reduce using rule 140 (operand4 -> referenced_location .)
    BY              reduce using rule 140 (operand4 -> referenced_location .)
    TO              reduce using rule 140 (operand4 -> referenced_location .)
    FI              reduce using rule 140 (operand4 -> referenced_location .)
    WHILE           reduce using rule 140 (operand4 -> referenced_location .)


state 85

    (67) location_name -> identifier .
    (199) procedure_name -> identifier .

    ARROW           reduce using rule 67 (location_name -> identifier .)
    TIMES           reduce using rule 67 (location_name -> identifier .)
    DIVIDE          reduce using rule 67 (location_name -> identifier .)
    PERC            reduce using rule 67 (location_name -> identifier .)
    PLUS            reduce using rule 67 (location_name -> identifier .)
    MINUS           reduce using rule 67 (location_name -> identifier .)
    CONCAT          reduce using rule 67 (location_name -> identifier .)
    AND             reduce using rule 67 (location_name -> identifier .)
    OR              reduce using rule 67 (location_name -> identifier .)
    EQUALS          reduce using rule 67 (location_name -> identifier .)
    DIF             reduce using rule 67 (location_name -> identifier .)
    GTR             reduce using rule 67 (location_name -> identifier .)
    GEQ             reduce using rule 67 (location_name -> identifier .)
    LSS             reduce using rule 67 (location_name -> identifier .)
    LEQ             reduce using rule 67 (location_name -> identifier .)
    IN              reduce using rule 67 (location_name -> identifier .)
    THEN            reduce using rule 67 (location_name -> identifier .)
    LBRACK          reduce using rule 67 (location_name -> identifier .)
    FI              reduce using rule 67 (location_name -> identifier .)
    RPAREN          reduce using rule 67 (location_name -> identifier .)
    COMMA           reduce using rule 67 (location_name -> identifier .)
    RBRACK          reduce using rule 67 (location_name -> identifier .)
    WHILE           reduce using rule 67 (location_name -> identifier .)
    SEMICOL         reduce using rule 67 (location_name -> identifier .)
    COLON           reduce using rule 67 (location_name -> identifier .)
    ELSE            reduce using rule 67 (location_name -> identifier .)
    ELSIF           reduce using rule 67 (location_name -> identifier .)
    DOWN            reduce using rule 67 (location_name -> identifier .)
    BY              reduce using rule 67 (location_name -> identifier .)
    TO              reduce using rule 67 (location_name -> identifier .)
    ASSIGN          reduce using rule 67 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 67 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 67 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 67 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 67 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 67 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 67 (location_name -> identifier .)
    LPAREN          reduce using rule 199 (procedure_name -> identifier .)


state 86

    (136) operand3 -> integer_literal .
    (82) literal -> integer_literal .

  ! reduce/reduce conflict for TIMES resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for PERC resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for PLUS resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for MINUS resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for CONCAT resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for AND resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for OR resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for EQUALS resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for DIF resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for GTR resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for GEQ resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for LSS resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for LEQ resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for IN resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for RBRACK resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for COLON resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for RPAREN resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for COMMA resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for THEN resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for FI resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for ELSE resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for ELSIF resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for DOWN resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for BY resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for TO resolved using rule 82 (literal -> integer_literal .)
  ! reduce/reduce conflict for WHILE resolved using rule 82 (literal -> integer_literal .)
    TIMES           reduce using rule 82 (literal -> integer_literal .)
    DIVIDE          reduce using rule 82 (literal -> integer_literal .)
    PERC            reduce using rule 82 (literal -> integer_literal .)
    PLUS            reduce using rule 82 (literal -> integer_literal .)
    MINUS           reduce using rule 82 (literal -> integer_literal .)
    CONCAT          reduce using rule 82 (literal -> integer_literal .)
    AND             reduce using rule 82 (literal -> integer_literal .)
    OR              reduce using rule 82 (literal -> integer_literal .)
    EQUALS          reduce using rule 82 (literal -> integer_literal .)
    DIF             reduce using rule 82 (literal -> integer_literal .)
    GTR             reduce using rule 82 (literal -> integer_literal .)
    GEQ             reduce using rule 82 (literal -> integer_literal .)
    LSS             reduce using rule 82 (literal -> integer_literal .)
    LEQ             reduce using rule 82 (literal -> integer_literal .)
    IN              reduce using rule 82 (literal -> integer_literal .)
    RBRACK          reduce using rule 82 (literal -> integer_literal .)
    COLON           reduce using rule 82 (literal -> integer_literal .)
    LBRACK          reduce using rule 82 (literal -> integer_literal .)
    RPAREN          reduce using rule 82 (literal -> integer_literal .)
    COMMA           reduce using rule 82 (literal -> integer_literal .)
    THEN            reduce using rule 82 (literal -> integer_literal .)
    FI              reduce using rule 82 (literal -> integer_literal .)
    SEMICOL         reduce using rule 82 (literal -> integer_literal .)
    ELSE            reduce using rule 82 (literal -> integer_literal .)
    ELSIF           reduce using rule 82 (literal -> integer_literal .)
    DOWN            reduce using rule 82 (literal -> integer_literal .)
    BY              reduce using rule 82 (literal -> integer_literal .)
    TO              reduce using rule 82 (literal -> integer_literal .)
    WHILE           reduce using rule 82 (literal -> integer_literal .)

  ! TIMES           [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! DIVIDE          [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! PERC            [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! PLUS            [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! MINUS           [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! CONCAT          [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! AND             [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! OR              [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! EQUALS          [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! DIF             [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! GTR             [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! GEQ             [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! LSS             [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! LEQ             [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! IN              [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! DOWN            [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! BY              [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! TO              [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! COLON           [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! SEMICOL         [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! THEN            [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! RPAREN          [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! COMMA           [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! ELSE            [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! ELSIF           [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! RBRACK          [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! FI              [ reduce using rule 136 (operand3 -> integer_literal .) ]
  ! WHILE           [ reduce using rule 136 (operand3 -> integer_literal .) ]


state 87

    (109) operand0 -> operand1 .
    (123) operand1 -> operand1 . operator2 operand2
    (124) operator2 -> . arithmetic_additive_operator
    (125) operator2 -> . string_concatenation_operator
    (126) arithmetic_additive_operator -> . PLUS
    (127) arithmetic_additive_operator -> . MINUS
    (128) string_concatenation_operator -> . CONCAT

    AND             reduce using rule 109 (operand0 -> operand1 .)
    OR              reduce using rule 109 (operand0 -> operand1 .)
    EQUALS          reduce using rule 109 (operand0 -> operand1 .)
    DIF             reduce using rule 109 (operand0 -> operand1 .)
    GTR             reduce using rule 109 (operand0 -> operand1 .)
    GEQ             reduce using rule 109 (operand0 -> operand1 .)
    LSS             reduce using rule 109 (operand0 -> operand1 .)
    LEQ             reduce using rule 109 (operand0 -> operand1 .)
    IN              reduce using rule 109 (operand0 -> operand1 .)
    ELSE            reduce using rule 109 (operand0 -> operand1 .)
    ELSIF           reduce using rule 109 (operand0 -> operand1 .)
    RPAREN          reduce using rule 109 (operand0 -> operand1 .)
    RBRACK          reduce using rule 109 (operand0 -> operand1 .)
    COMMA           reduce using rule 109 (operand0 -> operand1 .)
    THEN            reduce using rule 109 (operand0 -> operand1 .)
    WHILE           reduce using rule 109 (operand0 -> operand1 .)
    SEMICOL         reduce using rule 109 (operand0 -> operand1 .)
    COLON           reduce using rule 109 (operand0 -> operand1 .)
    DOWN            reduce using rule 109 (operand0 -> operand1 .)
    TO              reduce using rule 109 (operand0 -> operand1 .)
    BY              reduce using rule 109 (operand0 -> operand1 .)
    FI              reduce using rule 109 (operand0 -> operand1 .)
    PLUS            shift and go to state 192
    MINUS           shift and go to state 193
    CONCAT          shift and go to state 190

    operator2                      shift and go to state 188
    string_concatenation_operator  shift and go to state 189
    arithmetic_additive_operator   shift and go to state 191

state 88

    (135) operand3 -> operand4 .

    TIMES           reduce using rule 135 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 135 (operand3 -> operand4 .)
    PERC            reduce using rule 135 (operand3 -> operand4 .)
    PLUS            reduce using rule 135 (operand3 -> operand4 .)
    MINUS           reduce using rule 135 (operand3 -> operand4 .)
    CONCAT          reduce using rule 135 (operand3 -> operand4 .)
    AND             reduce using rule 135 (operand3 -> operand4 .)
    OR              reduce using rule 135 (operand3 -> operand4 .)
    EQUALS          reduce using rule 135 (operand3 -> operand4 .)
    DIF             reduce using rule 135 (operand3 -> operand4 .)
    GTR             reduce using rule 135 (operand3 -> operand4 .)
    GEQ             reduce using rule 135 (operand3 -> operand4 .)
    LSS             reduce using rule 135 (operand3 -> operand4 .)
    LEQ             reduce using rule 135 (operand3 -> operand4 .)
    IN              reduce using rule 135 (operand3 -> operand4 .)
    DOWN            reduce using rule 135 (operand3 -> operand4 .)
    BY              reduce using rule 135 (operand3 -> operand4 .)
    TO              reduce using rule 135 (operand3 -> operand4 .)
    COLON           reduce using rule 135 (operand3 -> operand4 .)
    SEMICOL         reduce using rule 135 (operand3 -> operand4 .)
    THEN            reduce using rule 135 (operand3 -> operand4 .)
    RPAREN          reduce using rule 135 (operand3 -> operand4 .)
    COMMA           reduce using rule 135 (operand3 -> operand4 .)
    ELSE            reduce using rule 135 (operand3 -> operand4 .)
    ELSIF           reduce using rule 135 (operand3 -> operand4 .)
    RBRACK          reduce using rule 135 (operand3 -> operand4 .)
    FI              reduce using rule 135 (operand3 -> operand4 .)
    WHILE           reduce using rule 135 (operand3 -> operand4 .)


state 89

    (204) result -> expression .

    SEMICOL         reduce using rule 204 (result -> expression .)


state 90

    (141) operand4 -> primitive_value .
    (95) array_primitive_value -> primitive_value .

    TIMES           reduce using rule 141 (operand4 -> primitive_value .)
    DIVIDE          reduce using rule 141 (operand4 -> primitive_value .)
    PERC            reduce using rule 141 (operand4 -> primitive_value .)
    PLUS            reduce using rule 141 (operand4 -> primitive_value .)
    MINUS           reduce using rule 141 (operand4 -> primitive_value .)
    CONCAT          reduce using rule 141 (operand4 -> primitive_value .)
    AND             reduce using rule 141 (operand4 -> primitive_value .)
    OR              reduce using rule 141 (operand4 -> primitive_value .)
    EQUALS          reduce using rule 141 (operand4 -> primitive_value .)
    DIF             reduce using rule 141 (operand4 -> primitive_value .)
    GTR             reduce using rule 141 (operand4 -> primitive_value .)
    GEQ             reduce using rule 141 (operand4 -> primitive_value .)
    LSS             reduce using rule 141 (operand4 -> primitive_value .)
    LEQ             reduce using rule 141 (operand4 -> primitive_value .)
    IN              reduce using rule 141 (operand4 -> primitive_value .)
    SEMICOL         reduce using rule 141 (operand4 -> primitive_value .)
    THEN            reduce using rule 141 (operand4 -> primitive_value .)
    RBRACK          reduce using rule 141 (operand4 -> primitive_value .)
    COLON           reduce using rule 141 (operand4 -> primitive_value .)
    RPAREN          reduce using rule 141 (operand4 -> primitive_value .)
    COMMA           reduce using rule 141 (operand4 -> primitive_value .)
    ELSE            reduce using rule 141 (operand4 -> primitive_value .)
    ELSIF           reduce using rule 141 (operand4 -> primitive_value .)
    DOWN            reduce using rule 141 (operand4 -> primitive_value .)
    BY              reduce using rule 141 (operand4 -> primitive_value .)
    TO              reduce using rule 141 (operand4 -> primitive_value .)
    FI              reduce using rule 141 (operand4 -> primitive_value .)
    WHILE           reduce using rule 141 (operand4 -> primitive_value .)
    LBRACK          reduce using rule 95 (array_primitive_value -> primitive_value .)


state 91

    (89) boolean_literal -> TRUE .

    TIMES           reduce using rule 89 (boolean_literal -> TRUE .)
    DIVIDE          reduce using rule 89 (boolean_literal -> TRUE .)
    PERC            reduce using rule 89 (boolean_literal -> TRUE .)
    PLUS            reduce using rule 89 (boolean_literal -> TRUE .)
    MINUS           reduce using rule 89 (boolean_literal -> TRUE .)
    CONCAT          reduce using rule 89 (boolean_literal -> TRUE .)
    AND             reduce using rule 89 (boolean_literal -> TRUE .)
    OR              reduce using rule 89 (boolean_literal -> TRUE .)
    EQUALS          reduce using rule 89 (boolean_literal -> TRUE .)
    DIF             reduce using rule 89 (boolean_literal -> TRUE .)
    GTR             reduce using rule 89 (boolean_literal -> TRUE .)
    GEQ             reduce using rule 89 (boolean_literal -> TRUE .)
    LSS             reduce using rule 89 (boolean_literal -> TRUE .)
    LEQ             reduce using rule 89 (boolean_literal -> TRUE .)
    IN              reduce using rule 89 (boolean_literal -> TRUE .)
    RPAREN          reduce using rule 89 (boolean_literal -> TRUE .)
    RBRACK          reduce using rule 89 (boolean_literal -> TRUE .)
    COMMA           reduce using rule 89 (boolean_literal -> TRUE .)
    LBRACK          reduce using rule 89 (boolean_literal -> TRUE .)
    SEMICOL         reduce using rule 89 (boolean_literal -> TRUE .)
    THEN            reduce using rule 89 (boolean_literal -> TRUE .)
    COLON           reduce using rule 89 (boolean_literal -> TRUE .)
    ELSE            reduce using rule 89 (boolean_literal -> TRUE .)
    ELSIF           reduce using rule 89 (boolean_literal -> TRUE .)
    DOWN            reduce using rule 89 (boolean_literal -> TRUE .)
    BY              reduce using rule 89 (boolean_literal -> TRUE .)
    TO              reduce using rule 89 (boolean_literal -> TRUE .)
    FI              reduce using rule 89 (boolean_literal -> TRUE .)
    WHILE           reduce using rule 89 (boolean_literal -> TRUE .)


state 92

    (81) primitive_value -> parenthesized_expression .

    TIMES           reduce using rule 81 (primitive_value -> parenthesized_expression .)
    DIVIDE          reduce using rule 81 (primitive_value -> parenthesized_expression .)
    PERC            reduce using rule 81 (primitive_value -> parenthesized_expression .)
    PLUS            reduce using rule 81 (primitive_value -> parenthesized_expression .)
    MINUS           reduce using rule 81 (primitive_value -> parenthesized_expression .)
    CONCAT          reduce using rule 81 (primitive_value -> parenthesized_expression .)
    AND             reduce using rule 81 (primitive_value -> parenthesized_expression .)
    OR              reduce using rule 81 (primitive_value -> parenthesized_expression .)
    EQUALS          reduce using rule 81 (primitive_value -> parenthesized_expression .)
    DIF             reduce using rule 81 (primitive_value -> parenthesized_expression .)
    GTR             reduce using rule 81 (primitive_value -> parenthesized_expression .)
    GEQ             reduce using rule 81 (primitive_value -> parenthesized_expression .)
    LSS             reduce using rule 81 (primitive_value -> parenthesized_expression .)
    LEQ             reduce using rule 81 (primitive_value -> parenthesized_expression .)
    IN              reduce using rule 81 (primitive_value -> parenthesized_expression .)
    SEMICOL         reduce using rule 81 (primitive_value -> parenthesized_expression .)
    COMMA           reduce using rule 81 (primitive_value -> parenthesized_expression .)
    LBRACK          reduce using rule 81 (primitive_value -> parenthesized_expression .)
    RPAREN          reduce using rule 81 (primitive_value -> parenthesized_expression .)
    RBRACK          reduce using rule 81 (primitive_value -> parenthesized_expression .)
    DOWN            reduce using rule 81 (primitive_value -> parenthesized_expression .)
    BY              reduce using rule 81 (primitive_value -> parenthesized_expression .)
    TO              reduce using rule 81 (primitive_value -> parenthesized_expression .)
    WHILE           reduce using rule 81 (primitive_value -> parenthesized_expression .)
    THEN            reduce using rule 81 (primitive_value -> parenthesized_expression .)
    COLON           reduce using rule 81 (primitive_value -> parenthesized_expression .)
    ELSE            reduce using rule 81 (primitive_value -> parenthesized_expression .)
    ELSIF           reduce using rule 81 (primitive_value -> parenthesized_expression .)
    FI              reduce using rule 81 (primitive_value -> parenthesized_expression .)


state 93

    (138) monadic_operator -> NOT .

    ARROW           reduce using rule 138 (monadic_operator -> NOT .)
    LPAREN          reduce using rule 138 (monadic_operator -> NOT .)
    ID              reduce using rule 138 (monadic_operator -> NOT .)
    ICONST          reduce using rule 138 (monadic_operator -> NOT .)
    FALSE           reduce using rule 138 (monadic_operator -> NOT .)
    TRUE            reduce using rule 138 (monadic_operator -> NOT .)
    CCONST          reduce using rule 138 (monadic_operator -> NOT .)
    NULL            reduce using rule 138 (monadic_operator -> NOT .)
    SCONST          reduce using rule 138 (monadic_operator -> NOT .)
    NUM             reduce using rule 138 (monadic_operator -> NOT .)
    PRED            reduce using rule 138 (monadic_operator -> NOT .)
    SUCC            reduce using rule 138 (monadic_operator -> NOT .)
    UPPER           reduce using rule 138 (monadic_operator -> NOT .)
    LOWER           reduce using rule 138 (monadic_operator -> NOT .)
    LENGTH          reduce using rule 138 (monadic_operator -> NOT .)
    READ            reduce using rule 138 (monadic_operator -> NOT .)
    PRINT           reduce using rule 138 (monadic_operator -> NOT .)


state 94

    (96) parenthesized_expression -> LPAREN . expression RPAREN
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 194
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 95

    (90) character_literal -> CCONST .

    TIMES           reduce using rule 90 (character_literal -> CCONST .)
    DIVIDE          reduce using rule 90 (character_literal -> CCONST .)
    PERC            reduce using rule 90 (character_literal -> CCONST .)
    PLUS            reduce using rule 90 (character_literal -> CCONST .)
    MINUS           reduce using rule 90 (character_literal -> CCONST .)
    CONCAT          reduce using rule 90 (character_literal -> CCONST .)
    AND             reduce using rule 90 (character_literal -> CCONST .)
    OR              reduce using rule 90 (character_literal -> CCONST .)
    EQUALS          reduce using rule 90 (character_literal -> CCONST .)
    DIF             reduce using rule 90 (character_literal -> CCONST .)
    GTR             reduce using rule 90 (character_literal -> CCONST .)
    GEQ             reduce using rule 90 (character_literal -> CCONST .)
    LSS             reduce using rule 90 (character_literal -> CCONST .)
    LEQ             reduce using rule 90 (character_literal -> CCONST .)
    IN              reduce using rule 90 (character_literal -> CCONST .)
    SEMICOL         reduce using rule 90 (character_literal -> CCONST .)
    COMMA           reduce using rule 90 (character_literal -> CCONST .)
    LBRACK          reduce using rule 90 (character_literal -> CCONST .)
    RBRACK          reduce using rule 90 (character_literal -> CCONST .)
    COLON           reduce using rule 90 (character_literal -> CCONST .)
    THEN            reduce using rule 90 (character_literal -> CCONST .)
    WHILE           reduce using rule 90 (character_literal -> CCONST .)
    RPAREN          reduce using rule 90 (character_literal -> CCONST .)
    ELSE            reduce using rule 90 (character_literal -> CCONST .)
    ELSIF           reduce using rule 90 (character_literal -> CCONST .)
    DOWN            reduce using rule 90 (character_literal -> CCONST .)
    BY              reduce using rule 90 (character_literal -> CCONST .)
    TO              reduce using rule 90 (character_literal -> CCONST .)
    FI              reduce using rule 90 (character_literal -> CCONST .)


state 96

    (84) literal -> character_literal .

    TIMES           reduce using rule 84 (literal -> character_literal .)
    DIVIDE          reduce using rule 84 (literal -> character_literal .)
    PERC            reduce using rule 84 (literal -> character_literal .)
    PLUS            reduce using rule 84 (literal -> character_literal .)
    MINUS           reduce using rule 84 (literal -> character_literal .)
    CONCAT          reduce using rule 84 (literal -> character_literal .)
    AND             reduce using rule 84 (literal -> character_literal .)
    OR              reduce using rule 84 (literal -> character_literal .)
    EQUALS          reduce using rule 84 (literal -> character_literal .)
    DIF             reduce using rule 84 (literal -> character_literal .)
    GTR             reduce using rule 84 (literal -> character_literal .)
    GEQ             reduce using rule 84 (literal -> character_literal .)
    LSS             reduce using rule 84 (literal -> character_literal .)
    LEQ             reduce using rule 84 (literal -> character_literal .)
    IN              reduce using rule 84 (literal -> character_literal .)
    RBRACK          reduce using rule 84 (literal -> character_literal .)
    COLON           reduce using rule 84 (literal -> character_literal .)
    LBRACK          reduce using rule 84 (literal -> character_literal .)
    RPAREN          reduce using rule 84 (literal -> character_literal .)
    COMMA           reduce using rule 84 (literal -> character_literal .)
    THEN            reduce using rule 84 (literal -> character_literal .)
    FI              reduce using rule 84 (literal -> character_literal .)
    SEMICOL         reduce using rule 84 (literal -> character_literal .)
    ELSE            reduce using rule 84 (literal -> character_literal .)
    ELSIF           reduce using rule 84 (literal -> character_literal .)
    DOWN            reduce using rule 84 (literal -> character_literal .)
    BY              reduce using rule 84 (literal -> character_literal .)
    TO              reduce using rule 84 (literal -> character_literal .)
    WHILE           reduce using rule 84 (literal -> character_literal .)


state 97

    (142) referenced_location -> ARROW . location
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    ID              shift and go to state 47
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 195
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    array_element                  shift and go to state 49

state 98

    (78) primitive_value -> literal .

    TIMES           reduce using rule 78 (primitive_value -> literal .)
    DIVIDE          reduce using rule 78 (primitive_value -> literal .)
    PERC            reduce using rule 78 (primitive_value -> literal .)
    PLUS            reduce using rule 78 (primitive_value -> literal .)
    MINUS           reduce using rule 78 (primitive_value -> literal .)
    CONCAT          reduce using rule 78 (primitive_value -> literal .)
    AND             reduce using rule 78 (primitive_value -> literal .)
    OR              reduce using rule 78 (primitive_value -> literal .)
    EQUALS          reduce using rule 78 (primitive_value -> literal .)
    DIF             reduce using rule 78 (primitive_value -> literal .)
    GTR             reduce using rule 78 (primitive_value -> literal .)
    GEQ             reduce using rule 78 (primitive_value -> literal .)
    LSS             reduce using rule 78 (primitive_value -> literal .)
    LEQ             reduce using rule 78 (primitive_value -> literal .)
    IN              reduce using rule 78 (primitive_value -> literal .)
    SEMICOL         reduce using rule 78 (primitive_value -> literal .)
    COMMA           reduce using rule 78 (primitive_value -> literal .)
    LBRACK          reduce using rule 78 (primitive_value -> literal .)
    RPAREN          reduce using rule 78 (primitive_value -> literal .)
    RBRACK          reduce using rule 78 (primitive_value -> literal .)
    DOWN            reduce using rule 78 (primitive_value -> literal .)
    BY              reduce using rule 78 (primitive_value -> literal .)
    TO              reduce using rule 78 (primitive_value -> literal .)
    WHILE           reduce using rule 78 (primitive_value -> literal .)
    THEN            reduce using rule 78 (primitive_value -> literal .)
    COLON           reduce using rule 78 (primitive_value -> literal .)
    ELSE            reduce using rule 78 (primitive_value -> literal .)
    ELSIF           reduce using rule 78 (primitive_value -> literal .)
    FI              reduce using rule 78 (primitive_value -> literal .)


state 99

    (80) primitive_value -> value_array_slice .

    TIMES           reduce using rule 80 (primitive_value -> value_array_slice .)
    DIVIDE          reduce using rule 80 (primitive_value -> value_array_slice .)
    PERC            reduce using rule 80 (primitive_value -> value_array_slice .)
    PLUS            reduce using rule 80 (primitive_value -> value_array_slice .)
    MINUS           reduce using rule 80 (primitive_value -> value_array_slice .)
    CONCAT          reduce using rule 80 (primitive_value -> value_array_slice .)
    AND             reduce using rule 80 (primitive_value -> value_array_slice .)
    OR              reduce using rule 80 (primitive_value -> value_array_slice .)
    EQUALS          reduce using rule 80 (primitive_value -> value_array_slice .)
    DIF             reduce using rule 80 (primitive_value -> value_array_slice .)
    GTR             reduce using rule 80 (primitive_value -> value_array_slice .)
    GEQ             reduce using rule 80 (primitive_value -> value_array_slice .)
    LSS             reduce using rule 80 (primitive_value -> value_array_slice .)
    LEQ             reduce using rule 80 (primitive_value -> value_array_slice .)
    IN              reduce using rule 80 (primitive_value -> value_array_slice .)
    SEMICOL         reduce using rule 80 (primitive_value -> value_array_slice .)
    COMMA           reduce using rule 80 (primitive_value -> value_array_slice .)
    LBRACK          reduce using rule 80 (primitive_value -> value_array_slice .)
    RPAREN          reduce using rule 80 (primitive_value -> value_array_slice .)
    RBRACK          reduce using rule 80 (primitive_value -> value_array_slice .)
    DOWN            reduce using rule 80 (primitive_value -> value_array_slice .)
    BY              reduce using rule 80 (primitive_value -> value_array_slice .)
    TO              reduce using rule 80 (primitive_value -> value_array_slice .)
    WHILE           reduce using rule 80 (primitive_value -> value_array_slice .)
    THEN            reduce using rule 80 (primitive_value -> value_array_slice .)
    COLON           reduce using rule 80 (primitive_value -> value_array_slice .)
    ELSE            reduce using rule 80 (primitive_value -> value_array_slice .)
    ELSIF           reduce using rule 80 (primitive_value -> value_array_slice .)
    FI              reduce using rule 80 (primitive_value -> value_array_slice .)


state 100

    (137) monadic_operator -> MINUS .

    ARROW           reduce using rule 137 (monadic_operator -> MINUS .)
    LPAREN          reduce using rule 137 (monadic_operator -> MINUS .)
    ID              reduce using rule 137 (monadic_operator -> MINUS .)
    ICONST          reduce using rule 137 (monadic_operator -> MINUS .)
    FALSE           reduce using rule 137 (monadic_operator -> MINUS .)
    TRUE            reduce using rule 137 (monadic_operator -> MINUS .)
    CCONST          reduce using rule 137 (monadic_operator -> MINUS .)
    NULL            reduce using rule 137 (monadic_operator -> MINUS .)
    SCONST          reduce using rule 137 (monadic_operator -> MINUS .)
    NUM             reduce using rule 137 (monadic_operator -> MINUS .)
    PRED            reduce using rule 137 (monadic_operator -> MINUS .)
    SUCC            reduce using rule 137 (monadic_operator -> MINUS .)
    UPPER           reduce using rule 137 (monadic_operator -> MINUS .)
    LOWER           reduce using rule 137 (monadic_operator -> MINUS .)
    LENGTH          reduce using rule 137 (monadic_operator -> MINUS .)
    READ            reduce using rule 137 (monadic_operator -> MINUS .)
    PRINT           reduce using rule 137 (monadic_operator -> MINUS .)


state 101

    (79) primitive_value -> value_array_element .

    TIMES           reduce using rule 79 (primitive_value -> value_array_element .)
    DIVIDE          reduce using rule 79 (primitive_value -> value_array_element .)
    PERC            reduce using rule 79 (primitive_value -> value_array_element .)
    PLUS            reduce using rule 79 (primitive_value -> value_array_element .)
    MINUS           reduce using rule 79 (primitive_value -> value_array_element .)
    CONCAT          reduce using rule 79 (primitive_value -> value_array_element .)
    AND             reduce using rule 79 (primitive_value -> value_array_element .)
    OR              reduce using rule 79 (primitive_value -> value_array_element .)
    EQUALS          reduce using rule 79 (primitive_value -> value_array_element .)
    DIF             reduce using rule 79 (primitive_value -> value_array_element .)
    GTR             reduce using rule 79 (primitive_value -> value_array_element .)
    GEQ             reduce using rule 79 (primitive_value -> value_array_element .)
    LSS             reduce using rule 79 (primitive_value -> value_array_element .)
    LEQ             reduce using rule 79 (primitive_value -> value_array_element .)
    IN              reduce using rule 79 (primitive_value -> value_array_element .)
    SEMICOL         reduce using rule 79 (primitive_value -> value_array_element .)
    COMMA           reduce using rule 79 (primitive_value -> value_array_element .)
    LBRACK          reduce using rule 79 (primitive_value -> value_array_element .)
    RPAREN          reduce using rule 79 (primitive_value -> value_array_element .)
    RBRACK          reduce using rule 79 (primitive_value -> value_array_element .)
    DOWN            reduce using rule 79 (primitive_value -> value_array_element .)
    BY              reduce using rule 79 (primitive_value -> value_array_element .)
    TO              reduce using rule 79 (primitive_value -> value_array_element .)
    WHILE           reduce using rule 79 (primitive_value -> value_array_element .)
    THEN            reduce using rule 79 (primitive_value -> value_array_element .)
    COLON           reduce using rule 79 (primitive_value -> value_array_element .)
    ELSE            reduce using rule 79 (primitive_value -> value_array_element .)
    ELSIF           reduce using rule 79 (primitive_value -> value_array_element .)
    FI              reduce using rule 79 (primitive_value -> value_array_element .)


state 102

    (201) return_action -> RETURN result .

    SEMICOL         reduce using rule 201 (return_action -> RETURN result .)


state 103

    (92) character_string_literal -> SCONST .

    TIMES           reduce using rule 92 (character_string_literal -> SCONST .)
    DIVIDE          reduce using rule 92 (character_string_literal -> SCONST .)
    PERC            reduce using rule 92 (character_string_literal -> SCONST .)
    PLUS            reduce using rule 92 (character_string_literal -> SCONST .)
    MINUS           reduce using rule 92 (character_string_literal -> SCONST .)
    CONCAT          reduce using rule 92 (character_string_literal -> SCONST .)
    AND             reduce using rule 92 (character_string_literal -> SCONST .)
    OR              reduce using rule 92 (character_string_literal -> SCONST .)
    EQUALS          reduce using rule 92 (character_string_literal -> SCONST .)
    DIF             reduce using rule 92 (character_string_literal -> SCONST .)
    GTR             reduce using rule 92 (character_string_literal -> SCONST .)
    GEQ             reduce using rule 92 (character_string_literal -> SCONST .)
    LSS             reduce using rule 92 (character_string_literal -> SCONST .)
    LEQ             reduce using rule 92 (character_string_literal -> SCONST .)
    IN              reduce using rule 92 (character_string_literal -> SCONST .)
    THEN            reduce using rule 92 (character_string_literal -> SCONST .)
    LBRACK          reduce using rule 92 (character_string_literal -> SCONST .)
    SEMICOL         reduce using rule 92 (character_string_literal -> SCONST .)
    RBRACK          reduce using rule 92 (character_string_literal -> SCONST .)
    COLON           reduce using rule 92 (character_string_literal -> SCONST .)
    RPAREN          reduce using rule 92 (character_string_literal -> SCONST .)
    COMMA           reduce using rule 92 (character_string_literal -> SCONST .)
    ELSE            reduce using rule 92 (character_string_literal -> SCONST .)
    ELSIF           reduce using rule 92 (character_string_literal -> SCONST .)
    DOWN            reduce using rule 92 (character_string_literal -> SCONST .)
    BY              reduce using rule 92 (character_string_literal -> SCONST .)
    TO              reduce using rule 92 (character_string_literal -> SCONST .)
    FI              reduce using rule 92 (character_string_literal -> SCONST .)
    WHILE           reduce using rule 92 (character_string_literal -> SCONST .)


state 104

    (88) boolean_literal -> FALSE .

    TIMES           reduce using rule 88 (boolean_literal -> FALSE .)
    DIVIDE          reduce using rule 88 (boolean_literal -> FALSE .)
    PERC            reduce using rule 88 (boolean_literal -> FALSE .)
    PLUS            reduce using rule 88 (boolean_literal -> FALSE .)
    MINUS           reduce using rule 88 (boolean_literal -> FALSE .)
    CONCAT          reduce using rule 88 (boolean_literal -> FALSE .)
    AND             reduce using rule 88 (boolean_literal -> FALSE .)
    OR              reduce using rule 88 (boolean_literal -> FALSE .)
    EQUALS          reduce using rule 88 (boolean_literal -> FALSE .)
    DIF             reduce using rule 88 (boolean_literal -> FALSE .)
    GTR             reduce using rule 88 (boolean_literal -> FALSE .)
    GEQ             reduce using rule 88 (boolean_literal -> FALSE .)
    LSS             reduce using rule 88 (boolean_literal -> FALSE .)
    LEQ             reduce using rule 88 (boolean_literal -> FALSE .)
    IN              reduce using rule 88 (boolean_literal -> FALSE .)
    RPAREN          reduce using rule 88 (boolean_literal -> FALSE .)
    RBRACK          reduce using rule 88 (boolean_literal -> FALSE .)
    COMMA           reduce using rule 88 (boolean_literal -> FALSE .)
    LBRACK          reduce using rule 88 (boolean_literal -> FALSE .)
    SEMICOL         reduce using rule 88 (boolean_literal -> FALSE .)
    THEN            reduce using rule 88 (boolean_literal -> FALSE .)
    COLON           reduce using rule 88 (boolean_literal -> FALSE .)
    ELSE            reduce using rule 88 (boolean_literal -> FALSE .)
    ELSIF           reduce using rule 88 (boolean_literal -> FALSE .)
    DOWN            reduce using rule 88 (boolean_literal -> FALSE .)
    BY              reduce using rule 88 (boolean_literal -> FALSE .)
    TO              reduce using rule 88 (boolean_literal -> FALSE .)
    FI              reduce using rule 88 (boolean_literal -> FALSE .)
    WHILE           reduce using rule 88 (boolean_literal -> FALSE .)


state 105

    (101) conditional_expression -> IF . boolean_expression then_expression else_expression FI
    (102) conditional_expression -> IF . boolean_expression then_expression elsif_expression else_expression FI
    (104) boolean_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_expression             shift and go to state 196
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 123
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 106

    (87) integer_literal -> ICONST .

    TIMES           reduce using rule 87 (integer_literal -> ICONST .)
    DIVIDE          reduce using rule 87 (integer_literal -> ICONST .)
    PERC            reduce using rule 87 (integer_literal -> ICONST .)
    PLUS            reduce using rule 87 (integer_literal -> ICONST .)
    MINUS           reduce using rule 87 (integer_literal -> ICONST .)
    CONCAT          reduce using rule 87 (integer_literal -> ICONST .)
    AND             reduce using rule 87 (integer_literal -> ICONST .)
    OR              reduce using rule 87 (integer_literal -> ICONST .)
    EQUALS          reduce using rule 87 (integer_literal -> ICONST .)
    DIF             reduce using rule 87 (integer_literal -> ICONST .)
    GTR             reduce using rule 87 (integer_literal -> ICONST .)
    GEQ             reduce using rule 87 (integer_literal -> ICONST .)
    LSS             reduce using rule 87 (integer_literal -> ICONST .)
    LEQ             reduce using rule 87 (integer_literal -> ICONST .)
    IN              reduce using rule 87 (integer_literal -> ICONST .)
    RBRACK          reduce using rule 87 (integer_literal -> ICONST .)
    LBRACK          reduce using rule 87 (integer_literal -> ICONST .)
    SEMICOL         reduce using rule 87 (integer_literal -> ICONST .)
    THEN            reduce using rule 87 (integer_literal -> ICONST .)
    DOWN            reduce using rule 87 (integer_literal -> ICONST .)
    BY              reduce using rule 87 (integer_literal -> ICONST .)
    TO              reduce using rule 87 (integer_literal -> ICONST .)
    RPAREN          reduce using rule 87 (integer_literal -> ICONST .)
    COMMA           reduce using rule 87 (integer_literal -> ICONST .)
    COLON           reduce using rule 87 (integer_literal -> ICONST .)
    ELSE            reduce using rule 87 (integer_literal -> ICONST .)
    ELSIF           reduce using rule 87 (integer_literal -> ICONST .)
    WHILE           reduce using rule 87 (integer_literal -> ICONST .)
    FI              reduce using rule 87 (integer_literal -> ICONST .)


state 107

    (100) expression -> conditional_expression .

    DOWN            reduce using rule 100 (expression -> conditional_expression .)
    BY              reduce using rule 100 (expression -> conditional_expression .)
    TO              reduce using rule 100 (expression -> conditional_expression .)
    RBRACK          reduce using rule 100 (expression -> conditional_expression .)
    COMMA           reduce using rule 100 (expression -> conditional_expression .)
    COLON           reduce using rule 100 (expression -> conditional_expression .)
    SEMICOL         reduce using rule 100 (expression -> conditional_expression .)
    THEN            reduce using rule 100 (expression -> conditional_expression .)
    RPAREN          reduce using rule 100 (expression -> conditional_expression .)
    ELSE            reduce using rule 100 (expression -> conditional_expression .)
    ELSIF           reduce using rule 100 (expression -> conditional_expression .)
    WHILE           reduce using rule 100 (expression -> conditional_expression .)
    FI              reduce using rule 100 (expression -> conditional_expression .)


state 108

    (129) operand2 -> operand3 .

    TIMES           reduce using rule 129 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 129 (operand2 -> operand3 .)
    PERC            reduce using rule 129 (operand2 -> operand3 .)
    PLUS            reduce using rule 129 (operand2 -> operand3 .)
    MINUS           reduce using rule 129 (operand2 -> operand3 .)
    CONCAT          reduce using rule 129 (operand2 -> operand3 .)
    AND             reduce using rule 129 (operand2 -> operand3 .)
    OR              reduce using rule 129 (operand2 -> operand3 .)
    EQUALS          reduce using rule 129 (operand2 -> operand3 .)
    DIF             reduce using rule 129 (operand2 -> operand3 .)
    GTR             reduce using rule 129 (operand2 -> operand3 .)
    GEQ             reduce using rule 129 (operand2 -> operand3 .)
    LSS             reduce using rule 129 (operand2 -> operand3 .)
    LEQ             reduce using rule 129 (operand2 -> operand3 .)
    IN              reduce using rule 129 (operand2 -> operand3 .)
    RBRACK          reduce using rule 129 (operand2 -> operand3 .)
    WHILE           reduce using rule 129 (operand2 -> operand3 .)
    SEMICOL         reduce using rule 129 (operand2 -> operand3 .)
    THEN            reduce using rule 129 (operand2 -> operand3 .)
    COMMA           reduce using rule 129 (operand2 -> operand3 .)
    COLON           reduce using rule 129 (operand2 -> operand3 .)
    RPAREN          reduce using rule 129 (operand2 -> operand3 .)
    ELSE            reduce using rule 129 (operand2 -> operand3 .)
    ELSIF           reduce using rule 129 (operand2 -> operand3 .)
    DOWN            reduce using rule 129 (operand2 -> operand3 .)
    BY              reduce using rule 129 (operand2 -> operand3 .)
    TO              reduce using rule 129 (operand2 -> operand3 .)
    FI              reduce using rule 129 (operand2 -> operand3 .)


state 109

    (134) operand3 -> monadic_operator . operand4
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (87) integer_literal -> . ICONST
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    ICONST          shift and go to state 106
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    character_literal              shift and go to state 96
    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    literal                        shift and go to state 98
    array_primitive_value          shift and go to state 82
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    procedure_name                 shift and go to state 6
    value_array_slice              shift and go to state 99
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    value_array_element            shift and go to state 101
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 197
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    operand4                       shift and go to state 198
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    array_element                  shift and go to state 49

state 110

    (14) action_statement -> action SEMICOL .

    ID              reduce using rule 14 (action_statement -> action SEMICOL .)
    EXIT            reduce using rule 14 (action_statement -> action SEMICOL .)
    RETURN          reduce using rule 14 (action_statement -> action SEMICOL .)
    RESULT          reduce using rule 14 (action_statement -> action SEMICOL .)
    IF              reduce using rule 14 (action_statement -> action SEMICOL .)
    DO              reduce using rule 14 (action_statement -> action SEMICOL .)
    NUM             reduce using rule 14 (action_statement -> action SEMICOL .)
    PRED            reduce using rule 14 (action_statement -> action SEMICOL .)
    SUCC            reduce using rule 14 (action_statement -> action SEMICOL .)
    UPPER           reduce using rule 14 (action_statement -> action SEMICOL .)
    LOWER           reduce using rule 14 (action_statement -> action SEMICOL .)
    LENGTH          reduce using rule 14 (action_statement -> action SEMICOL .)
    READ            reduce using rule 14 (action_statement -> action SEMICOL .)
    PRINT           reduce using rule 14 (action_statement -> action SEMICOL .)
    FI              reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSE            reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSIF           reduce using rule 14 (action_statement -> action SEMICOL .)
    END             reduce using rule 14 (action_statement -> action SEMICOL .)
    DCL             reduce using rule 14 (action_statement -> action SEMICOL .)
    SYN             reduce using rule 14 (action_statement -> action SEMICOL .)
    TYPE            reduce using rule 14 (action_statement -> action SEMICOL .)
    $end            reduce using rule 14 (action_statement -> action SEMICOL .)
    OD              reduce using rule 14 (action_statement -> action SEMICOL .)


state 111

    (203) result_action -> RESULT result .

    SEMICOL         reduce using rule 203 (result_action -> RESULT result .)


state 112

    (172) do_action -> DO action_statement_list . OD
    (143) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    OD              shift and go to state 199
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    exit_action                    shift and go to state 29
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 200
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 113

    (175) control_part -> while_control .

    SEMICOL         reduce using rule 175 (control_part -> while_control .)


state 114

    (174) control_part -> for_control . while_control
    (176) control_part -> for_control .
    (191) while_control -> . WHILE boolean_expression

    SEMICOL         reduce using rule 176 (control_part -> for_control .)
    WHILE           shift and go to state 117

    while_control                  shift and go to state 201

state 115

    (170) do_action -> DO control_part . SEMICOL action_statement_list OD
    (171) do_action -> DO control_part . SEMICOL OD

    SEMICOL         shift and go to state 202


state 116

    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 203


state 117

    (191) while_control -> WHILE . boolean_expression
    (104) boolean_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_expression             shift and go to state 204
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 123
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 118

    (173) do_action -> DO OD .

    SEMICOL         reduce using rule 173 (do_action -> DO OD .)


state 119

    (177) for_control -> FOR . iteration
    (178) iteration -> . range_enumeration
    (179) iteration -> . step_enumeration
    (189) range_enumeration -> . loop_counter DOWN IN discrete_mode_name
    (190) range_enumeration -> . loop_counter IN discrete_mode_name
    (180) step_enumeration -> . loop_counter ASSIGN start_value step_value DOWN end_value
    (181) step_enumeration -> . loop_counter ASSIGN start_value step_value end_value
    (182) step_enumeration -> . loop_counter ASSIGN start_value DOWN end_value
    (183) step_enumeration -> . loop_counter ASSIGN start_value end_value
    (184) loop_counter -> . identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    iteration                      shift and go to state 205
    step_enumeration               shift and go to state 208
    identifier                     shift and go to state 206
    range_enumeration              shift and go to state 207
    loop_counter                   shift and go to state 209

state 120

    (144) action_statement_list -> action_statement .

    ID              reduce using rule 144 (action_statement_list -> action_statement .)
    EXIT            reduce using rule 144 (action_statement_list -> action_statement .)
    RETURN          reduce using rule 144 (action_statement_list -> action_statement .)
    RESULT          reduce using rule 144 (action_statement_list -> action_statement .)
    IF              reduce using rule 144 (action_statement_list -> action_statement .)
    DO              reduce using rule 144 (action_statement_list -> action_statement .)
    NUM             reduce using rule 144 (action_statement_list -> action_statement .)
    PRED            reduce using rule 144 (action_statement_list -> action_statement .)
    SUCC            reduce using rule 144 (action_statement_list -> action_statement .)
    UPPER           reduce using rule 144 (action_statement_list -> action_statement .)
    LOWER           reduce using rule 144 (action_statement_list -> action_statement .)
    LENGTH          reduce using rule 144 (action_statement_list -> action_statement .)
    READ            reduce using rule 144 (action_statement_list -> action_statement .)
    PRINT           reduce using rule 144 (action_statement_list -> action_statement .)
    FI              reduce using rule 144 (action_statement_list -> action_statement .)
    ELSE            reduce using rule 144 (action_statement_list -> action_statement .)
    ELSIF           reduce using rule 144 (action_statement_list -> action_statement .)
    OD              reduce using rule 144 (action_statement_list -> action_statement .)


state 121

    (145) label_id -> identifier .

    SEMICOL         reduce using rule 145 (label_id -> identifier .)


state 122

    (200) exit_action -> EXIT label_id .

    SEMICOL         reduce using rule 200 (exit_action -> EXIT label_id .)


state 123

    (104) boolean_expression -> expression .

    THEN            reduce using rule 104 (boolean_expression -> expression .)
    SEMICOL         reduce using rule 104 (boolean_expression -> expression .)


state 124

    (162) if_action -> IF boolean_expression . then_clause else_clause FI
    (163) if_action -> IF boolean_expression . then_clause FI
    (164) then_clause -> . THEN action_statement_list
    (165) then_clause -> . THEN empty

    THEN            shift and go to state 210

    then_clause                    shift and go to state 211

state 125

    (69) string_element -> string_location LBRACK start_element . RBRACK

    RBRACK          shift and go to state 212


state 126

    (70) start_element -> integer_expression .
    (73) left_element -> integer_expression .

    RBRACK          reduce using rule 70 (start_element -> integer_expression .)
    COLON           reduce using rule 73 (left_element -> integer_expression .)


state 127

    (103) integer_expression -> expression .

    DOWN            reduce using rule 103 (integer_expression -> expression .)
    TO              reduce using rule 103 (integer_expression -> expression .)
    RBRACK          reduce using rule 103 (integer_expression -> expression .)
    COLON           reduce using rule 103 (integer_expression -> expression .)


state 128

    (71) string_slice -> string_location LBRACK left_element . COLON right_element RBRACK

    COLON           shift and go to state 213


state 129

    (154) assignment_action -> location assigning_operator expression .

    SEMICOL         reduce using rule 154 (assignment_action -> location assigning_operator expression .)


state 130

    (197) parameter_list -> parameter .

    RPAREN          reduce using rule 197 (parameter_list -> parameter .)
    COMMA           reduce using rule 197 (parameter_list -> parameter .)


state 131

    (198) parameter -> expression .

    RPAREN          reduce using rule 198 (parameter -> expression .)
    COMMA           reduce using rule 198 (parameter -> expression .)


state 132

    (195) procedure_call -> procedure_name LPAREN RPAREN .

    ARROW           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    TIMES           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    DIVIDE          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    PERC            reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    PLUS            reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    MINUS           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    CONCAT          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    AND             reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    OR              reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    EQUALS          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    DIF             reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    GTR             reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    GEQ             reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    LSS             reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    LEQ             reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    IN              reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    THEN            reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    LBRACK          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    DOWN            reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    TO              reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    RBRACK          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    COMMA           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    COLON           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    FI              reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    SEMICOL         reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    RPAREN          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    ELSE            reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    ELSIF           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    BY              reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    WHILE           reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    ASSIGN          reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    PLUSASSIGN      reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    MINUSASSIGN     reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    TIMESASSIGN     reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    DIVIDEASSIGN    reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    PERCASSIGN      reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)
    CONCATASSIGN    reduce using rule 195 (procedure_call -> procedure_name LPAREN RPAREN .)


state 133

    (194) procedure_call -> procedure_name LPAREN parameter_list . RPAREN
    (196) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 214
    COMMA           shift and go to state 215


state 134

    (36) integer_mode -> INT .

    LPAREN          reduce using rule 36 (integer_mode -> INT .)
    RPAREN          reduce using rule 36 (integer_mode -> INT .)
    LOC             reduce using rule 36 (integer_mode -> INT .)
    RBRACK          reduce using rule 36 (integer_mode -> INT .)
    COMMA           reduce using rule 36 (integer_mode -> INT .)
    SEMICOL         reduce using rule 36 (integer_mode -> INT .)
    ASSIGN          reduce using rule 36 (integer_mode -> INT .)


state 135

    (37) boolean_mode -> BOOL .

    LPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 37 (boolean_mode -> BOOL .)
    SEMICOL         reduce using rule 37 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 37 (boolean_mode -> BOOL .)
    LOC             reduce using rule 37 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    RBRACK          reduce using rule 37 (boolean_mode -> BOOL .)


state 136

    (38) character_mode -> CHAR .

    LPAREN          reduce using rule 38 (character_mode -> CHAR .)
    RBRACK          reduce using rule 38 (character_mode -> CHAR .)
    COMMA           reduce using rule 38 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 38 (character_mode -> CHAR .)
    SEMICOL         reduce using rule 38 (character_mode -> CHAR .)
    LOC             reduce using rule 38 (character_mode -> CHAR .)
    RPAREN          reduce using rule 38 (character_mode -> CHAR .)


state 137

    (28) mode -> mode_name .

    ASSIGN          reduce using rule 28 (mode -> mode_name .)
    SEMICOL         reduce using rule 28 (mode -> mode_name .)
    COMMA           reduce using rule 28 (mode -> mode_name .)
    LOC             reduce using rule 28 (mode -> mode_name .)
    RPAREN          reduce using rule 28 (mode -> mode_name .)


state 138

    (29) mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 29 (mode -> discrete_mode .)
    SEMICOL         reduce using rule 29 (mode -> discrete_mode .)
    COMMA           reduce using rule 29 (mode -> discrete_mode .)
    LOC             reduce using rule 29 (mode -> discrete_mode .)
    RPAREN          reduce using rule 29 (mode -> discrete_mode .)
    LPAREN          shift and go to state 216


state 139

    (48) composite_mode -> array_mode .

    LOC             reduce using rule 48 (composite_mode -> array_mode .)
    RPAREN          reduce using rule 48 (composite_mode -> array_mode .)
    COMMA           reduce using rule 48 (composite_mode -> array_mode .)
    ASSIGN          reduce using rule 48 (composite_mode -> array_mode .)
    SEMICOL         reduce using rule 48 (composite_mode -> array_mode .)


state 140

    (35) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    SEMICOL         reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RBRACK          reduce using rule 35 (discrete_mode -> discrete_range_mode .)


state 141

    (47) composite_mode -> string_mode .

    LOC             reduce using rule 47 (composite_mode -> string_mode .)
    RPAREN          reduce using rule 47 (composite_mode -> string_mode .)
    COMMA           reduce using rule 47 (composite_mode -> string_mode .)
    ASSIGN          reduce using rule 47 (composite_mode -> string_mode .)
    SEMICOL         reduce using rule 47 (composite_mode -> string_mode .)


state 142

    (58) identifier_list -> identifier_list COMMA . identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 217

state 143

    (33) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    SEMICOL         reduce using rule 33 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 33 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 33 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    RBRACK          reduce using rule 33 (discrete_mode -> boolean_mode .)


state 144

    (41) mode_name -> identifier .
    (42) discrete_mode_name -> identifier .

    ASSIGN          reduce using rule 41 (mode_name -> identifier .)
    SEMICOL         reduce using rule 41 (mode_name -> identifier .)
    COMMA           reduce using rule 41 (mode_name -> identifier .)
    LOC             reduce using rule 41 (mode_name -> identifier .)
    RPAREN          reduce using rule 41 (mode_name -> identifier .)
    LPAREN          reduce using rule 42 (discrete_mode_name -> identifier .)


state 145

    (46) reference_mode -> REF . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    boolean_mode                   shift and go to state 143
    identifier                     shift and go to state 144
    discrete_mode_name             shift and go to state 151
    array_mode                     shift and go to state 139
    mode                           shift and go to state 218
    mode_name                      shift and go to state 137
    discrete_mode                  shift and go to state 138
    reference_mode                 shift and go to state 149
    composite_mode                 shift and go to state 150
    discrete_range_mode            shift and go to state 140
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    string_mode                    shift and go to state 141

state 146

    (51) array_mode -> ARRAY . LBRACK index_mode_list RBRACK element_mode

    LBRACK          shift and go to state 219


state 147

    (49) string_mode -> CHARS . LBRACK string_length RBRACK

    LBRACK          shift and go to state 220


state 148

    (17) declaration -> identifier_list mode . initialization
    (18) declaration -> identifier_list mode .
    (19) initialization -> . ASSIGN expression

    SEMICOL         reduce using rule 18 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 18 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 221

    initialization                 shift and go to state 222

state 149

    (30) mode -> reference_mode .

    ASSIGN          reduce using rule 30 (mode -> reference_mode .)
    SEMICOL         reduce using rule 30 (mode -> reference_mode .)
    COMMA           reduce using rule 30 (mode -> reference_mode .)
    LOC             reduce using rule 30 (mode -> reference_mode .)
    RPAREN          reduce using rule 30 (mode -> reference_mode .)


state 150

    (31) mode -> composite_mode .

    ASSIGN          reduce using rule 31 (mode -> composite_mode .)
    SEMICOL         reduce using rule 31 (mode -> composite_mode .)
    COMMA           reduce using rule 31 (mode -> composite_mode .)
    LOC             reduce using rule 31 (mode -> composite_mode .)
    RPAREN          reduce using rule 31 (mode -> composite_mode .)


state 151

    (39) discrete_range_mode -> discrete_mode_name . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 223


state 152

    (32) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> integer_mode .)
    SEMICOL         reduce using rule 32 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 32 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    RBRACK          reduce using rule 32 (discrete_mode -> integer_mode .)


state 153

    (34) discrete_mode -> character_mode .

    LPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 34 (discrete_mode -> character_mode .)
    SEMICOL         reduce using rule 34 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 34 (discrete_mode -> character_mode .)
    LOC             reduce using rule 34 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    RBRACK          reduce using rule 34 (discrete_mode -> character_mode .)


state 154

    (9) declaration_statement -> DCL declaration_list SEMICOL .

    DCL             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    SYN             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    TYPE            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    ID              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    EXIT            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    RETURN          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    RESULT          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    IF              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    DO              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    NUM             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    PRED            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    SUCC            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    UPPER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    LOWER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    LENGTH          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    READ            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    PRINT           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    $end            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    END             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)


state 155

    (15) declaration_list -> declaration_list COMMA . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 61
    identifier_list                shift and go to state 62
    declaration                    shift and go to state 224

state 156

    (206) builtin_call -> builtin_name LPAREN RPAREN .

    ARROW           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    TIMES           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVIDE          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    PERC            reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    PLUS            reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    MINUS           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    CONCAT          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    AND             reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    OR              reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    EQUALS          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIF             reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    GTR             reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    GEQ             reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    LSS             reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    LEQ             reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    IN              reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    SEMICOL         reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    LBRACK          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    COMMA           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    COLON           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    THEN            reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    RBRACK          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    RPAREN          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSE            reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSIF           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    DOWN            reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    BY              reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    TO              reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    FI              reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    WHILE           reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    ASSIGN          reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    PLUSASSIGN      reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    MINUSASSIGN     reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    TIMESASSIGN     reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVIDEASSIGN    reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    PERCASSIGN      reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)
    CONCATASSIGN    reduce using rule 206 (builtin_call -> builtin_name LPAREN RPAREN .)


state 157

    (205) builtin_call -> builtin_name LPAREN parameter_list . RPAREN
    (196) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 225
    COMMA           shift and go to state 215


state 158

    (12) procedure_statement -> label_id COLON procedure_definition . SEMICOL

    SEMICOL         shift and go to state 226


state 159

    (13) action_statement -> label_id COLON action . SEMICOL

    SEMICOL         shift and go to state 227


state 160

    (215) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (216) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (217) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (218) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL statement_list END
    (219) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL END
    (220) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL END
    (221) procedure_definition -> PROC . LPAREN RPAREN SEMICOL statement_list END
    (222) procedure_definition -> PROC . LPAREN RPAREN SEMICOL END

    LPAREN          shift and go to state 228


state 161

    (98) expression_list -> expression .
    (44) lower_bound -> expression .

    RBRACK          reduce using rule 98 (expression_list -> expression .)
    COMMA           reduce using rule 98 (expression_list -> expression .)
    COLON           reduce using rule 44 (lower_bound -> expression .)


state 162

    (75) array_element -> array_location LBRACK expression_list . RBRACK
    (97) expression_list -> expression_list . COMMA expression

    RBRACK          shift and go to state 229
    COMMA           shift and go to state 230


state 163

    (76) array_slice -> array_location LBRACK lower_bound . COLON upper_bound RBRACK

    COLON           shift and go to state 231


state 164

    (23) synonym_definition -> identifier_list ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 232
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    constant_expression            shift and go to state 233
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 165

    (22) synonym_definition -> identifier_list mode . ASSIGN constant_expression

    ASSIGN          shift and go to state 234


state 166

    (20) synonym_list -> synonym_list COMMA . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    synonym_definition             shift and go to state 235
    identifier                     shift and go to state 61
    identifier_list                shift and go to state 70

state 167

    (10) synonym_statement -> SYN synonym_list SEMICOL .

    END             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    DCL             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    SYN             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    TYPE            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    ID              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    EXIT            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    RETURN          reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    RESULT          reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    IF              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    DO              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    NUM             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    PRED            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    SUCC            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    UPPER           reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    LOWER           reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    LENGTH          reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    READ            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    PRINT           reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    $end            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)


state 168

    (25) newmode_list -> newmode_list COMMA . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 61
    mode_definition                shift and go to state 236
    identifier_list                shift and go to state 73

state 169

    (11) newmode_statement -> TYPE newmode_list SEMICOL .

    END             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    DCL             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SYN             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    TYPE            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    ID              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    EXIT            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    RETURN          reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    RESULT          reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    IF              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    DO              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    NUM             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    PRED            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SUCC            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    UPPER           reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    LOWER           reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    LENGTH          reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    READ            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    PRINT           reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    $end            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)


state 170

    (27) mode_definition -> identifier_list ASSIGN . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    boolean_mode                   shift and go to state 143
    identifier                     shift and go to state 144
    array_mode                     shift and go to state 139
    discrete_mode_name             shift and go to state 151
    mode                           shift and go to state 237
    mode_name                      shift and go to state 137
    discrete_mode                  shift and go to state 138
    reference_mode                 shift and go to state 149
    composite_mode                 shift and go to state 150
    discrete_range_mode            shift and go to state 140
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    string_mode                    shift and go to state 141

state 171

    (121) membership_operator -> IN .

    MINUS           reduce using rule 121 (membership_operator -> IN .)
    NOT             reduce using rule 121 (membership_operator -> IN .)
    ICONST          reduce using rule 121 (membership_operator -> IN .)
    ARROW           reduce using rule 121 (membership_operator -> IN .)
    LPAREN          reduce using rule 121 (membership_operator -> IN .)
    ID              reduce using rule 121 (membership_operator -> IN .)
    FALSE           reduce using rule 121 (membership_operator -> IN .)
    TRUE            reduce using rule 121 (membership_operator -> IN .)
    CCONST          reduce using rule 121 (membership_operator -> IN .)
    NULL            reduce using rule 121 (membership_operator -> IN .)
    SCONST          reduce using rule 121 (membership_operator -> IN .)
    NUM             reduce using rule 121 (membership_operator -> IN .)
    PRED            reduce using rule 121 (membership_operator -> IN .)
    SUCC            reduce using rule 121 (membership_operator -> IN .)
    UPPER           reduce using rule 121 (membership_operator -> IN .)
    LOWER           reduce using rule 121 (membership_operator -> IN .)
    LENGTH          reduce using rule 121 (membership_operator -> IN .)
    READ            reduce using rule 121 (membership_operator -> IN .)
    PRINT           reduce using rule 121 (membership_operator -> IN .)


state 172

    (116) relational_operator -> DIF .

    MINUS           reduce using rule 116 (relational_operator -> DIF .)
    NOT             reduce using rule 116 (relational_operator -> DIF .)
    ICONST          reduce using rule 116 (relational_operator -> DIF .)
    ARROW           reduce using rule 116 (relational_operator -> DIF .)
    LPAREN          reduce using rule 116 (relational_operator -> DIF .)
    ID              reduce using rule 116 (relational_operator -> DIF .)
    FALSE           reduce using rule 116 (relational_operator -> DIF .)
    TRUE            reduce using rule 116 (relational_operator -> DIF .)
    CCONST          reduce using rule 116 (relational_operator -> DIF .)
    NULL            reduce using rule 116 (relational_operator -> DIF .)
    SCONST          reduce using rule 116 (relational_operator -> DIF .)
    NUM             reduce using rule 116 (relational_operator -> DIF .)
    PRED            reduce using rule 116 (relational_operator -> DIF .)
    SUCC            reduce using rule 116 (relational_operator -> DIF .)
    UPPER           reduce using rule 116 (relational_operator -> DIF .)
    LOWER           reduce using rule 116 (relational_operator -> DIF .)
    LENGTH          reduce using rule 116 (relational_operator -> DIF .)
    READ            reduce using rule 116 (relational_operator -> DIF .)
    PRINT           reduce using rule 116 (relational_operator -> DIF .)


state 173

    (118) relational_operator -> GEQ .

    MINUS           reduce using rule 118 (relational_operator -> GEQ .)
    NOT             reduce using rule 118 (relational_operator -> GEQ .)
    ICONST          reduce using rule 118 (relational_operator -> GEQ .)
    ARROW           reduce using rule 118 (relational_operator -> GEQ .)
    LPAREN          reduce using rule 118 (relational_operator -> GEQ .)
    ID              reduce using rule 118 (relational_operator -> GEQ .)
    FALSE           reduce using rule 118 (relational_operator -> GEQ .)
    TRUE            reduce using rule 118 (relational_operator -> GEQ .)
    CCONST          reduce using rule 118 (relational_operator -> GEQ .)
    NULL            reduce using rule 118 (relational_operator -> GEQ .)
    SCONST          reduce using rule 118 (relational_operator -> GEQ .)
    NUM             reduce using rule 118 (relational_operator -> GEQ .)
    PRED            reduce using rule 118 (relational_operator -> GEQ .)
    SUCC            reduce using rule 118 (relational_operator -> GEQ .)
    UPPER           reduce using rule 118 (relational_operator -> GEQ .)
    LOWER           reduce using rule 118 (relational_operator -> GEQ .)
    LENGTH          reduce using rule 118 (relational_operator -> GEQ .)
    READ            reduce using rule 118 (relational_operator -> GEQ .)
    PRINT           reduce using rule 118 (relational_operator -> GEQ .)


state 174

    (120) relational_operator -> LEQ .

    MINUS           reduce using rule 120 (relational_operator -> LEQ .)
    NOT             reduce using rule 120 (relational_operator -> LEQ .)
    ICONST          reduce using rule 120 (relational_operator -> LEQ .)
    ARROW           reduce using rule 120 (relational_operator -> LEQ .)
    LPAREN          reduce using rule 120 (relational_operator -> LEQ .)
    ID              reduce using rule 120 (relational_operator -> LEQ .)
    FALSE           reduce using rule 120 (relational_operator -> LEQ .)
    TRUE            reduce using rule 120 (relational_operator -> LEQ .)
    CCONST          reduce using rule 120 (relational_operator -> LEQ .)
    NULL            reduce using rule 120 (relational_operator -> LEQ .)
    SCONST          reduce using rule 120 (relational_operator -> LEQ .)
    NUM             reduce using rule 120 (relational_operator -> LEQ .)
    PRED            reduce using rule 120 (relational_operator -> LEQ .)
    SUCC            reduce using rule 120 (relational_operator -> LEQ .)
    UPPER           reduce using rule 120 (relational_operator -> LEQ .)
    LOWER           reduce using rule 120 (relational_operator -> LEQ .)
    LENGTH          reduce using rule 120 (relational_operator -> LEQ .)
    READ            reduce using rule 120 (relational_operator -> LEQ .)
    PRINT           reduce using rule 120 (relational_operator -> LEQ .)


state 175

    (119) relational_operator -> LSS .

    MINUS           reduce using rule 119 (relational_operator -> LSS .)
    NOT             reduce using rule 119 (relational_operator -> LSS .)
    ICONST          reduce using rule 119 (relational_operator -> LSS .)
    ARROW           reduce using rule 119 (relational_operator -> LSS .)
    LPAREN          reduce using rule 119 (relational_operator -> LSS .)
    ID              reduce using rule 119 (relational_operator -> LSS .)
    FALSE           reduce using rule 119 (relational_operator -> LSS .)
    TRUE            reduce using rule 119 (relational_operator -> LSS .)
    CCONST          reduce using rule 119 (relational_operator -> LSS .)
    NULL            reduce using rule 119 (relational_operator -> LSS .)
    SCONST          reduce using rule 119 (relational_operator -> LSS .)
    NUM             reduce using rule 119 (relational_operator -> LSS .)
    PRED            reduce using rule 119 (relational_operator -> LSS .)
    SUCC            reduce using rule 119 (relational_operator -> LSS .)
    UPPER           reduce using rule 119 (relational_operator -> LSS .)
    LOWER           reduce using rule 119 (relational_operator -> LSS .)
    LENGTH          reduce using rule 119 (relational_operator -> LSS .)
    READ            reduce using rule 119 (relational_operator -> LSS .)
    PRINT           reduce using rule 119 (relational_operator -> LSS .)


state 176

    (112) operator1 -> membership_operator .

    MINUS           reduce using rule 112 (operator1 -> membership_operator .)
    NOT             reduce using rule 112 (operator1 -> membership_operator .)
    ICONST          reduce using rule 112 (operator1 -> membership_operator .)
    ARROW           reduce using rule 112 (operator1 -> membership_operator .)
    LPAREN          reduce using rule 112 (operator1 -> membership_operator .)
    ID              reduce using rule 112 (operator1 -> membership_operator .)
    FALSE           reduce using rule 112 (operator1 -> membership_operator .)
    TRUE            reduce using rule 112 (operator1 -> membership_operator .)
    CCONST          reduce using rule 112 (operator1 -> membership_operator .)
    NULL            reduce using rule 112 (operator1 -> membership_operator .)
    SCONST          reduce using rule 112 (operator1 -> membership_operator .)
    NUM             reduce using rule 112 (operator1 -> membership_operator .)
    PRED            reduce using rule 112 (operator1 -> membership_operator .)
    SUCC            reduce using rule 112 (operator1 -> membership_operator .)
    UPPER           reduce using rule 112 (operator1 -> membership_operator .)
    LOWER           reduce using rule 112 (operator1 -> membership_operator .)
    LENGTH          reduce using rule 112 (operator1 -> membership_operator .)
    READ            reduce using rule 112 (operator1 -> membership_operator .)
    PRINT           reduce using rule 112 (operator1 -> membership_operator .)


state 177

    (114) relational_operator -> OR .

    MINUS           reduce using rule 114 (relational_operator -> OR .)
    NOT             reduce using rule 114 (relational_operator -> OR .)
    ICONST          reduce using rule 114 (relational_operator -> OR .)
    ARROW           reduce using rule 114 (relational_operator -> OR .)
    LPAREN          reduce using rule 114 (relational_operator -> OR .)
    ID              reduce using rule 114 (relational_operator -> OR .)
    FALSE           reduce using rule 114 (relational_operator -> OR .)
    TRUE            reduce using rule 114 (relational_operator -> OR .)
    CCONST          reduce using rule 114 (relational_operator -> OR .)
    NULL            reduce using rule 114 (relational_operator -> OR .)
    SCONST          reduce using rule 114 (relational_operator -> OR .)
    NUM             reduce using rule 114 (relational_operator -> OR .)
    PRED            reduce using rule 114 (relational_operator -> OR .)
    SUCC            reduce using rule 114 (relational_operator -> OR .)
    UPPER           reduce using rule 114 (relational_operator -> OR .)
    LOWER           reduce using rule 114 (relational_operator -> OR .)
    LENGTH          reduce using rule 114 (relational_operator -> OR .)
    READ            reduce using rule 114 (relational_operator -> OR .)
    PRINT           reduce using rule 114 (relational_operator -> OR .)


state 178

    (115) relational_operator -> EQUALS .

    MINUS           reduce using rule 115 (relational_operator -> EQUALS .)
    NOT             reduce using rule 115 (relational_operator -> EQUALS .)
    ICONST          reduce using rule 115 (relational_operator -> EQUALS .)
    ARROW           reduce using rule 115 (relational_operator -> EQUALS .)
    LPAREN          reduce using rule 115 (relational_operator -> EQUALS .)
    ID              reduce using rule 115 (relational_operator -> EQUALS .)
    FALSE           reduce using rule 115 (relational_operator -> EQUALS .)
    TRUE            reduce using rule 115 (relational_operator -> EQUALS .)
    CCONST          reduce using rule 115 (relational_operator -> EQUALS .)
    NULL            reduce using rule 115 (relational_operator -> EQUALS .)
    SCONST          reduce using rule 115 (relational_operator -> EQUALS .)
    NUM             reduce using rule 115 (relational_operator -> EQUALS .)
    PRED            reduce using rule 115 (relational_operator -> EQUALS .)
    SUCC            reduce using rule 115 (relational_operator -> EQUALS .)
    UPPER           reduce using rule 115 (relational_operator -> EQUALS .)
    LOWER           reduce using rule 115 (relational_operator -> EQUALS .)
    LENGTH          reduce using rule 115 (relational_operator -> EQUALS .)
    READ            reduce using rule 115 (relational_operator -> EQUALS .)
    PRINT           reduce using rule 115 (relational_operator -> EQUALS .)


state 179

    (111) operator1 -> relational_operator .

    MINUS           reduce using rule 111 (operator1 -> relational_operator .)
    NOT             reduce using rule 111 (operator1 -> relational_operator .)
    ICONST          reduce using rule 111 (operator1 -> relational_operator .)
    ARROW           reduce using rule 111 (operator1 -> relational_operator .)
    LPAREN          reduce using rule 111 (operator1 -> relational_operator .)
    ID              reduce using rule 111 (operator1 -> relational_operator .)
    FALSE           reduce using rule 111 (operator1 -> relational_operator .)
    TRUE            reduce using rule 111 (operator1 -> relational_operator .)
    CCONST          reduce using rule 111 (operator1 -> relational_operator .)
    NULL            reduce using rule 111 (operator1 -> relational_operator .)
    SCONST          reduce using rule 111 (operator1 -> relational_operator .)
    NUM             reduce using rule 111 (operator1 -> relational_operator .)
    PRED            reduce using rule 111 (operator1 -> relational_operator .)
    SUCC            reduce using rule 111 (operator1 -> relational_operator .)
    UPPER           reduce using rule 111 (operator1 -> relational_operator .)
    LOWER           reduce using rule 111 (operator1 -> relational_operator .)
    LENGTH          reduce using rule 111 (operator1 -> relational_operator .)
    READ            reduce using rule 111 (operator1 -> relational_operator .)
    PRINT           reduce using rule 111 (operator1 -> relational_operator .)


state 180

    (110) operand0 -> operand0 operator1 . operand1
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    string_location                shift and go to state 4
    location                       shift and go to state 80
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 238
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    character_string_literal       shift and go to state 78
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    primitive_value                shift and go to state 90
    operand2                       shift and go to state 81
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 181

    (113) relational_operator -> AND .

    MINUS           reduce using rule 113 (relational_operator -> AND .)
    NOT             reduce using rule 113 (relational_operator -> AND .)
    ICONST          reduce using rule 113 (relational_operator -> AND .)
    ARROW           reduce using rule 113 (relational_operator -> AND .)
    LPAREN          reduce using rule 113 (relational_operator -> AND .)
    ID              reduce using rule 113 (relational_operator -> AND .)
    FALSE           reduce using rule 113 (relational_operator -> AND .)
    TRUE            reduce using rule 113 (relational_operator -> AND .)
    CCONST          reduce using rule 113 (relational_operator -> AND .)
    NULL            reduce using rule 113 (relational_operator -> AND .)
    SCONST          reduce using rule 113 (relational_operator -> AND .)
    NUM             reduce using rule 113 (relational_operator -> AND .)
    PRED            reduce using rule 113 (relational_operator -> AND .)
    SUCC            reduce using rule 113 (relational_operator -> AND .)
    UPPER           reduce using rule 113 (relational_operator -> AND .)
    LOWER           reduce using rule 113 (relational_operator -> AND .)
    LENGTH          reduce using rule 113 (relational_operator -> AND .)
    READ            reduce using rule 113 (relational_operator -> AND .)
    PRINT           reduce using rule 113 (relational_operator -> AND .)


state 182

    (117) relational_operator -> GTR .

    MINUS           reduce using rule 117 (relational_operator -> GTR .)
    NOT             reduce using rule 117 (relational_operator -> GTR .)
    ICONST          reduce using rule 117 (relational_operator -> GTR .)
    ARROW           reduce using rule 117 (relational_operator -> GTR .)
    LPAREN          reduce using rule 117 (relational_operator -> GTR .)
    ID              reduce using rule 117 (relational_operator -> GTR .)
    FALSE           reduce using rule 117 (relational_operator -> GTR .)
    TRUE            reduce using rule 117 (relational_operator -> GTR .)
    CCONST          reduce using rule 117 (relational_operator -> GTR .)
    NULL            reduce using rule 117 (relational_operator -> GTR .)
    SCONST          reduce using rule 117 (relational_operator -> GTR .)
    NUM             reduce using rule 117 (relational_operator -> GTR .)
    PRED            reduce using rule 117 (relational_operator -> GTR .)
    SUCC            reduce using rule 117 (relational_operator -> GTR .)
    UPPER           reduce using rule 117 (relational_operator -> GTR .)
    LOWER           reduce using rule 117 (relational_operator -> GTR .)
    LENGTH          reduce using rule 117 (relational_operator -> GTR .)
    READ            reduce using rule 117 (relational_operator -> GTR .)
    PRINT           reduce using rule 117 (relational_operator -> GTR .)


state 183

    (131) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    ARROW           reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    LPAREN          reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    ID              reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    FALSE           reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    TRUE            reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    CCONST          reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    NULL            reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    SCONST          reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    NUM             reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    PRED            reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    SUCC            reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    UPPER           reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    LOWER           reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    LENGTH          reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    READ            reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)
    PRINT           reduce using rule 131 (arithmetic_multiplicative_operator -> TIMES .)


state 184

    (133) arithmetic_multiplicative_operator -> PERC .

    MINUS           reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    NOT             reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    ICONST          reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    ARROW           reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    LPAREN          reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    ID              reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    FALSE           reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    TRUE            reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    CCONST          reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    NULL            reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    SCONST          reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    NUM             reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    PRED            reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    SUCC            reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    UPPER           reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    LOWER           reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    LENGTH          reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    READ            reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)
    PRINT           reduce using rule 133 (arithmetic_multiplicative_operator -> PERC .)


state 185

    (130) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    character_literal              shift and go to state 96
    string_location                shift and go to state 4
    boolean_literal                shift and go to state 76
    literal                        shift and go to state 98
    array_primitive_value          shift and go to state 82
    location                       shift and go to state 80
    operand3                       shift and go to state 239
    procedure_name                 shift and go to state 6
    value_array_slice              shift and go to state 99
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    character_string_literal       shift and go to state 78
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    value_array_element            shift and go to state 101
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    empty_literal                  shift and go to state 75
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 186

    (132) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    ARROW           reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    LPAREN          reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    ID              reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    FALSE           reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    TRUE            reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    CCONST          reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    NULL            reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    SCONST          reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    NUM             reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    PRED            reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    SUCC            reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    UPPER           reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    LOWER           reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    LENGTH          reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    READ            reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)
    PRINT           reduce using rule 132 (arithmetic_multiplicative_operator -> DIVIDE .)


state 187

    (93) value_array_element -> array_primitive_value LBRACK . expression_list RBRACK
    (94) value_array_slice -> array_primitive_value LBRACK . lower_bound COLON upper_bound RBRACK
    (97) expression_list -> . expression_list COMMA expression
    (98) expression_list -> . expression
    (44) lower_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    array_slice                    shift and go to state 33
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 161
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    expression_list                shift and go to state 240
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    lower_bound                    shift and go to state 241
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 188

    (123) operand1 -> operand1 operator2 . operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    character_literal              shift and go to state 96
    string_location                shift and go to state 4
    boolean_literal                shift and go to state 76
    literal                        shift and go to state 98
    string_element                 shift and go to state 8
    array_primitive_value          shift and go to state 82
    location                       shift and go to state 80
    operand3                       shift and go to state 108
    procedure_name                 shift and go to state 6
    value_array_slice              shift and go to state 99
    operand2                       shift and go to state 242
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    character_string_literal       shift and go to state 78
    call_action                    shift and go to state 83
    dereferenced_reference         shift and go to state 27
    builtin_name                   shift and go to state 14
    value_array_element            shift and go to state 101
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    empty_literal                  shift and go to state 75
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 189

    (125) operator2 -> string_concatenation_operator .

    MINUS           reduce using rule 125 (operator2 -> string_concatenation_operator .)
    NOT             reduce using rule 125 (operator2 -> string_concatenation_operator .)
    ICONST          reduce using rule 125 (operator2 -> string_concatenation_operator .)
    ARROW           reduce using rule 125 (operator2 -> string_concatenation_operator .)
    LPAREN          reduce using rule 125 (operator2 -> string_concatenation_operator .)
    ID              reduce using rule 125 (operator2 -> string_concatenation_operator .)
    FALSE           reduce using rule 125 (operator2 -> string_concatenation_operator .)
    TRUE            reduce using rule 125 (operator2 -> string_concatenation_operator .)
    CCONST          reduce using rule 125 (operator2 -> string_concatenation_operator .)
    NULL            reduce using rule 125 (operator2 -> string_concatenation_operator .)
    SCONST          reduce using rule 125 (operator2 -> string_concatenation_operator .)
    NUM             reduce using rule 125 (operator2 -> string_concatenation_operator .)
    PRED            reduce using rule 125 (operator2 -> string_concatenation_operator .)
    SUCC            reduce using rule 125 (operator2 -> string_concatenation_operator .)
    UPPER           reduce using rule 125 (operator2 -> string_concatenation_operator .)
    LOWER           reduce using rule 125 (operator2 -> string_concatenation_operator .)
    LENGTH          reduce using rule 125 (operator2 -> string_concatenation_operator .)
    READ            reduce using rule 125 (operator2 -> string_concatenation_operator .)
    PRINT           reduce using rule 125 (operator2 -> string_concatenation_operator .)


state 190

    (128) string_concatenation_operator -> CONCAT .

    MINUS           reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    NOT             reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    ICONST          reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    ARROW           reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    LPAREN          reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    ID              reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    FALSE           reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    TRUE            reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    CCONST          reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    NULL            reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    SCONST          reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    NUM             reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    PRED            reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    SUCC            reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    UPPER           reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    LOWER           reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    LENGTH          reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    READ            reduce using rule 128 (string_concatenation_operator -> CONCAT .)
    PRINT           reduce using rule 128 (string_concatenation_operator -> CONCAT .)


state 191

    (124) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    ARROW           reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    LPAREN          reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    ID              reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    FALSE           reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    TRUE            reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    CCONST          reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    NULL            reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    SCONST          reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    NUM             reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    PRED            reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    SUCC            reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    UPPER           reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    LOWER           reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    LENGTH          reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    READ            reduce using rule 124 (operator2 -> arithmetic_additive_operator .)
    PRINT           reduce using rule 124 (operator2 -> arithmetic_additive_operator .)


state 192

    (126) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    ARROW           reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    LPAREN          reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    ID              reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    FALSE           reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    TRUE            reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    CCONST          reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    NULL            reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    SCONST          reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    NUM             reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    PRED            reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    SUCC            reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    UPPER           reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    LOWER           reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    LENGTH          reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    READ            reduce using rule 126 (arithmetic_additive_operator -> PLUS .)
    PRINT           reduce using rule 126 (arithmetic_additive_operator -> PLUS .)


state 193

    (127) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    ARROW           reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    LPAREN          reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    ID              reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    FALSE           reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    TRUE            reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    CCONST          reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    NULL            reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    SCONST          reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    NUM             reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    PRED            reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    SUCC            reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    UPPER           reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    LOWER           reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    LENGTH          reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    READ            reduce using rule 127 (arithmetic_additive_operator -> MINUS .)
    PRINT           reduce using rule 127 (arithmetic_additive_operator -> MINUS .)


state 194

    (96) parenthesized_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 243


state 195

    (142) referenced_location -> ARROW location .
    (68) dereferenced_reference -> location . ARROW
    (72) string_location -> location .
    (77) array_location -> location .

  ! reduce/reduce conflict for LBRACK resolved using rule 72 (string_location -> location .)
    TIMES           reduce using rule 142 (referenced_location -> ARROW location .)
    DIVIDE          reduce using rule 142 (referenced_location -> ARROW location .)
    PERC            reduce using rule 142 (referenced_location -> ARROW location .)
    PLUS            reduce using rule 142 (referenced_location -> ARROW location .)
    MINUS           reduce using rule 142 (referenced_location -> ARROW location .)
    CONCAT          reduce using rule 142 (referenced_location -> ARROW location .)
    AND             reduce using rule 142 (referenced_location -> ARROW location .)
    OR              reduce using rule 142 (referenced_location -> ARROW location .)
    EQUALS          reduce using rule 142 (referenced_location -> ARROW location .)
    DIF             reduce using rule 142 (referenced_location -> ARROW location .)
    GTR             reduce using rule 142 (referenced_location -> ARROW location .)
    GEQ             reduce using rule 142 (referenced_location -> ARROW location .)
    LSS             reduce using rule 142 (referenced_location -> ARROW location .)
    LEQ             reduce using rule 142 (referenced_location -> ARROW location .)
    IN              reduce using rule 142 (referenced_location -> ARROW location .)
    SEMICOL         reduce using rule 142 (referenced_location -> ARROW location .)
    RPAREN          reduce using rule 142 (referenced_location -> ARROW location .)
    COMMA           reduce using rule 142 (referenced_location -> ARROW location .)
    THEN            reduce using rule 142 (referenced_location -> ARROW location .)
    FI              reduce using rule 142 (referenced_location -> ARROW location .)
    COLON           reduce using rule 142 (referenced_location -> ARROW location .)
    DOWN            reduce using rule 142 (referenced_location -> ARROW location .)
    TO              reduce using rule 142 (referenced_location -> ARROW location .)
    RBRACK          reduce using rule 142 (referenced_location -> ARROW location .)
    BY              reduce using rule 142 (referenced_location -> ARROW location .)
    WHILE           reduce using rule 142 (referenced_location -> ARROW location .)
    ELSE            reduce using rule 142 (referenced_location -> ARROW location .)
    ELSIF           reduce using rule 142 (referenced_location -> ARROW location .)
    ARROW           shift and go to state 53
    LBRACK          reduce using rule 72 (string_location -> location .)

  ! LBRACK          [ reduce using rule 77 (array_location -> location .) ]


state 196

    (101) conditional_expression -> IF boolean_expression . then_expression else_expression FI
    (102) conditional_expression -> IF boolean_expression . then_expression elsif_expression else_expression FI
    (105) then_expression -> . THEN expression

    THEN            shift and go to state 244

    then_expression                shift and go to state 245

state 197

    (82) literal -> integer_literal .

    TIMES           reduce using rule 82 (literal -> integer_literal .)
    DIVIDE          reduce using rule 82 (literal -> integer_literal .)
    PERC            reduce using rule 82 (literal -> integer_literal .)
    PLUS            reduce using rule 82 (literal -> integer_literal .)
    MINUS           reduce using rule 82 (literal -> integer_literal .)
    CONCAT          reduce using rule 82 (literal -> integer_literal .)
    AND             reduce using rule 82 (literal -> integer_literal .)
    OR              reduce using rule 82 (literal -> integer_literal .)
    EQUALS          reduce using rule 82 (literal -> integer_literal .)
    DIF             reduce using rule 82 (literal -> integer_literal .)
    GTR             reduce using rule 82 (literal -> integer_literal .)
    GEQ             reduce using rule 82 (literal -> integer_literal .)
    LSS             reduce using rule 82 (literal -> integer_literal .)
    LEQ             reduce using rule 82 (literal -> integer_literal .)
    IN              reduce using rule 82 (literal -> integer_literal .)
    SEMICOL         reduce using rule 82 (literal -> integer_literal .)
    THEN            reduce using rule 82 (literal -> integer_literal .)
    RBRACK          reduce using rule 82 (literal -> integer_literal .)
    COLON           reduce using rule 82 (literal -> integer_literal .)
    RPAREN          reduce using rule 82 (literal -> integer_literal .)
    COMMA           reduce using rule 82 (literal -> integer_literal .)
    ELSE            reduce using rule 82 (literal -> integer_literal .)
    ELSIF           reduce using rule 82 (literal -> integer_literal .)
    DOWN            reduce using rule 82 (literal -> integer_literal .)
    BY              reduce using rule 82 (literal -> integer_literal .)
    TO              reduce using rule 82 (literal -> integer_literal .)
    FI              reduce using rule 82 (literal -> integer_literal .)
    WHILE           reduce using rule 82 (literal -> integer_literal .)
    LBRACK          reduce using rule 82 (literal -> integer_literal .)


state 198

    (134) operand3 -> monadic_operator operand4 .

    TIMES           reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    DIVIDE          reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    PERC            reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    PLUS            reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    MINUS           reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    CONCAT          reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    AND             reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    OR              reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    EQUALS          reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    DIF             reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    GTR             reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    GEQ             reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    LSS             reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    LEQ             reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    IN              reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    DOWN            reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    BY              reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    TO              reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    COLON           reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    SEMICOL         reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    THEN            reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    RPAREN          reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    COMMA           reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    ELSE            reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    ELSIF           reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    RBRACK          reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    FI              reduce using rule 134 (operand3 -> monadic_operator operand4 .)
    WHILE           reduce using rule 134 (operand3 -> monadic_operator operand4 .)


state 199

    (172) do_action -> DO action_statement_list OD .

    SEMICOL         reduce using rule 172 (do_action -> DO action_statement_list OD .)


state 200

    (143) action_statement_list -> action_statement_list action_statement .

    ID              reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    EXIT            reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    RETURN          reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    RESULT          reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    IF              reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    DO              reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    NUM             reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    PRED            reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    SUCC            reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    UPPER           reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    LOWER           reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    LENGTH          reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    READ            reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    PRINT           reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    FI              reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    ELSE            reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    ELSIF           reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)
    OD              reduce using rule 143 (action_statement_list -> action_statement_list action_statement .)


state 201

    (174) control_part -> for_control while_control .

    SEMICOL         reduce using rule 174 (control_part -> for_control while_control .)


state 202

    (170) do_action -> DO control_part SEMICOL . action_statement_list OD
    (171) do_action -> DO control_part SEMICOL . OD
    (143) action_statement_list -> . action_statement_list action_statement
    (144) action_statement_list -> . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    OD              shift and go to state 247
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    action_statement_list          shift and go to state 246
    string_location                shift and go to state 4
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    exit_action                    shift and go to state 29
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 120
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 203

    (13) action_statement -> label_id COLON . action SEMICOL
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location

    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12
    ID              shift and go to state 47

    identifier                     shift and go to state 85
    assignment_action              shift and go to state 46
    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 159
    exit_action                    shift and go to state 29
    do_action                      shift and go to state 17
    bracketed_action               shift and go to state 41
    procedure_call                 shift and go to state 19
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 204

    (191) while_control -> WHILE boolean_expression .

    SEMICOL         reduce using rule 191 (while_control -> WHILE boolean_expression .)


state 205

    (177) for_control -> FOR iteration .

    WHILE           reduce using rule 177 (for_control -> FOR iteration .)
    SEMICOL         reduce using rule 177 (for_control -> FOR iteration .)


state 206

    (184) loop_counter -> identifier .

    DOWN            reduce using rule 184 (loop_counter -> identifier .)
    IN              reduce using rule 184 (loop_counter -> identifier .)
    ASSIGN          reduce using rule 184 (loop_counter -> identifier .)


state 207

    (178) iteration -> range_enumeration .

    WHILE           reduce using rule 178 (iteration -> range_enumeration .)
    SEMICOL         reduce using rule 178 (iteration -> range_enumeration .)


state 208

    (179) iteration -> step_enumeration .

    WHILE           reduce using rule 179 (iteration -> step_enumeration .)
    SEMICOL         reduce using rule 179 (iteration -> step_enumeration .)


state 209

    (189) range_enumeration -> loop_counter . DOWN IN discrete_mode_name
    (190) range_enumeration -> loop_counter . IN discrete_mode_name
    (180) step_enumeration -> loop_counter . ASSIGN start_value step_value DOWN end_value
    (181) step_enumeration -> loop_counter . ASSIGN start_value step_value end_value
    (182) step_enumeration -> loop_counter . ASSIGN start_value DOWN end_value
    (183) step_enumeration -> loop_counter . ASSIGN start_value end_value

    DOWN            shift and go to state 249
    IN              shift and go to state 248
    ASSIGN          shift and go to state 250


state 210

    (164) then_clause -> THEN . action_statement_list
    (165) then_clause -> THEN . empty
    (143) action_statement_list -> . action_statement_list action_statement
    (144) action_statement_list -> . action_statement
    (232) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    FI              reduce using rule 232 (empty -> .)
    ELSE            reduce using rule 232 (empty -> .)
    ELSIF           reduce using rule 232 (empty -> .)
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    action_statement_list          shift and go to state 251
    string_location                shift and go to state 4
    exit_action                    shift and go to state 29
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    empty                          shift and go to state 252
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 120
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 211

    (162) if_action -> IF boolean_expression then_clause . else_clause FI
    (163) if_action -> IF boolean_expression then_clause . FI
    (166) else_clause -> . ELSE action_statement_list
    (167) else_clause -> . ELSE empty
    (168) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (169) else_clause -> . ELSIF boolean_expression then_clause

    FI              shift and go to state 256
    ELSE            shift and go to state 253
    ELSIF           shift and go to state 255

    else_clause                    shift and go to state 254

state 212

    (69) string_element -> string_location LBRACK start_element RBRACK .

    ARROW           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    TIMES           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    DIVIDE          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    PERC            reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    PLUS            reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    MINUS           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    CONCAT          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    AND             reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    OR              reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    EQUALS          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    DIF             reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    GTR             reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    GEQ             reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    LSS             reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    LEQ             reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    IN              reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    SEMICOL         reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    THEN            reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    RBRACK          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    COLON           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    RPAREN          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    COMMA           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    ELSE            reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    ELSIF           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    DOWN            reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    BY              reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    TO              reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    FI              reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    WHILE           reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    LBRACK          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    ASSIGN          reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    PLUSASSIGN      reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    MINUSASSIGN     reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    TIMESASSIGN     reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    PERCASSIGN      reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)
    CONCATASSIGN    reduce using rule 69 (string_element -> string_location LBRACK start_element RBRACK .)


state 213

    (71) string_slice -> string_location LBRACK left_element COLON . right_element RBRACK
    (74) right_element -> . integer_expression
    (103) integer_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    integer_expression             shift and go to state 257
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    right_element                  shift and go to state 258
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 127
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 214

    (194) procedure_call -> procedure_name LPAREN parameter_list RPAREN .

    ARROW           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PERC            reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    CONCAT          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    AND             reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    OR              reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    EQUALS          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DIF             reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    GTR             reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    GEQ             reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    LSS             reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    LEQ             reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    IN              reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    LBRACK          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    TO              reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    RBRACK          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    FI              reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    SEMICOL         reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    BY              reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PLUSASSIGN      reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    MINUSASSIGN     reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    TIMESASSIGN     reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DIVIDEASSIGN    reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PERCASSIGN      reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    CONCATASSIGN    reduce using rule 194 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)


state 215

    (196) parameter_list -> parameter_list COMMA . parameter
    (198) parameter -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    parameter                      shift and go to state 259
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 131
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    integer_literal                shift and go to state 86
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 216

    (40) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (43) literal_range -> . lower_bound COLON upper_bound
    (44) lower_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 260
    primitive_value                shift and go to state 90
    literal_range                  shift and go to state 261
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    string_element                 shift and go to state 8
    operand2                       shift and go to state 81
    lower_bound                    shift and go to state 262
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 217

    (58) identifier_list -> identifier_list COMMA identifier .

    ASSIGN          reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    COMMA           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)


state 218

    (46) reference_mode -> REF mode .

    SEMICOL         reduce using rule 46 (reference_mode -> REF mode .)
    COMMA           reduce using rule 46 (reference_mode -> REF mode .)
    ASSIGN          reduce using rule 46 (reference_mode -> REF mode .)
    LOC             reduce using rule 46 (reference_mode -> REF mode .)
    RPAREN          reduce using rule 46 (reference_mode -> REF mode .)


state 219

    (51) array_mode -> ARRAY LBRACK . index_mode_list RBRACK element_mode
    (52) index_mode_list -> . index_mode_list COMMA index_mode
    (53) index_mode_list -> . index_mode
    (54) index_mode -> . discrete_mode
    (55) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (43) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (44) lower_bound -> . expression
    (42) discrete_mode_name -> . identifier
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (59) identifier -> . ID
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    ID              shift and go to state 47
    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    string_element                 shift and go to state 8
    character_string_literal       shift and go to state 78
    operand3                       shift and go to state 108
    location                       shift and go to state 80
    discrete_mode                  shift and go to state 263
    index_mode_list                shift and go to state 264
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 265
    index_mode                     shift and go to state 267
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 260
    primitive_value                shift and go to state 90
    discrete_mode_name             shift and go to state 151
    literal_range                  shift and go to state 266
    parenthesized_expression       shift and go to state 92
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    character_literal              shift and go to state 96
    string_location                shift and go to state 4
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    discrete_range_mode            shift and go to state 140
    array_slice                    shift and go to state 33
    procedure_call                 shift and go to state 19
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    boolean_mode                   shift and go to state 143
    operand2                       shift and go to state 81
    lower_bound                    shift and go to state 262
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 220

    (49) string_mode -> CHARS LBRACK . string_length RBRACK
    (50) string_length -> . integer_literal
    (87) integer_literal -> . ICONST

    ICONST          shift and go to state 106

    string_length                  shift and go to state 269
    integer_literal                shift and go to state 268

state 221

    (19) initialization -> ASSIGN . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 270
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 222

    (17) declaration -> identifier_list mode initialization .

    SEMICOL         reduce using rule 17 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 17 (declaration -> identifier_list mode initialization .)


state 223

    (39) discrete_range_mode -> discrete_mode_name LPAREN . literal_range RPAREN
    (43) literal_range -> . lower_bound COLON upper_bound
    (44) lower_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 260
    primitive_value                shift and go to state 90
    literal_range                  shift and go to state 271
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    lower_bound                    shift and go to state 262
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 224

    (15) declaration_list -> declaration_list COMMA declaration .

    SEMICOL         reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)


state 225

    (205) builtin_call -> builtin_name LPAREN parameter_list RPAREN .

    ARROW           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PERC            reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    CONCAT          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    AND             reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    OR              reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    EQUALS          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIF             reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GTR             reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GEQ             reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LSS             reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LEQ             reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    IN              reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    SEMICOL         reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LBRACK          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RBRACK          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    BY              reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TO              reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    FI              reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PLUSASSIGN      reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MINUSASSIGN     reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TIMESASSIGN     reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVIDEASSIGN    reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PERCASSIGN      reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    CONCATASSIGN    reduce using rule 205 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)


state 226

    (12) procedure_statement -> label_id COLON procedure_definition SEMICOL .

    END             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    DCL             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SYN             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    TYPE            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    ID              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    EXIT            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    RETURN          reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    RESULT          reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    IF              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    DO              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    NUM             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    PRED            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SUCC            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    UPPER           reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    LOWER           reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    LENGTH          reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    READ            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    PRINT           reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    $end            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)


state 227

    (13) action_statement -> label_id COLON action SEMICOL .

    ID              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    EXIT            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    RETURN          reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    RESULT          reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    IF              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    DO              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    NUM             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    PRED            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    SUCC            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    UPPER           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    LOWER           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    LENGTH          reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    READ            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    PRINT           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    FI              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSIF           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    END             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    DCL             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    SYN             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    TYPE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    $end            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    OD              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)


state 228

    (215) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (216) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL END
    (217) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL statement_list END
    (218) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL statement_list END
    (219) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL END
    (220) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL END
    (221) procedure_definition -> PROC LPAREN . RPAREN SEMICOL statement_list END
    (222) procedure_definition -> PROC LPAREN . RPAREN SEMICOL END
    (223) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (224) formal_parameter_list -> . formal_parameter
    (225) formal_parameter -> . identifier_list parameter_spec
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    RPAREN          shift and go to state 272
    ID              shift and go to state 47

    identifier                     shift and go to state 61
    identifier_list                shift and go to state 274
    formal_parameter               shift and go to state 273
    formal_parameter_list          shift and go to state 275

state 229

    (75) array_element -> array_location LBRACK expression_list RBRACK .

    ARROW           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    TIMES           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIVIDE          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    PERC            reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    PLUS            reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    MINUS           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    CONCAT          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    AND             reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    OR              reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    EQUALS          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIF             reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    GTR             reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    GEQ             reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    LSS             reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    LEQ             reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    IN              reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    RPAREN          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    COMMA           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    LBRACK          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    SEMICOL         reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    THEN            reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    RBRACK          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    COLON           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    ELSE            reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    ELSIF           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    DOWN            reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    BY              reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    TO              reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    FI              reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    WHILE           reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    ASSIGN          reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    PLUSASSIGN      reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    MINUSASSIGN     reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    TIMESASSIGN     reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIVIDEASSIGN    reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    PERCASSIGN      reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)
    CONCATASSIGN    reduce using rule 75 (array_element -> array_location LBRACK expression_list RBRACK .)


state 230

    (97) expression_list -> expression_list COMMA . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 276
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 231

    (76) array_slice -> array_location LBRACK lower_bound COLON . upper_bound RBRACK
    (45) upper_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 278
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    upper_bound                    shift and go to state 277
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 232

    (24) constant_expression -> expression .

    SEMICOL         reduce using rule 24 (constant_expression -> expression .)
    COMMA           reduce using rule 24 (constant_expression -> expression .)


state 233

    (23) synonym_definition -> identifier_list ASSIGN constant_expression .

    SEMICOL         reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)
    COMMA           reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)


state 234

    (22) synonym_definition -> identifier_list mode ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 232
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    constant_expression            shift and go to state 279
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    builtin_call                   shift and go to state 22
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 235

    (20) synonym_list -> synonym_list COMMA synonym_definition .

    SEMICOL         reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)
    COMMA           reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)


state 236

    (25) newmode_list -> newmode_list COMMA mode_definition .

    SEMICOL         reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)


state 237

    (27) mode_definition -> identifier_list ASSIGN mode .

    SEMICOL         reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)


state 238

    (110) operand0 -> operand0 operator1 operand1 .
    (123) operand1 -> operand1 . operator2 operand2
    (124) operator2 -> . arithmetic_additive_operator
    (125) operator2 -> . string_concatenation_operator
    (126) arithmetic_additive_operator -> . PLUS
    (127) arithmetic_additive_operator -> . MINUS
    (128) string_concatenation_operator -> . CONCAT

    AND             reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    EQUALS          reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    DIF             reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    GTR             reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    GEQ             reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    LSS             reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    LEQ             reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    ELSE            reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    ELSIF           reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    RBRACK          reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    THEN            reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    WHILE           reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    SEMICOL         reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    DOWN            reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    TO              reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    BY              reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    FI              reduce using rule 110 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 192
    MINUS           shift and go to state 193
    CONCAT          shift and go to state 190

    operator2                      shift and go to state 188
    string_concatenation_operator  shift and go to state 189
    arithmetic_additive_operator   shift and go to state 191

state 239

    (130) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PERC            reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    CONCAT          reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUALS          reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIF             reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GTR             reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GEQ             reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LSS             reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LEQ             reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACK          reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    WHILE           reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMICOL         reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    THEN            reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSE            reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSIF           reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DOWN            reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    BY              reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    TO              reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    FI              reduce using rule 130 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 240

    (93) value_array_element -> array_primitive_value LBRACK expression_list . RBRACK
    (97) expression_list -> expression_list . COMMA expression

    RBRACK          shift and go to state 280
    COMMA           shift and go to state 230


state 241

    (94) value_array_slice -> array_primitive_value LBRACK lower_bound . COLON upper_bound RBRACK

    COLON           shift and go to state 281


state 242

    (123) operand1 -> operand1 operator2 operand2 .
    (130) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (131) arithmetic_multiplicative_operator -> . TIMES
    (132) arithmetic_multiplicative_operator -> . DIVIDE
    (133) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    CONCAT          reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    EQUALS          reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    DIF             reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    GTR             reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    GEQ             reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    LSS             reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    LEQ             reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    THEN            reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    ELSE            reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    ELSIF           reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    RBRACK          reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    FI              reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    SEMICOL         reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    DOWN            reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    TO              reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    BY              reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    WHILE           reduce using rule 123 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 186
    PERC            shift and go to state 184

    arithmetic_multiplicative_operator shift and go to state 185

state 243

    (96) parenthesized_expression -> LPAREN expression RPAREN .

    TIMES           reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    PERC            reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    CONCAT          reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIF             reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    GTR             reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    LSS             reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    LBRACK          reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSIF           reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    DOWN            reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    BY              reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 96 (parenthesized_expression -> LPAREN expression RPAREN .)


state 244

    (105) then_expression -> THEN . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 282
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 245

    (101) conditional_expression -> IF boolean_expression then_expression . else_expression FI
    (102) conditional_expression -> IF boolean_expression then_expression . elsif_expression else_expression FI
    (106) else_expression -> . ELSE expression
    (107) elsif_expression -> . elsif_expression ELSIF boolean_expression then_expression
    (108) elsif_expression -> . ELSIF boolean_expression then_expression

    ELSE            shift and go to state 283
    ELSIF           shift and go to state 285

    elsif_expression               shift and go to state 284
    else_expression                shift and go to state 286

state 246

    (170) do_action -> DO control_part SEMICOL action_statement_list . OD
    (143) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    OD              shift and go to state 287
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    exit_action                    shift and go to state 29
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 200
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 247

    (171) do_action -> DO control_part SEMICOL OD .

    SEMICOL         reduce using rule 171 (do_action -> DO control_part SEMICOL OD .)


state 248

    (190) range_enumeration -> loop_counter IN . discrete_mode_name
    (42) discrete_mode_name -> . identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 288
    discrete_mode_name             shift and go to state 289

state 249

    (189) range_enumeration -> loop_counter DOWN . IN discrete_mode_name

    IN              shift and go to state 290


state 250

    (180) step_enumeration -> loop_counter ASSIGN . start_value step_value DOWN end_value
    (181) step_enumeration -> loop_counter ASSIGN . start_value step_value end_value
    (182) step_enumeration -> loop_counter ASSIGN . start_value DOWN end_value
    (183) step_enumeration -> loop_counter ASSIGN . start_value end_value
    (185) start_value -> . discrete_expression
    (188) discrete_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    start_value                    shift and go to state 291
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 292
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    array_primitive_value          shift and go to state 82
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    discrete_expression            shift and go to state 293
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 251

    (164) then_clause -> THEN action_statement_list .
    (143) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    FI              reduce using rule 164 (then_clause -> THEN action_statement_list .)
    ELSE            reduce using rule 164 (then_clause -> THEN action_statement_list .)
    ELSIF           reduce using rule 164 (then_clause -> THEN action_statement_list .)
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    exit_action                    shift and go to state 29
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 200
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 252

    (165) then_clause -> THEN empty .

    FI              reduce using rule 165 (then_clause -> THEN empty .)
    ELSE            reduce using rule 165 (then_clause -> THEN empty .)
    ELSIF           reduce using rule 165 (then_clause -> THEN empty .)


state 253

    (166) else_clause -> ELSE . action_statement_list
    (167) else_clause -> ELSE . empty
    (143) action_statement_list -> . action_statement_list action_statement
    (144) action_statement_list -> . action_statement
    (232) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    FI              reduce using rule 232 (empty -> .)
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    action_statement_list          shift and go to state 294
    string_location                shift and go to state 4
    exit_action                    shift and go to state 29
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    empty                          shift and go to state 295
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 120
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 254

    (162) if_action -> IF boolean_expression then_clause else_clause . FI

    FI              shift and go to state 296


state 255

    (168) else_clause -> ELSIF . boolean_expression then_clause else_clause
    (169) else_clause -> ELSIF . boolean_expression then_clause
    (104) boolean_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_expression             shift and go to state 297
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 123
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 256

    (163) if_action -> IF boolean_expression then_clause FI .

    SEMICOL         reduce using rule 163 (if_action -> IF boolean_expression then_clause FI .)


state 257

    (74) right_element -> integer_expression .

    RBRACK          reduce using rule 74 (right_element -> integer_expression .)


state 258

    (71) string_slice -> string_location LBRACK left_element COLON right_element . RBRACK

    RBRACK          shift and go to state 298


state 259

    (196) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 196 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 196 (parameter_list -> parameter_list COMMA parameter .)


state 260

    (44) lower_bound -> expression .

    COLON           reduce using rule 44 (lower_bound -> expression .)


state 261

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 299


state 262

    (43) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 300


state 263

    (54) index_mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACK          reduce using rule 54 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 54 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 216


state 264

    (51) array_mode -> ARRAY LBRACK index_mode_list . RBRACK element_mode
    (52) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACK          shift and go to state 301
    COMMA           shift and go to state 302


state 265

    (42) discrete_mode_name -> identifier .
    (67) location_name -> identifier .
    (199) procedure_name -> identifier .

  ! reduce/reduce conflict for LPAREN resolved using rule 42 (discrete_mode_name -> identifier .)
    LPAREN          reduce using rule 42 (discrete_mode_name -> identifier .)
    ARROW           reduce using rule 67 (location_name -> identifier .)
    TIMES           reduce using rule 67 (location_name -> identifier .)
    DIVIDE          reduce using rule 67 (location_name -> identifier .)
    PERC            reduce using rule 67 (location_name -> identifier .)
    PLUS            reduce using rule 67 (location_name -> identifier .)
    MINUS           reduce using rule 67 (location_name -> identifier .)
    CONCAT          reduce using rule 67 (location_name -> identifier .)
    AND             reduce using rule 67 (location_name -> identifier .)
    OR              reduce using rule 67 (location_name -> identifier .)
    EQUALS          reduce using rule 67 (location_name -> identifier .)
    DIF             reduce using rule 67 (location_name -> identifier .)
    GTR             reduce using rule 67 (location_name -> identifier .)
    GEQ             reduce using rule 67 (location_name -> identifier .)
    LSS             reduce using rule 67 (location_name -> identifier .)
    LEQ             reduce using rule 67 (location_name -> identifier .)
    IN              reduce using rule 67 (location_name -> identifier .)
    COLON           reduce using rule 67 (location_name -> identifier .)
    LBRACK          reduce using rule 67 (location_name -> identifier .)

  ! LPAREN          [ reduce using rule 199 (procedure_name -> identifier .) ]


state 266

    (55) index_mode -> literal_range .

    RBRACK          reduce using rule 55 (index_mode -> literal_range .)
    COMMA           reduce using rule 55 (index_mode -> literal_range .)


state 267

    (53) index_mode_list -> index_mode .

    RBRACK          reduce using rule 53 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 53 (index_mode_list -> index_mode .)


state 268

    (50) string_length -> integer_literal .

    RBRACK          reduce using rule 50 (string_length -> integer_literal .)


state 269

    (49) string_mode -> CHARS LBRACK string_length . RBRACK

    RBRACK          shift and go to state 303


state 270

    (19) initialization -> ASSIGN expression .

    SEMICOL         reduce using rule 19 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 19 (initialization -> ASSIGN expression .)


state 271

    (39) discrete_range_mode -> discrete_mode_name LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 304


state 272

    (218) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL statement_list END
    (220) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL END
    (221) procedure_definition -> PROC LPAREN RPAREN . SEMICOL statement_list END
    (222) procedure_definition -> PROC LPAREN RPAREN . SEMICOL END
    (229) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (230) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 307
    RETURNS         shift and go to state 305

    result_spec                    shift and go to state 306

state 273

    (224) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 224 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 224 (formal_parameter_list -> formal_parameter .)


state 274

    (225) formal_parameter -> identifier_list . parameter_spec
    (58) identifier_list -> identifier_list . COMMA identifier
    (226) parameter_spec -> . mode parameter_attribute
    (227) parameter_spec -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    COMMA           shift and go to state 142
    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    parameter_spec                 shift and go to state 308
    identifier                     shift and go to state 144
    array_mode                     shift and go to state 139
    discrete_mode_name             shift and go to state 151
    string_mode                    shift and go to state 141
    mode                           shift and go to state 309
    mode_name                      shift and go to state 137
    discrete_mode                  shift and go to state 138
    reference_mode                 shift and go to state 149
    composite_mode                 shift and go to state 150
    discrete_range_mode            shift and go to state 140
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    boolean_mode                   shift and go to state 143

state 275

    (215) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL statement_list END
    (216) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL END
    (217) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL statement_list END
    (219) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL END
    (223) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 310
    COMMA           shift and go to state 311


state 276

    (97) expression_list -> expression_list COMMA expression .

    RBRACK          reduce using rule 97 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 97 (expression_list -> expression_list COMMA expression .)


state 277

    (76) array_slice -> array_location LBRACK lower_bound COLON upper_bound . RBRACK

    RBRACK          shift and go to state 312


state 278

    (45) upper_bound -> expression .

    RBRACK          reduce using rule 45 (upper_bound -> expression .)
    RPAREN          reduce using rule 45 (upper_bound -> expression .)
    COMMA           reduce using rule 45 (upper_bound -> expression .)


state 279

    (22) synonym_definition -> identifier_list mode ASSIGN constant_expression .

    SEMICOL         reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)
    COMMA           reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)


state 280

    (93) value_array_element -> array_primitive_value LBRACK expression_list RBRACK .

    TIMES           reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    DIVIDE          reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    PERC            reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    PLUS            reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    MINUS           reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    CONCAT          reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    AND             reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    OR              reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    EQUALS          reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    DIF             reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    GTR             reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    GEQ             reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    LSS             reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    LEQ             reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    IN              reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    FI              reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    LBRACK          reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    THEN            reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    SEMICOL         reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    RBRACK          reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    COLON           reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    RPAREN          reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    COMMA           reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    ELSE            reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    ELSIF           reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    DOWN            reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    BY              reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    TO              reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    WHILE           reduce using rule 93 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)


state 281

    (94) value_array_slice -> array_primitive_value LBRACK lower_bound COLON . upper_bound RBRACK
    (45) upper_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    array_slice                    shift and go to state 33
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 278
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    upper_bound                    shift and go to state 313
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 282

    (105) then_expression -> THEN expression .

    ELSIF           reduce using rule 105 (then_expression -> THEN expression .)
    ELSE            reduce using rule 105 (then_expression -> THEN expression .)


state 283

    (106) else_expression -> ELSE . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 314
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 284

    (102) conditional_expression -> IF boolean_expression then_expression elsif_expression . else_expression FI
    (107) elsif_expression -> elsif_expression . ELSIF boolean_expression then_expression
    (106) else_expression -> . ELSE expression

    ELSIF           shift and go to state 315
    ELSE            shift and go to state 283

    else_expression                shift and go to state 316

state 285

    (108) elsif_expression -> ELSIF . boolean_expression then_expression
    (104) boolean_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_expression             shift and go to state 317
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 123
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 286

    (101) conditional_expression -> IF boolean_expression then_expression else_expression . FI

    FI              shift and go to state 318


state 287

    (170) do_action -> DO control_part SEMICOL action_statement_list OD .

    SEMICOL         reduce using rule 170 (do_action -> DO control_part SEMICOL action_statement_list OD .)


state 288

    (42) discrete_mode_name -> identifier .

    WHILE           reduce using rule 42 (discrete_mode_name -> identifier .)
    SEMICOL         reduce using rule 42 (discrete_mode_name -> identifier .)


state 289

    (190) range_enumeration -> loop_counter IN discrete_mode_name .

    WHILE           reduce using rule 190 (range_enumeration -> loop_counter IN discrete_mode_name .)
    SEMICOL         reduce using rule 190 (range_enumeration -> loop_counter IN discrete_mode_name .)


state 290

    (189) range_enumeration -> loop_counter DOWN IN . discrete_mode_name
    (42) discrete_mode_name -> . identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 288
    discrete_mode_name             shift and go to state 319

state 291

    (180) step_enumeration -> loop_counter ASSIGN start_value . step_value DOWN end_value
    (181) step_enumeration -> loop_counter ASSIGN start_value . step_value end_value
    (182) step_enumeration -> loop_counter ASSIGN start_value . DOWN end_value
    (183) step_enumeration -> loop_counter ASSIGN start_value . end_value
    (186) step_value -> . BY integer_expression
    (187) end_value -> . TO discrete_expression

    DOWN            shift and go to state 323
    BY              shift and go to state 324
    TO              shift and go to state 322

    end_value                      shift and go to state 320
    step_value                     shift and go to state 321

state 292

    (188) discrete_expression -> expression .

    DOWN            reduce using rule 188 (discrete_expression -> expression .)
    BY              reduce using rule 188 (discrete_expression -> expression .)
    TO              reduce using rule 188 (discrete_expression -> expression .)
    WHILE           reduce using rule 188 (discrete_expression -> expression .)
    SEMICOL         reduce using rule 188 (discrete_expression -> expression .)


state 293

    (185) start_value -> discrete_expression .

    DOWN            reduce using rule 185 (start_value -> discrete_expression .)
    BY              reduce using rule 185 (start_value -> discrete_expression .)
    TO              reduce using rule 185 (start_value -> discrete_expression .)


state 294

    (166) else_clause -> ELSE action_statement_list .
    (143) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    FI              reduce using rule 166 (else_clause -> ELSE action_statement_list .)
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    exit_action                    shift and go to state 29
    procedure_name                 shift and go to state 6
    location                       shift and go to state 5
    bracketed_action               shift and go to state 41
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_slice                    shift and go to state 33
    call_action                    shift and go to state 13
    action                         shift and go to state 37
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 116
    builtin_name                   shift and go to state 14
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 200
    return_action                  shift and go to state 25
    array_element                  shift and go to state 49

state 295

    (167) else_clause -> ELSE empty .

    FI              reduce using rule 167 (else_clause -> ELSE empty .)


state 296

    (162) if_action -> IF boolean_expression then_clause else_clause FI .

    SEMICOL         reduce using rule 162 (if_action -> IF boolean_expression then_clause else_clause FI .)


state 297

    (168) else_clause -> ELSIF boolean_expression . then_clause else_clause
    (169) else_clause -> ELSIF boolean_expression . then_clause
    (164) then_clause -> . THEN action_statement_list
    (165) then_clause -> . THEN empty

    THEN            shift and go to state 210

    then_clause                    shift and go to state 325

state 298

    (71) string_slice -> string_location LBRACK left_element COLON right_element RBRACK .

    ARROW           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    TIMES           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    DIVIDE          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PERC            reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PLUS            reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    MINUS           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    CONCAT          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    AND             reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    OR              reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    EQUALS          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    DIF             reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    GTR             reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    GEQ             reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    LSS             reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    LEQ             reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    IN              reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    COLON           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    LBRACK          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    ASSIGN          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PLUSASSIGN      reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    MINUSASSIGN     reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    TIMESASSIGN     reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PERCASSIGN      reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    CONCATASSIGN    reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    THEN            reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    WHILE           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    SEMICOL         reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    RPAREN          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    RBRACK          reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    COMMA           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    ELSE            reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    ELSIF           reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    DOWN            reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    BY              reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    TO              reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    FI              reduce using rule 71 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)


state 299

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 300

    (43) literal_range -> lower_bound COLON . upper_bound
    (45) upper_bound -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 278
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    upper_bound                    shift and go to state 326
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 301

    (51) array_mode -> ARRAY LBRACK index_mode_list RBRACK . element_mode
    (56) element_mode -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    boolean_mode                   shift and go to state 143
    identifier                     shift and go to state 144
    array_mode                     shift and go to state 139
    discrete_mode_name             shift and go to state 151
    reference_mode                 shift and go to state 149
    string_mode                    shift and go to state 141
    mode                           shift and go to state 328
    mode_name                      shift and go to state 137
    discrete_mode                  shift and go to state 138
    composite_mode                 shift and go to state 150
    discrete_range_mode            shift and go to state 140
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    element_mode                   shift and go to state 327

state 302

    (52) index_mode_list -> index_mode_list COMMA . index_mode
    (54) index_mode -> . discrete_mode
    (55) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (43) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (44) lower_bound -> . expression
    (42) discrete_mode_name -> . identifier
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (59) identifier -> . ID
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    ID              shift and go to state 47
    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    boolean_literal                shift and go to state 76
    operand0                       shift and go to state 77
    string_element                 shift and go to state 8
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    discrete_mode                  shift and go to state 263
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    call_action                    shift and go to state 83
    builtin_name                   shift and go to state 14
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 265
    index_mode                     shift and go to state 329
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 260
    primitive_value                shift and go to state 90
    discrete_mode_name             shift and go to state 151
    literal_range                  shift and go to state 266
    parenthesized_expression       shift and go to state 92
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    discrete_range_mode            shift and go to state 140
    array_slice                    shift and go to state 33
    procedure_call                 shift and go to state 19
    dereferenced_reference         shift and go to state 27
    value_array_element            shift and go to state 101
    boolean_mode                   shift and go to state 143
    operand2                       shift and go to state 81
    lower_bound                    shift and go to state 262
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 303

    (49) string_mode -> CHARS LBRACK string_length RBRACK .

    ASSIGN          reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    SEMICOL         reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    COMMA           reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    LOC             reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    RPAREN          reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)


state 304

    (39) discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    LOC             reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)


state 305

    (229) result_spec -> RETURNS . LPAREN mode result_attribute RPAREN
    (230) result_spec -> RETURNS . LPAREN mode RPAREN

    LPAREN          shift and go to state 330


state 306

    (218) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL statement_list END
    (220) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 331


state 307

    (221) procedure_definition -> PROC LPAREN RPAREN SEMICOL . statement_list END
    (222) procedure_definition -> PROC LPAREN RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 333
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    statement_list                 shift and go to state 332
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    synonym_statement              shift and go to state 21
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 30
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 308

    (225) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 225 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 225 (formal_parameter -> identifier_list parameter_spec .)


state 309

    (226) parameter_spec -> mode . parameter_attribute
    (227) parameter_spec -> mode .
    (228) parameter_attribute -> . LOC

    RPAREN          reduce using rule 227 (parameter_spec -> mode .)
    COMMA           reduce using rule 227 (parameter_spec -> mode .)
    LOC             shift and go to state 335

    parameter_attribute            shift and go to state 334

state 310

    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL statement_list END
    (216) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL END
    (217) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL statement_list END
    (219) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL END
    (229) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (230) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 337
    RETURNS         shift and go to state 305

    result_spec                    shift and go to state 336

state 311

    (223) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (225) formal_parameter -> . identifier_list parameter_spec
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 47

    identifier                     shift and go to state 61
    formal_parameter               shift and go to state 338
    identifier_list                shift and go to state 274

state 312

    (76) array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .

    ARROW           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TIMES           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDE          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PERC            reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUS            reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUS           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCAT          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    AND             reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    OR              reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    EQUALS          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIF             reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    GTR             reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    GEQ             reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LSS             reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LEQ             reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    IN              reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    THEN            reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LBRACK          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    SEMICOL         reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    COLON           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    COMMA           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ASSIGN          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUSASSIGN      reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUSASSIGN     reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TIMESASSIGN     reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDEASSIGN    reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PERCASSIGN      reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCATASSIGN    reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    RBRACK          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    FI              reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    WHILE           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    RPAREN          reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSE            reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSIF           reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DOWN            reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    BY              reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TO              reduce using rule 76 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)


state 313

    (94) value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound . RBRACK

    RBRACK          shift and go to state 339


state 314

    (106) else_expression -> ELSE expression .

    FI              reduce using rule 106 (else_expression -> ELSE expression .)


state 315

    (107) elsif_expression -> elsif_expression ELSIF . boolean_expression then_expression
    (104) boolean_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_expression             shift and go to state 340
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 123
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 316

    (102) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression . FI

    FI              shift and go to state 341


state 317

    (108) elsif_expression -> ELSIF boolean_expression . then_expression
    (105) then_expression -> . THEN expression

    THEN            shift and go to state 244

    then_expression                shift and go to state 342

state 318

    (101) conditional_expression -> IF boolean_expression then_expression else_expression FI .

    RBRACK          reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COLON           reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COMMA           reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    WHILE           reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    SEMICOL         reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    RPAREN          reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    THEN            reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    DOWN            reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    TO              reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    BY              reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSE            reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSIF           reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    FI              reduce using rule 101 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)


state 319

    (189) range_enumeration -> loop_counter DOWN IN discrete_mode_name .

    WHILE           reduce using rule 189 (range_enumeration -> loop_counter DOWN IN discrete_mode_name .)
    SEMICOL         reduce using rule 189 (range_enumeration -> loop_counter DOWN IN discrete_mode_name .)


state 320

    (183) step_enumeration -> loop_counter ASSIGN start_value end_value .

    WHILE           reduce using rule 183 (step_enumeration -> loop_counter ASSIGN start_value end_value .)
    SEMICOL         reduce using rule 183 (step_enumeration -> loop_counter ASSIGN start_value end_value .)


state 321

    (180) step_enumeration -> loop_counter ASSIGN start_value step_value . DOWN end_value
    (181) step_enumeration -> loop_counter ASSIGN start_value step_value . end_value
    (187) end_value -> . TO discrete_expression

    DOWN            shift and go to state 344
    TO              shift and go to state 322

    end_value                      shift and go to state 343

state 322

    (187) end_value -> TO . discrete_expression
    (188) discrete_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 292
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    discrete_expression            shift and go to state 345
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 323

    (182) step_enumeration -> loop_counter ASSIGN start_value DOWN . end_value
    (187) end_value -> . TO discrete_expression

    TO              shift and go to state 322

    end_value                      shift and go to state 346

state 324

    (186) step_value -> BY . integer_expression
    (103) integer_expression -> . expression
    (99) expression -> . operand0
    (100) expression -> . conditional_expression
    (109) operand0 -> . operand1
    (110) operand0 -> . operand0 operator1 operand1
    (101) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (102) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (122) operand1 -> . operand2
    (123) operand1 -> . operand1 operator2 operand2
    (129) operand2 -> . operand3
    (130) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (134) operand3 -> . monadic_operator operand4
    (135) operand3 -> . operand4
    (136) operand3 -> . integer_literal
    (137) monadic_operator -> . MINUS
    (138) monadic_operator -> . NOT
    (139) operand4 -> . location
    (140) operand4 -> . referenced_location
    (141) operand4 -> . primitive_value
    (87) integer_literal -> . ICONST
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (142) referenced_location -> . ARROW location
    (78) primitive_value -> . literal
    (79) primitive_value -> . value_array_element
    (80) primitive_value -> . value_array_slice
    (81) primitive_value -> . parenthesized_expression
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (82) literal -> . integer_literal
    (83) literal -> . boolean_literal
    (84) literal -> . character_literal
    (85) literal -> . empty_literal
    (86) literal -> . character_string_literal
    (93) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (94) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (96) parenthesized_expression -> . LPAREN expression RPAREN
    (59) identifier -> . ID
    (72) string_location -> . location
    (77) array_location -> . location
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (88) boolean_literal -> . FALSE
    (89) boolean_literal -> . TRUE
    (90) character_literal -> . CCONST
    (91) empty_literal -> . NULL
    (92) character_string_literal -> . SCONST
    (95) array_primitive_value -> . primitive_value
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT

    IF              shift and go to state 105
    MINUS           shift and go to state 100
    NOT             shift and go to state 93
    ICONST          shift and go to state 106
    ARROW           shift and go to state 97
    LPAREN          shift and go to state 94
    ID              shift and go to state 47
    FALSE           shift and go to state 104
    TRUE            shift and go to state 91
    CCONST          shift and go to state 95
    NULL            shift and go to state 79
    SCONST          shift and go to state 103
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    empty_literal                  shift and go to state 75
    operand0                       shift and go to state 77
    character_string_literal       shift and go to state 78
    string_location                shift and go to state 4
    location                       shift and go to state 80
    boolean_literal                shift and go to state 76
    string_element                 shift and go to state 8
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    array_primitive_value          shift and go to state 82
    builtin_name                   shift and go to state 14
    call_action                    shift and go to state 83
    referenced_location            shift and go to state 84
    identifier                     shift and go to state 85
    integer_expression             shift and go to state 347
    procedure_call                 shift and go to state 19
    integer_literal                shift and go to state 86
    builtin_call                   shift and go to state 22
    operand1                       shift and go to state 87
    array_location                 shift and go to state 23
    operand4                       shift and go to state 88
    expression                     shift and go to state 127
    primitive_value                shift and go to state 90
    parenthesized_expression       shift and go to state 92
    dereferenced_reference         shift and go to state 27
    character_literal              shift and go to state 96
    operand3                       shift and go to state 108
    literal                        shift and go to state 98
    value_array_slice              shift and go to state 99
    procedure_name                 shift and go to state 6
    array_slice                    shift and go to state 33
    value_array_element            shift and go to state 101
    operand2                       shift and go to state 81
    conditional_expression         shift and go to state 107
    array_element                  shift and go to state 49
    monadic_operator               shift and go to state 109

state 325

    (168) else_clause -> ELSIF boolean_expression then_clause . else_clause
    (169) else_clause -> ELSIF boolean_expression then_clause .
    (166) else_clause -> . ELSE action_statement_list
    (167) else_clause -> . ELSE empty
    (168) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (169) else_clause -> . ELSIF boolean_expression then_clause

    FI              reduce using rule 169 (else_clause -> ELSIF boolean_expression then_clause .)
    ELSE            shift and go to state 253
    ELSIF           shift and go to state 255

    else_clause                    shift and go to state 348

state 326

    (43) literal_range -> lower_bound COLON upper_bound .

    RPAREN          reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)
    RBRACK          reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)


state 327

    (51) array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .

    LOC             reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    RPAREN          reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    COMMA           reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    ASSIGN          reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    SEMICOL         reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)


state 328

    (56) element_mode -> mode .

    ASSIGN          reduce using rule 56 (element_mode -> mode .)
    SEMICOL         reduce using rule 56 (element_mode -> mode .)
    COMMA           reduce using rule 56 (element_mode -> mode .)
    LOC             reduce using rule 56 (element_mode -> mode .)
    RPAREN          reduce using rule 56 (element_mode -> mode .)


state 329

    (52) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACK          reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)


state 330

    (229) result_spec -> RETURNS LPAREN . mode result_attribute RPAREN
    (230) result_spec -> RETURNS LPAREN . mode RPAREN
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 145
    ID              shift and go to state 47
    INT             shift and go to state 134
    BOOL            shift and go to state 135
    CHAR            shift and go to state 136
    CHARS           shift and go to state 147
    ARRAY           shift and go to state 146

    boolean_mode                   shift and go to state 143
    identifier                     shift and go to state 144
    discrete_mode_name             shift and go to state 151
    array_mode                     shift and go to state 139
    mode                           shift and go to state 349
    discrete_range_mode            shift and go to state 140
    mode_name                      shift and go to state 137
    discrete_mode                  shift and go to state 138
    reference_mode                 shift and go to state 149
    composite_mode                 shift and go to state 150
    integer_mode                   shift and go to state 152
    character_mode                 shift and go to state 153
    string_mode                    shift and go to state 141

state 331

    (218) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . statement_list END
    (220) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 351
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    statement_list                 shift and go to state 350
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 30
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    synonym_statement              shift and go to state 21
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 332

    (221) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 352
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    synonym_statement              shift and go to state 21
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 66
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 333

    (222) procedure_definition -> PROC LPAREN RPAREN SEMICOL END .

    SEMICOL         reduce using rule 222 (procedure_definition -> PROC LPAREN RPAREN SEMICOL END .)


state 334

    (226) parameter_spec -> mode parameter_attribute .

    RPAREN          reduce using rule 226 (parameter_spec -> mode parameter_attribute .)
    COMMA           reduce using rule 226 (parameter_spec -> mode parameter_attribute .)


state 335

    (228) parameter_attribute -> LOC .

    RPAREN          reduce using rule 228 (parameter_attribute -> LOC .)
    COMMA           reduce using rule 228 (parameter_attribute -> LOC .)


state 336

    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL statement_list END
    (216) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 353


state 337

    (217) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . statement_list END
    (219) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 355
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    statement_list                 shift and go to state 354
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    synonym_statement              shift and go to state 21
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 30
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 338

    (223) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 223 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 223 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 339

    (94) value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .

    TIMES           reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDE          reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    PERC            reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUS            reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUS           reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCAT          reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    AND             reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    OR              reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    EQUALS          reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    DIF             reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    GTR             reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    GEQ             reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    LSS             reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    LEQ             reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    IN              reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    SEMICOL         reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    COMMA           reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    LBRACK          reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    COLON           reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    RPAREN          reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    RBRACK          reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    THEN            reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSE            reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSIF           reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    DOWN            reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    BY              reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    TO              reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    FI              reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    WHILE           reduce using rule 94 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)


state 340

    (107) elsif_expression -> elsif_expression ELSIF boolean_expression . then_expression
    (105) then_expression -> . THEN expression

    THEN            shift and go to state 244

    then_expression                shift and go to state 356

state 341

    (102) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .

    RBRACK          reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COLON           reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COMMA           reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    WHILE           reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    SEMICOL         reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    RPAREN          reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    THEN            reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    DOWN            reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    TO              reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    BY              reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSE            reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSIF           reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    FI              reduce using rule 102 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)


state 342

    (108) elsif_expression -> ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 108 (elsif_expression -> ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 108 (elsif_expression -> ELSIF boolean_expression then_expression .)


state 343

    (181) step_enumeration -> loop_counter ASSIGN start_value step_value end_value .

    WHILE           reduce using rule 181 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)
    SEMICOL         reduce using rule 181 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)


state 344

    (180) step_enumeration -> loop_counter ASSIGN start_value step_value DOWN . end_value
    (187) end_value -> . TO discrete_expression

    TO              shift and go to state 322

    end_value                      shift and go to state 357

state 345

    (187) end_value -> TO discrete_expression .

    WHILE           reduce using rule 187 (end_value -> TO discrete_expression .)
    SEMICOL         reduce using rule 187 (end_value -> TO discrete_expression .)


state 346

    (182) step_enumeration -> loop_counter ASSIGN start_value DOWN end_value .

    WHILE           reduce using rule 182 (step_enumeration -> loop_counter ASSIGN start_value DOWN end_value .)
    SEMICOL         reduce using rule 182 (step_enumeration -> loop_counter ASSIGN start_value DOWN end_value .)


state 347

    (186) step_value -> BY integer_expression .

    DOWN            reduce using rule 186 (step_value -> BY integer_expression .)
    TO              reduce using rule 186 (step_value -> BY integer_expression .)


state 348

    (168) else_clause -> ELSIF boolean_expression then_clause else_clause .

    FI              reduce using rule 168 (else_clause -> ELSIF boolean_expression then_clause else_clause .)


state 349

    (229) result_spec -> RETURNS LPAREN mode . result_attribute RPAREN
    (230) result_spec -> RETURNS LPAREN mode . RPAREN
    (231) result_attribute -> . LOC

    RPAREN          shift and go to state 358
    LOC             shift and go to state 359

    result_attribute               shift and go to state 360

state 350

    (218) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 361
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 66
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    synonym_statement              shift and go to state 21
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 351

    (220) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 220 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .)


state 352

    (221) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 221 (procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .)


state 353

    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . statement_list END
    (216) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 363
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    statement_list                 shift and go to state 362
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 30
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    synonym_statement              shift and go to state 21
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 354

    (217) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 364
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    synonym_statement              shift and go to state 21
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 66
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 355

    (219) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .

    SEMICOL         reduce using rule 219 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .)


state 356

    (107) elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 107 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 107 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)


state 357

    (180) step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value .

    WHILE           reduce using rule 180 (step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value .)
    SEMICOL         reduce using rule 180 (step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value .)


state 358

    (230) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMICOL         reduce using rule 230 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 359

    (231) result_attribute -> LOC .

    RPAREN          reduce using rule 231 (result_attribute -> LOC .)


state 360

    (229) result_spec -> RETURNS LPAREN mode result_attribute . RPAREN

    RPAREN          shift and go to state 365


state 361

    (218) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 218 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .)


state 362

    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (145) label_id -> . identifier
    (146) action -> . bracketed_action
    (147) action -> . assignment_action
    (148) action -> . call_action
    (149) action -> . exit_action
    (150) action -> . return_action
    (151) action -> . result_action
    (59) identifier -> . ID
    (152) bracketed_action -> . if_action
    (153) bracketed_action -> . do_action
    (154) assignment_action -> . location assigning_operator expression
    (192) call_action -> . procedure_call
    (193) call_action -> . builtin_call
    (200) exit_action -> . EXIT label_id
    (201) return_action -> . RETURN result
    (202) return_action -> . RETURN
    (203) result_action -> . RESULT result
    (162) if_action -> . IF boolean_expression then_clause else_clause FI
    (163) if_action -> . IF boolean_expression then_clause FI
    (170) do_action -> . DO control_part SEMICOL action_statement_list OD
    (171) do_action -> . DO control_part SEMICOL OD
    (172) do_action -> . DO action_statement_list OD
    (173) do_action -> . DO OD
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location -> . call_action
    (194) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (195) procedure_call -> . procedure_name LPAREN RPAREN
    (205) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (206) builtin_call -> . builtin_name LPAREN RPAREN
    (67) location_name -> . identifier
    (68) dereferenced_reference -> . location ARROW
    (69) string_element -> . string_location LBRACK start_element RBRACK
    (71) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (75) array_element -> . array_location LBRACK expression_list RBRACK
    (76) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (199) procedure_name -> . identifier
    (207) builtin_name -> . NUM
    (208) builtin_name -> . PRED
    (209) builtin_name -> . SUCC
    (210) builtin_name -> . UPPER
    (211) builtin_name -> . LOWER
    (212) builtin_name -> . LENGTH
    (213) builtin_name -> . READ
    (214) builtin_name -> . PRINT
    (72) string_location -> . location
    (77) array_location -> . location

    END             shift and go to state 366
    DCL             shift and go to state 7
    SYN             shift and go to state 31
    TYPE            shift and go to state 35
    ID              shift and go to state 47
    EXIT            shift and go to state 44
    RETURN          shift and go to state 36
    RESULT          shift and go to state 38
    IF              shift and go to state 45
    DO              shift and go to state 39
    NUM             shift and go to state 2
    PRED            shift and go to state 15
    SUCC            shift and go to state 28
    UPPER           shift and go to state 43
    LOWER           shift and go to state 1
    LENGTH          shift and go to state 3
    READ            shift and go to state 34
    PRINT           shift and go to state 12

    string_location                shift and go to state 4
    location                       shift and go to state 5
    procedure_name                 shift and go to state 6
    dereferenced_reference         shift and go to state 27
    string_element                 shift and go to state 8
    if_action                      shift and go to state 9
    string_slice                   shift and go to state 10
    location_name                  shift and go to state 11
    call_action                    shift and go to state 13
    builtin_name                   shift and go to state 14
    do_action                      shift and go to state 17
    identifier                     shift and go to state 18
    procedure_call                 shift and go to state 19
    label_id                       shift and go to state 20
    builtin_call                   shift and go to state 22
    array_location                 shift and go to state 23
    result_action                  shift and go to state 24
    return_action                  shift and go to state 25
    newmode_statement              shift and go to state 26
    exit_action                    shift and go to state 29
    statement                      shift and go to state 66
    procedure_statement            shift and go to state 32
    array_slice                    shift and go to state 33
    action                         shift and go to state 37
    declaration_statement          shift and go to state 40
    bracketed_action               shift and go to state 41
    synonym_statement              shift and go to state 21
    assignment_action              shift and go to state 46
    action_statement               shift and go to state 48
    array_element                  shift and go to state 49

state 363

    (216) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 216 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .)


state 364

    (217) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 217 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .)


state 365

    (229) result_spec -> RETURNS LPAREN mode result_attribute RPAREN .

    SEMICOL         reduce using rule 229 (result_spec -> RETURNS LPAREN mode result_attribute RPAREN .)


state 366

    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 215 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 5 resolved using rule (string_location -> location)
WARNING: rejected rule (array_location -> location) in state 5
WARNING: reduce/reduce conflict in state 80 resolved using rule (string_location -> location)
WARNING: rejected rule (array_location -> location) in state 80
WARNING: reduce/reduce conflict in state 86 resolved using rule (literal -> integer_literal)
WARNING: rejected rule (operand3 -> integer_literal) in state 86
WARNING: reduce/reduce conflict in state 195 resolved using rule (string_location -> location)
WARNING: rejected rule (array_location -> location) in state 195
WARNING: reduce/reduce conflict in state 265 resolved using rule (discrete_mode_name -> identifier)
WARNING: rejected rule (procedure_name -> identifier) in state 265
WARNING: Rule (array_location -> location) is never reduced
WARNING: Rule (operand3 -> integer_literal) is never reduced
