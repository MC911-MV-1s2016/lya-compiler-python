
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '24F31CD3F1D1BA91A2D818BA7A4F2159'
    
_lr_action_items = {'ASSIGN':([10,12,13,16,23,24,25,26,28,30,31,33,35,36,37,39,40,41,42,50,63,66,113,115,118,122,123,],[-54,22,-52,47,-32,-24,-43,-33,-26,-28,-36,-42,-30,-31,-29,68,-25,-27,-23,73,-53,-41,-35,-44,-34,-51,-46,]),'BOOL':([10,12,13,20,34,47,63,65,116,117,],[-54,23,-52,23,23,23,-53,23,23,23,]),'PERC':([52,53,54,57,79,110,112,],[-81,75,-84,-75,-80,-76,75,]),'CHAR':([10,12,13,20,34,47,63,65,116,117,],[-54,26,-52,26,26,26,-53,26,26,26,]),'DCL':([0,2,4,6,7,9,21,44,45,49,],[5,-4,-3,-6,5,-5,-2,-8,-9,-7,]),'TIMES':([52,53,54,57,79,110,112,],[-81,78,-84,-75,-80,-76,78,]),'TYPE':([0,2,4,6,7,9,21,44,45,49,],[3,-4,-3,-6,3,-5,-2,-8,-9,-7,]),'COMMA':([10,11,12,13,14,15,16,17,18,19,20,23,24,25,26,28,30,31,33,35,36,37,40,41,42,50,52,53,54,55,57,58,59,60,63,66,69,70,71,72,74,79,102,103,104,106,108,109,110,111,112,113,115,118,119,120,121,122,123,],[-54,-16,27,-52,43,46,27,-21,48,-11,27,-32,-24,-43,-33,-26,-28,-36,-42,-30,-31,-29,-25,-27,-23,-13,-81,-70,-84,-19,-75,-18,-56,-57,-53,-41,-15,-20,-22,-10,-12,-80,-49,-50,-48,116,-17,-14,-76,-58,-71,-35,-44,-34,-40,-38,-47,-51,-46,]),'LSS':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,85,-57,-80,-76,-58,-71,]),'GTR':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,87,-57,-80,-76,-58,-71,]),'DIF':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,89,-57,-80,-76,-58,-71,]),'SEMICOL':([10,11,14,15,17,18,19,23,24,25,26,28,30,31,33,35,36,37,40,41,42,50,52,53,54,55,57,58,59,60,66,69,70,71,72,74,79,108,109,110,111,112,113,115,118,122,123,],[-54,-16,44,45,-21,49,-11,-32,-24,-43,-33,-26,-28,-36,-42,-30,-31,-29,-25,-27,-23,-13,-81,-70,-84,-19,-75,-18,-56,-57,-41,-15,-20,-22,-10,-12,-80,-17,-14,-76,-58,-71,-35,-44,-34,-51,-46,]),'LEQ':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,91,-57,-80,-76,-58,-71,]),'DIVIDE':([52,53,54,57,79,110,112,],[-81,76,-84,-75,-80,-76,76,]),'SYN':([0,2,4,6,7,9,21,44,45,49,],[1,-4,-3,-6,1,-5,-2,-8,-9,-7,]),'LPAREN':([10,23,24,26,30,31,35,36,37,38,41,102,105,113,118,],[-54,-32,62,-33,-28,-37,-30,-31,-29,67,-27,62,-37,-35,-34,]),'NOT':([22,62,65,67,68,73,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,114,116,],[51,51,51,51,51,51,-79,-78,51,-77,-63,-66,-69,51,-62,-67,-60,-65,-61,-64,-59,-68,51,-72,-74,-73,51,51,]),'COLON':([52,53,54,57,59,60,79,97,98,110,111,112,],[-81,-70,-84,-75,-56,-57,-80,-39,114,-76,-58,-71,]),'REF':([10,12,13,20,34,47,63,117,],[-54,34,-52,34,34,34,-53,34,]),'OR':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,84,-57,-80,-76,-58,-71,]),'ICONST':([22,51,56,61,62,64,65,67,68,73,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,114,116,],[54,-83,54,-82,54,100,54,54,54,54,-79,-78,54,-77,-63,-66,-69,54,-62,-67,-60,-65,-61,-64,-59,-68,54,-72,-74,-73,54,54,]),'IN':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,82,-57,-80,-76,-58,-71,]),'INT':([10,12,13,20,34,47,63,65,116,117,],[-54,36,-52,36,36,36,-53,36,36,36,]),'PLUS':([52,53,54,57,60,79,110,111,112,],[-81,-70,-84,-75,95,-80,-76,95,-71,]),'EQUALS':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,80,-57,-80,-76,-58,-71,]),'GEQ':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,81,-57,-80,-76,-58,-71,]),'LBRACK':([29,32,],[64,65,]),'RBRACK':([23,26,30,35,36,37,41,52,53,54,57,59,60,79,99,100,101,102,103,104,106,110,111,112,113,118,119,120,121,],[-32,-33,-28,-30,-31,-29,-27,-81,-70,-84,-75,-56,-57,-80,-45,-55,115,-49,-50,-48,117,-76,-58,-71,-35,-34,-40,-38,-47,]),'MINUS':([22,52,53,54,57,60,62,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,110,111,112,114,116,],[61,-81,-70,-84,-75,94,61,61,61,61,61,-79,-78,61,-77,-80,-63,-66,-69,61,-62,-67,-60,-65,-61,-64,-59,-68,61,-72,-74,-73,-76,94,-71,61,61,]),'RPAREN':([52,53,54,57,59,60,79,96,107,110,111,112,119,120,],[-81,-70,-84,-75,-56,-57,-80,113,118,-76,-58,-71,-40,-38,]),'ID':([1,3,5,10,12,13,20,27,34,43,46,47,48,63,65,116,117,],[10,10,10,-54,10,-52,10,10,10,10,10,10,10,-53,10,10,10,]),'CHARS':([10,12,13,20,34,47,63,117,],[-54,29,-52,29,29,29,-53,29,]),'AND':([52,53,54,57,59,60,79,110,111,112,],[-81,-70,-84,-75,88,-57,-80,-76,-58,-71,]),'ARRAY':([10,12,13,20,34,47,63,117,],[-54,32,-52,32,32,32,-53,32,]),'$end':([2,4,6,7,8,9,21,44,45,49,],[-4,-3,-6,-1,0,-5,-2,-8,-9,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'operator2':([60,111,],[92,92,]),'discrete_range_mode':([12,20,34,47,65,116,117,],[35,35,35,35,35,35,35,]),'declaration_list':([5,],[18,]),'program':([0,],[8,]),'operator1':([59,],[83,]),'composite_mode':([12,20,34,47,117,],[28,28,28,28,28,]),'membership_operator':([59,],[86,]),'lower_bound':([62,65,67,116,],[98,98,98,98,]),'newmode_statement':([0,7,],[6,6,]),'string_length':([64,],[101,]),'identifier':([1,3,5,12,20,27,34,43,46,47,48,65,116,117,],[13,13,13,31,31,63,31,13,13,31,13,105,105,31,]),'identifier_list':([1,3,5,43,46,48,],[12,16,20,12,16,20,]),'operand2':([22,62,65,67,68,73,83,92,114,116,],[53,53,53,53,53,53,53,112,53,53,]),'declaration_statement':([0,7,],[2,2,]),'string_mode':([12,20,34,47,117,],[33,33,33,33,33,]),'statement':([0,7,],[4,21,]),'character_mode':([12,20,34,47,65,116,117,],[37,37,37,37,37,37,37,]),'operand1':([22,62,65,67,68,73,83,114,116,],[60,60,60,60,60,60,111,60,60,]),'relational_operator':([59,],[90,]),'discrete_mode_name':([12,20,34,47,65,116,117,],[38,38,38,38,38,38,38,]),'mode':([12,20,34,47,117,],[39,50,66,71,122,]),'initialization':([50,],[74,]),'operand3':([22,62,65,67,68,73,77,83,92,114,116,],[57,57,57,57,57,57,110,57,57,57,57,]),'index_mode_list':([65,],[106,]),'statement_list':([0,],[7,]),'expression':([22,62,65,67,68,73,114,116,],[55,97,97,97,55,109,119,97,]),'mode_name':([12,20,34,47,117,],[42,42,42,42,42,]),'newmode_list':([3,],[15,]),'discrete_mode':([12,20,34,47,65,116,117,],[24,24,24,24,102,102,24,]),'array_mode':([12,20,34,47,117,],[25,25,25,25,25,]),'constant_expression':([22,68,],[58,108,]),'literal_range':([62,65,67,116,],[96,103,107,103,]),'operand0':([22,62,65,67,68,73,114,116,],[59,59,59,59,59,59,59,59,]),'integer_mode':([12,20,34,47,65,116,117,],[41,41,41,41,41,41,41,]),'index_mode':([65,116,],[104,121,]),'upper_bound':([114,],[120,]),'integer_literal':([64,],[99,]),'boolean_mode':([12,20,34,47,65,116,117,],[30,30,30,30,30,30,30,]),'arithmetic_additive_operator':([60,111,],[93,93,]),'monadic_operator':([22,62,65,67,68,73,77,83,92,114,116,],[56,56,56,56,56,56,56,56,56,56,56,]),'arithmetic_multiplicative_operator':([53,112,],[77,77,]),'reference_mode':([12,20,34,47,117,],[40,40,40,40,40,]),'operand4':([22,56,62,65,67,68,73,77,83,92,114,116,],[52,79,52,52,52,52,52,52,52,52,52,52,]),'synonym_definition':([1,43,],[11,69,]),'synonym_list':([1,],[14,]),'mode_definition':([3,46,],[17,70,]),'synonym_statement':([0,7,],[9,9,]),'declaration':([5,48,],[19,72,]),'element_mode':([117,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',68),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',69),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',75),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',79),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',83),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',89),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',90),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',97),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',98),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',109),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',115),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',116),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',123),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',124),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',135),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',141),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',142),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',149),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',153),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',154),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',155),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',156),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',162),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',163),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',167),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',171),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',179),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',180),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',184),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',188),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',192),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',196),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',200),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',204),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','parser.py',208),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','parser.py',209),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','parser.py',213),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',217),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','parser.py',221),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',225),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',226),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',233),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',234),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',238),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',244),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',245),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',252),
  ('integer_literal -> ICONST','integer_literal',1,'p_intger_literal','parser.py',258),
  ('expression -> operand0','expression',1,'p_expression','parser.py',264),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',296),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',300),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',304),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',305),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',309),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',310),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',311),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',312),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',313),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',314),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',315),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',316),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',320),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',324),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',328),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',332),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',337),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',338),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',346),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',350),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',354),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',355),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',356),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',360),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',364),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',369),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',370),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',374),
]
