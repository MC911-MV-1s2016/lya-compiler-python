Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     statement -> action_statement
Rule 9     declaration_statement -> DCL declaration_list SEMICOL
Rule 10    synonym_statement -> SYN synonym_list SEMICOL
Rule 11    newmode_statement -> TYPE newmode_list SEMICOL
Rule 12    procedure_statement -> label_id COLON procedure_definition SEMICOL
Rule 13    action_statement -> label_id COLON action SEMICOL
Rule 14    action_statement -> action SEMICOL
Rule 15    declaration_list -> declaration_list COMMA declaration
Rule 16    declaration_list -> declaration
Rule 17    declaration -> identifier_list mode initialization
Rule 18    declaration -> identifier_list mode
Rule 19    initialization -> ASSIGN expression
Rule 20    synonym_list -> synonym_list COMMA synonym_definition
Rule 21    synonym_list -> synonym_definition
Rule 22    synonym_definition -> identifier_list mode ASSIGN constant_expression
Rule 23    synonym_definition -> identifier_list ASSIGN constant_expression
Rule 24    constant_expression -> expression
Rule 25    newmode_list -> newmode_list COMMA mode_definition
Rule 26    newmode_list -> mode_definition
Rule 27    mode_definition -> identifier_list ASSIGN mode
Rule 28    mode -> mode_name
Rule 29    mode -> discrete_mode
Rule 30    mode -> reference_mode
Rule 31    mode -> composite_mode
Rule 32    discrete_mode -> integer_mode
Rule 33    discrete_mode -> boolean_mode
Rule 34    discrete_mode -> character_mode
Rule 35    discrete_mode -> discrete_range_mode
Rule 36    integer_mode -> INT
Rule 37    boolean_mode -> BOOL
Rule 38    character_mode -> CHAR
Rule 39    discrete_range_mode -> identifier LPAREN literal_range RPAREN
Rule 40    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 41    mode_name -> identifier
Rule 42    literal_range -> lower_bound COLON upper_bound
Rule 43    lower_bound -> expression
Rule 44    upper_bound -> expression
Rule 45    reference_mode -> REF mode
Rule 46    composite_mode -> string_mode
Rule 47    composite_mode -> array_mode
Rule 48    string_mode -> CHARS LBRACK string_length RBRACK
Rule 49    string_length -> integer_literal
Rule 50    array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode
Rule 51    index_mode_list -> index_mode_list COMMA index_mode
Rule 52    index_mode_list -> index_mode
Rule 53    index_mode -> discrete_mode
Rule 54    index_mode -> literal_range
Rule 55    element_mode -> mode
Rule 56    identifier_list -> identifier
Rule 57    identifier_list -> identifier_list COMMA identifier
Rule 58    identifier -> ID
Rule 59    location -> location_name
Rule 60    location -> dereferenced_reference
Rule 61    location -> string_element
Rule 62    location -> string_slice
Rule 63    location -> array_element
Rule 64    location -> array_slice
Rule 65    location -> call_action
Rule 66    location_name -> identifier
Rule 67    dereferenced_reference -> location ARROW
Rule 68    string_element -> identifier LBRACK start_element RBRACK
Rule 69    start_element -> integer_expression
Rule 70    string_slice -> identifier LBRACK left_element COLON right_element RBRACK
Rule 71    left_element -> integer_expression
Rule 72    right_element -> integer_expression
Rule 73    array_element -> array_location LBRACK expression_list RBRACK
Rule 74    array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK
Rule 75    array_location -> location
Rule 76    primitive_value -> literal
Rule 77    primitive_value -> value_array_element
Rule 78    primitive_value -> value_array_slice
Rule 79    primitive_value -> parenthesized_expression
Rule 80    literal -> integer_literal
Rule 81    literal -> boolean_literal
Rule 82    literal -> character_literal
Rule 83    literal -> empty_literal
Rule 84    literal -> character_string_literal
Rule 85    integer_literal -> ICONST
Rule 86    boolean_literal -> FALSE
Rule 87    boolean_literal -> TRUE
Rule 88    character_literal -> CCONST
Rule 89    empty_literal -> NULL
Rule 90    character_string_literal -> SCONST
Rule 91    value_array_element -> array_primitive_value LBRACK expression_list RBRACK
Rule 92    value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
Rule 93    array_primitive_value -> primitive_value
Rule 94    parenthesized_expression -> LPAREN expression RPAREN
Rule 95    expression_list -> expression_list COMMA expression
Rule 96    expression_list -> expression
Rule 97    expression -> operand0
Rule 98    expression -> conditional_expression
Rule 99    conditional_expression -> IF boolean_expression then_expression else_expression FI
Rule 100   conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI
Rule 101   integer_expression -> expression
Rule 102   boolean_expression -> expression
Rule 103   then_expression -> THEN expression
Rule 104   else_expression -> ELSE expression
Rule 105   elsif_expression -> elsif_expression ELSIF boolean_expression then_expression
Rule 106   elsif_expression -> ELSIF boolean_expression then_expression
Rule 107   operand0 -> operand1
Rule 108   operand0 -> operand0 operator1 operand1
Rule 109   operator1 -> relational_operator
Rule 110   operator1 -> membership_operator
Rule 111   relational_operator -> AND
Rule 112   relational_operator -> OR
Rule 113   relational_operator -> EQUALS
Rule 114   relational_operator -> DIF
Rule 115   relational_operator -> GTR
Rule 116   relational_operator -> GEQ
Rule 117   relational_operator -> LSS
Rule 118   relational_operator -> LEQ
Rule 119   membership_operator -> IN
Rule 120   operand1 -> operand2
Rule 121   operand1 -> operand1 operator2 operand2
Rule 122   operator2 -> arithmetic_additive_operator
Rule 123   operator2 -> string_concatenation_operator
Rule 124   arithmetic_additive_operator -> PLUS
Rule 125   arithmetic_additive_operator -> MINUS
Rule 126   string_concatenation_operator -> CONCAT
Rule 127   operand2 -> operand3
Rule 128   operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 129   arithmetic_multiplicative_operator -> TIMES
Rule 130   arithmetic_multiplicative_operator -> DIVIDE
Rule 131   arithmetic_multiplicative_operator -> PERC
Rule 132   operand3 -> MINUS operand4
Rule 133   operand3 -> NOT operand4
Rule 134   operand3 -> operand4
Rule 135   operand4 -> location
Rule 136   operand4 -> referenced_location
Rule 137   operand4 -> primitive_value
Rule 138   referenced_location -> ARROW location
Rule 139   action_statement_list -> action_statement_list action_statement
Rule 140   action_statement_list -> action_statement
Rule 141   label_id -> identifier
Rule 142   action -> bracketed_action
Rule 143   action -> assignment_action
Rule 144   action -> call_action
Rule 145   action -> exit_action
Rule 146   action -> return_action
Rule 147   action -> result_action
Rule 148   bracketed_action -> if_action
Rule 149   bracketed_action -> do_action
Rule 150   assignment_action -> location assigning_operator expression
Rule 151   assigning_operator -> ASSIGN
Rule 152   assigning_operator -> PLUSASSIGN
Rule 153   assigning_operator -> MINUSASSIGN
Rule 154   assigning_operator -> TIMESASSIGN
Rule 155   assigning_operator -> DIVIDEASSIGN
Rule 156   assigning_operator -> PERCASSIGN
Rule 157   assigning_operator -> CONCATASSIGN
Rule 158   if_action -> IF boolean_expression then_clause else_clause FI
Rule 159   if_action -> IF boolean_expression then_clause FI
Rule 160   then_clause -> THEN action_statement_list
Rule 161   then_clause -> THEN empty
Rule 162   else_clause -> ELSE action_statement_list
Rule 163   else_clause -> ELSE empty
Rule 164   else_clause -> ELSIF boolean_expression then_clause else_clause
Rule 165   else_clause -> ELSIF boolean_expression then_clause
Rule 166   do_action -> DO control_part SEMICOL action_statement_list OD
Rule 167   do_action -> DO control_part SEMICOL OD
Rule 168   do_action -> DO action_statement_list OD
Rule 169   do_action -> DO OD
Rule 170   control_part -> for_control while_control
Rule 171   control_part -> while_control
Rule 172   control_part -> for_control
Rule 173   for_control -> FOR iteration
Rule 174   iteration -> range_enumeration
Rule 175   iteration -> step_enumeration
Rule 176   step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value
Rule 177   step_enumeration -> loop_counter ASSIGN start_value step_value end_value
Rule 178   step_enumeration -> loop_counter ASSIGN start_value DOWN end_value
Rule 179   step_enumeration -> loop_counter ASSIGN start_value end_value
Rule 180   loop_counter -> identifier
Rule 181   start_value -> discrete_expression
Rule 182   step_value -> BY integer_expression
Rule 183   end_value -> TO discrete_expression
Rule 184   discrete_expression -> expression
Rule 185   range_enumeration -> loop_counter DOWN IN discrete_mode
Rule 186   range_enumeration -> loop_counter IN discrete_mode
Rule 187   while_control -> WHILE boolean_expression
Rule 188   call_action -> procedure_call
Rule 189   call_action -> builtin_call
Rule 190   procedure_call -> procedure_name LPAREN parameter_list RPAREN
Rule 191   procedure_call -> procedure_name LPAREN RPAREN
Rule 192   parameter_list -> parameter_list COMMA parameter
Rule 193   parameter_list -> parameter
Rule 194   parameter -> expression
Rule 195   procedure_name -> identifier
Rule 196   exit_action -> EXIT label_id
Rule 197   return_action -> RETURN result
Rule 198   return_action -> RETURN
Rule 199   result_action -> RESULT result
Rule 200   result -> expression
Rule 201   builtin_call -> builtin_name LPAREN parameter_list RPAREN
Rule 202   builtin_call -> builtin_name LPAREN RPAREN
Rule 203   builtin_name -> NUM
Rule 204   builtin_name -> PRED
Rule 205   builtin_name -> SUCC
Rule 206   builtin_name -> UPPER
Rule 207   builtin_name -> LOWER
Rule 208   builtin_name -> LENGTH
Rule 209   builtin_name -> READ
Rule 210   builtin_name -> PRINT
Rule 211   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
Rule 212   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
Rule 213   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
Rule 214   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END
Rule 215   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END
Rule 216   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END
Rule 217   procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END
Rule 218   procedure_definition -> PROC LPAREN RPAREN SEMICOL END
Rule 219   formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 220   formal_parameter_list -> formal_parameter
Rule 221   formal_parameter -> identifier_list parameter_spec
Rule 222   parameter_spec -> mode parameter_attribute
Rule 223   parameter_spec -> mode
Rule 224   parameter_attribute -> LOC
Rule 225   result_spec -> RETURNS LPAREN mode result_attribute RPAREN
Rule 226   result_spec -> RETURNS LPAREN mode RPAREN
Rule 227   result_attribute -> LOC
Rule 228   empty -> <empty>

Terminals, with rules where they appear

AND                  : 111
ARRAY                : 50
ARROW                : 67 138
ASSIGN               : 19 22 23 27 151 176 177 178 179
BOOL                 : 37
BY                   : 182
CCONST               : 88
CHAR                 : 38
CHARS                : 48
COLON                : 12 13 42 70 74 92
COMMA                : 15 20 25 51 57 95 192 219
CONCAT               : 126
CONCATASSIGN         : 157
DCL                  : 9
DIF                  : 114
DIVIDE               : 130
DIVIDEASSIGN         : 155
DO                   : 166 167 168 169
DOWN                 : 176 178 185
ELSE                 : 104 162 163
ELSIF                : 105 106 164 165
END                  : 211 212 213 214 215 216 217 218
EQUALS               : 113
EXIT                 : 196
FALSE                : 86
FI                   : 99 100 158 159
FOR                  : 173
GEQ                  : 116
GTR                  : 115
ICONST               : 85
ID                   : 58
IF                   : 99 100 158 159
IN                   : 119 185 186
INT                  : 36
LBRACK               : 48 50 68 70 73 74 91 92
LENGTH               : 208
LEQ                  : 118
LOC                  : 224 227
LOWER                : 207
LPAREN               : 39 40 94 190 191 201 202 211 212 213 214 215 216 217 218 225 226
LSS                  : 117
MINUS                : 125 132
MINUSASSIGN          : 153
NOT                  : 133
NULL                 : 89
NUM                  : 203
OD                   : 166 167 168 169
OR                   : 112
PERC                 : 131
PERCASSIGN           : 156
PLUS                 : 124
PLUSASSIGN           : 152
PRED                 : 204
PRINT                : 210
PROC                 : 211 212 213 214 215 216 217 218
RBRACK               : 48 50 68 70 73 74 91 92
READ                 : 209
REF                  : 45
RESULT               : 199
RETURN               : 197 198
RETURNS              : 225 226
RPAREN               : 39 40 94 190 191 201 202 211 212 213 214 215 216 217 218 225 226
SCONST               : 90
SEMICOL              : 9 10 11 12 13 14 166 167 211 212 213 214 215 216 217 218
SUCC                 : 205
SYN                  : 10
THEN                 : 103 160 161
TIMES                : 129
TIMESASSIGN          : 154
TO                   : 183
TRUE                 : 87
TYPE                 : 11
UPPER                : 206
WHILE                : 187
error                : 

Nonterminals, with rules where they appear

action               : 13 14
action_statement     : 8 139 140
action_statement_list : 139 160 162 166 168
arithmetic_additive_operator : 122
arithmetic_multiplicative_operator : 128
array_element        : 63
array_location       : 73 74
array_mode           : 47
array_primitive_value : 91 92
array_slice          : 64
assigning_operator   : 150
assignment_action    : 143
boolean_expression   : 99 100 105 106 158 159 164 165 187
boolean_literal      : 81
boolean_mode         : 33
bracketed_action     : 142
builtin_call         : 189
builtin_name         : 201 202
call_action          : 65 144
character_literal    : 82
character_mode       : 34
character_string_literal : 84
composite_mode       : 31
conditional_expression : 98
constant_expression  : 22 23
control_part         : 166 167
declaration          : 15 16
declaration_list     : 9 15
declaration_statement : 4
dereferenced_reference : 60
discrete_expression  : 181 183
discrete_mode        : 29 40 53 185 186
discrete_range_mode  : 35
do_action            : 149
element_mode         : 50
else_clause          : 158 164
else_expression      : 99 100
elsif_expression     : 100 105
empty                : 161 163
empty_literal        : 83
end_value            : 176 177 178 179
exit_action          : 145
expression           : 19 24 43 44 94 95 96 101 102 103 104 150 184 194 200
expression_list      : 73 91 95
for_control          : 170 172
formal_parameter     : 219 220
formal_parameter_list : 211 212 213 215 219
identifier           : 39 41 56 57 66 68 70 141 180 195
identifier_list      : 17 18 22 23 27 57 221
if_action            : 148
index_mode           : 51 52
index_mode_list      : 50 51
initialization       : 17
integer_expression   : 69 71 72 182
integer_literal      : 49 80
integer_mode         : 32
iteration            : 173
label_id             : 12 13 196
left_element         : 70
literal              : 76
literal_range        : 39 40 54
location             : 67 75 135 138 150
location_name        : 59
loop_counter         : 176 177 178 179 185 186
lower_bound          : 42 74 92
membership_operator  : 110
mode                 : 17 18 22 27 45 55 222 223 225 226
mode_definition      : 25 26
mode_name            : 28
newmode_list         : 11 25
newmode_statement    : 6
operand0             : 97 108
operand1             : 107 108 121
operand2             : 120 121 128
operand3             : 127 128
operand4             : 132 133 134
operator1            : 108
operator2            : 121
parameter            : 192 193
parameter_attribute  : 222
parameter_list       : 190 192 201
parameter_spec       : 221
parenthesized_expression : 79
primitive_value      : 93 137
procedure_call       : 188
procedure_definition : 12
procedure_name       : 190 191
procedure_statement  : 7
program              : 0
range_enumeration    : 174
reference_mode       : 30
referenced_location  : 136
relational_operator  : 109
result               : 197 199
result_action        : 147
result_attribute     : 225
result_spec          : 211 212 214 216
return_action        : 146
right_element        : 70
start_element        : 68
start_value          : 176 177 178 179
statement            : 2 3
statement_list       : 1 2 211 213 214 217
step_enumeration     : 175
step_value           : 176 177
string_concatenation_operator : 123
string_element       : 61
string_length        : 48
string_mode          : 46
string_slice         : 62
synonym_definition   : 20 21
synonym_list         : 10 20
synonym_statement    : 5
then_clause          : 158 159 164 165
then_expression      : 99 100 105 106
upper_bound          : 42 74 92
value_array_element  : 77
value_array_slice    : 78
while_control        : 170 171

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    statement_list                 shift and go to state 23
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 39
    program                        shift and go to state 40
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 1

    (73) array_element -> array_location . LBRACK expression_list RBRACK
    (74) array_slice -> array_location . LBRACK lower_bound COLON upper_bound RBRACK

    LBRACK          shift and go to state 49


state 2

    (5) statement -> synonym_statement .

    END             reduce using rule 5 (statement -> synonym_statement .)
    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    EXIT            reduce using rule 5 (statement -> synonym_statement .)
    RETURN          reduce using rule 5 (statement -> synonym_statement .)
    RESULT          reduce using rule 5 (statement -> synonym_statement .)
    IF              reduce using rule 5 (statement -> synonym_statement .)
    DO              reduce using rule 5 (statement -> synonym_statement .)
    NUM             reduce using rule 5 (statement -> synonym_statement .)
    PRED            reduce using rule 5 (statement -> synonym_statement .)
    SUCC            reduce using rule 5 (statement -> synonym_statement .)
    UPPER           reduce using rule 5 (statement -> synonym_statement .)
    LOWER           reduce using rule 5 (statement -> synonym_statement .)
    LENGTH          reduce using rule 5 (statement -> synonym_statement .)
    READ            reduce using rule 5 (statement -> synonym_statement .)
    PRINT           reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)


state 3

    (166) do_action -> DO . control_part SEMICOL action_statement_list OD
    (167) do_action -> DO . control_part SEMICOL OD
    (168) do_action -> DO . action_statement_list OD
    (169) do_action -> DO . OD
    (170) control_part -> . for_control while_control
    (171) control_part -> . while_control
    (172) control_part -> . for_control
    (139) action_statement_list -> . action_statement_list action_statement
    (140) action_statement_list -> . action_statement
    (173) for_control -> . FOR iteration
    (187) while_control -> . WHILE boolean_expression
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    OD              shift and go to state 57
    FOR             shift and go to state 52
    WHILE           shift and go to state 54
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    dereferenced_reference         shift and go to state 11
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    action                         shift and go to state 25
    builtin_call                   shift and go to state 36
    control_part                   shift and go to state 56
    label_id                       shift and go to state 50
    assignment_action              shift and go to state 43
    string_element                 shift and go to state 9
    procedure_call                 shift and go to state 12
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    action_statement_list          shift and go to state 53
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    string_slice                   shift and go to state 22
    if_action                      shift and go to state 41
    while_control                  shift and go to state 51
    return_action                  shift and go to state 17
    for_control                    shift and go to state 55
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 58

state 4

    (203) builtin_name -> NUM .

    LPAREN          reduce using rule 203 (builtin_name -> NUM .)


state 5

    (199) result_action -> RESULT . result
    (200) result -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 61
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    result                         shift and go to state 75
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 6

    (205) builtin_name -> SUCC .

    LPAREN          reduce using rule 205 (builtin_name -> SUCC .)


state 7

    (207) builtin_name -> LOWER .

    LPAREN          reduce using rule 207 (builtin_name -> LOWER .)


state 8

    (12) procedure_statement -> label_id . COLON procedure_definition SEMICOL
    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 93


state 9

    (61) location -> string_element .

    ARROW           reduce using rule 61 (location -> string_element .)
    ASSIGN          reduce using rule 61 (location -> string_element .)
    PLUSASSIGN      reduce using rule 61 (location -> string_element .)
    MINUSASSIGN     reduce using rule 61 (location -> string_element .)
    TIMESASSIGN     reduce using rule 61 (location -> string_element .)
    DIVIDEASSIGN    reduce using rule 61 (location -> string_element .)
    PERCASSIGN      reduce using rule 61 (location -> string_element .)
    CONCATASSIGN    reduce using rule 61 (location -> string_element .)
    LBRACK          reduce using rule 61 (location -> string_element .)
    TIMES           reduce using rule 61 (location -> string_element .)
    DIVIDE          reduce using rule 61 (location -> string_element .)
    PERC            reduce using rule 61 (location -> string_element .)
    PLUS            reduce using rule 61 (location -> string_element .)
    MINUS           reduce using rule 61 (location -> string_element .)
    CONCAT          reduce using rule 61 (location -> string_element .)
    AND             reduce using rule 61 (location -> string_element .)
    OR              reduce using rule 61 (location -> string_element .)
    EQUALS          reduce using rule 61 (location -> string_element .)
    DIF             reduce using rule 61 (location -> string_element .)
    GTR             reduce using rule 61 (location -> string_element .)
    GEQ             reduce using rule 61 (location -> string_element .)
    LSS             reduce using rule 61 (location -> string_element .)
    LEQ             reduce using rule 61 (location -> string_element .)
    IN              reduce using rule 61 (location -> string_element .)
    RBRACK          reduce using rule 61 (location -> string_element .)
    COMMA           reduce using rule 61 (location -> string_element .)
    DOWN            reduce using rule 61 (location -> string_element .)
    BY              reduce using rule 61 (location -> string_element .)
    TO              reduce using rule 61 (location -> string_element .)
    ELSE            reduce using rule 61 (location -> string_element .)
    ELSIF           reduce using rule 61 (location -> string_element .)
    COLON           reduce using rule 61 (location -> string_element .)
    SEMICOL         reduce using rule 61 (location -> string_element .)
    THEN            reduce using rule 61 (location -> string_element .)
    RPAREN          reduce using rule 61 (location -> string_element .)
    FI              reduce using rule 61 (location -> string_element .)
    WHILE           reduce using rule 61 (location -> string_element .)


state 10

    (210) builtin_name -> PRINT .

    LPAREN          reduce using rule 210 (builtin_name -> PRINT .)


state 11

    (60) location -> dereferenced_reference .

    ARROW           reduce using rule 60 (location -> dereferenced_reference .)
    ASSIGN          reduce using rule 60 (location -> dereferenced_reference .)
    PLUSASSIGN      reduce using rule 60 (location -> dereferenced_reference .)
    MINUSASSIGN     reduce using rule 60 (location -> dereferenced_reference .)
    TIMESASSIGN     reduce using rule 60 (location -> dereferenced_reference .)
    DIVIDEASSIGN    reduce using rule 60 (location -> dereferenced_reference .)
    PERCASSIGN      reduce using rule 60 (location -> dereferenced_reference .)
    CONCATASSIGN    reduce using rule 60 (location -> dereferenced_reference .)
    LBRACK          reduce using rule 60 (location -> dereferenced_reference .)
    TIMES           reduce using rule 60 (location -> dereferenced_reference .)
    DIVIDE          reduce using rule 60 (location -> dereferenced_reference .)
    PERC            reduce using rule 60 (location -> dereferenced_reference .)
    PLUS            reduce using rule 60 (location -> dereferenced_reference .)
    MINUS           reduce using rule 60 (location -> dereferenced_reference .)
    CONCAT          reduce using rule 60 (location -> dereferenced_reference .)
    AND             reduce using rule 60 (location -> dereferenced_reference .)
    OR              reduce using rule 60 (location -> dereferenced_reference .)
    EQUALS          reduce using rule 60 (location -> dereferenced_reference .)
    DIF             reduce using rule 60 (location -> dereferenced_reference .)
    GTR             reduce using rule 60 (location -> dereferenced_reference .)
    GEQ             reduce using rule 60 (location -> dereferenced_reference .)
    LSS             reduce using rule 60 (location -> dereferenced_reference .)
    LEQ             reduce using rule 60 (location -> dereferenced_reference .)
    IN              reduce using rule 60 (location -> dereferenced_reference .)
    RBRACK          reduce using rule 60 (location -> dereferenced_reference .)
    COMMA           reduce using rule 60 (location -> dereferenced_reference .)
    DOWN            reduce using rule 60 (location -> dereferenced_reference .)
    BY              reduce using rule 60 (location -> dereferenced_reference .)
    TO              reduce using rule 60 (location -> dereferenced_reference .)
    ELSE            reduce using rule 60 (location -> dereferenced_reference .)
    ELSIF           reduce using rule 60 (location -> dereferenced_reference .)
    COLON           reduce using rule 60 (location -> dereferenced_reference .)
    SEMICOL         reduce using rule 60 (location -> dereferenced_reference .)
    THEN            reduce using rule 60 (location -> dereferenced_reference .)
    RPAREN          reduce using rule 60 (location -> dereferenced_reference .)
    FI              reduce using rule 60 (location -> dereferenced_reference .)
    WHILE           reduce using rule 60 (location -> dereferenced_reference .)


state 12

    (188) call_action -> procedure_call .

    ARROW           reduce using rule 188 (call_action -> procedure_call .)
    TIMES           reduce using rule 188 (call_action -> procedure_call .)
    DIVIDE          reduce using rule 188 (call_action -> procedure_call .)
    PERC            reduce using rule 188 (call_action -> procedure_call .)
    PLUS            reduce using rule 188 (call_action -> procedure_call .)
    MINUS           reduce using rule 188 (call_action -> procedure_call .)
    CONCAT          reduce using rule 188 (call_action -> procedure_call .)
    AND             reduce using rule 188 (call_action -> procedure_call .)
    OR              reduce using rule 188 (call_action -> procedure_call .)
    EQUALS          reduce using rule 188 (call_action -> procedure_call .)
    DIF             reduce using rule 188 (call_action -> procedure_call .)
    GTR             reduce using rule 188 (call_action -> procedure_call .)
    GEQ             reduce using rule 188 (call_action -> procedure_call .)
    LSS             reduce using rule 188 (call_action -> procedure_call .)
    LEQ             reduce using rule 188 (call_action -> procedure_call .)
    IN              reduce using rule 188 (call_action -> procedure_call .)
    FI              reduce using rule 188 (call_action -> procedure_call .)
    LBRACK          reduce using rule 188 (call_action -> procedure_call .)
    COLON           reduce using rule 188 (call_action -> procedure_call .)
    SEMICOL         reduce using rule 188 (call_action -> procedure_call .)
    THEN            reduce using rule 188 (call_action -> procedure_call .)
    RBRACK          reduce using rule 188 (call_action -> procedure_call .)
    COMMA           reduce using rule 188 (call_action -> procedure_call .)
    RPAREN          reduce using rule 188 (call_action -> procedure_call .)
    DOWN            reduce using rule 188 (call_action -> procedure_call .)
    BY              reduce using rule 188 (call_action -> procedure_call .)
    TO              reduce using rule 188 (call_action -> procedure_call .)
    ELSE            reduce using rule 188 (call_action -> procedure_call .)
    ELSIF           reduce using rule 188 (call_action -> procedure_call .)
    WHILE           reduce using rule 188 (call_action -> procedure_call .)
    ASSIGN          reduce using rule 188 (call_action -> procedure_call .)
    PLUSASSIGN      reduce using rule 188 (call_action -> procedure_call .)
    MINUSASSIGN     reduce using rule 188 (call_action -> procedure_call .)
    TIMESASSIGN     reduce using rule 188 (call_action -> procedure_call .)
    DIVIDEASSIGN    reduce using rule 188 (call_action -> procedure_call .)
    PERCASSIGN      reduce using rule 188 (call_action -> procedure_call .)
    CONCATASSIGN    reduce using rule 188 (call_action -> procedure_call .)


state 13

    (144) action -> call_action .
    (65) location -> call_action .

    SEMICOL         reduce using rule 144 (action -> call_action .)
    ARROW           reduce using rule 65 (location -> call_action .)
    ASSIGN          reduce using rule 65 (location -> call_action .)
    PLUSASSIGN      reduce using rule 65 (location -> call_action .)
    MINUSASSIGN     reduce using rule 65 (location -> call_action .)
    TIMESASSIGN     reduce using rule 65 (location -> call_action .)
    DIVIDEASSIGN    reduce using rule 65 (location -> call_action .)
    PERCASSIGN      reduce using rule 65 (location -> call_action .)
    CONCATASSIGN    reduce using rule 65 (location -> call_action .)
    LBRACK          reduce using rule 65 (location -> call_action .)


state 14

    (64) location -> array_slice .

    ARROW           reduce using rule 64 (location -> array_slice .)
    ASSIGN          reduce using rule 64 (location -> array_slice .)
    PLUSASSIGN      reduce using rule 64 (location -> array_slice .)
    MINUSASSIGN     reduce using rule 64 (location -> array_slice .)
    TIMESASSIGN     reduce using rule 64 (location -> array_slice .)
    DIVIDEASSIGN    reduce using rule 64 (location -> array_slice .)
    PERCASSIGN      reduce using rule 64 (location -> array_slice .)
    CONCATASSIGN    reduce using rule 64 (location -> array_slice .)
    LBRACK          reduce using rule 64 (location -> array_slice .)
    TIMES           reduce using rule 64 (location -> array_slice .)
    DIVIDE          reduce using rule 64 (location -> array_slice .)
    PERC            reduce using rule 64 (location -> array_slice .)
    PLUS            reduce using rule 64 (location -> array_slice .)
    MINUS           reduce using rule 64 (location -> array_slice .)
    CONCAT          reduce using rule 64 (location -> array_slice .)
    AND             reduce using rule 64 (location -> array_slice .)
    OR              reduce using rule 64 (location -> array_slice .)
    EQUALS          reduce using rule 64 (location -> array_slice .)
    DIF             reduce using rule 64 (location -> array_slice .)
    GTR             reduce using rule 64 (location -> array_slice .)
    GEQ             reduce using rule 64 (location -> array_slice .)
    LSS             reduce using rule 64 (location -> array_slice .)
    LEQ             reduce using rule 64 (location -> array_slice .)
    IN              reduce using rule 64 (location -> array_slice .)
    RBRACK          reduce using rule 64 (location -> array_slice .)
    COMMA           reduce using rule 64 (location -> array_slice .)
    DOWN            reduce using rule 64 (location -> array_slice .)
    BY              reduce using rule 64 (location -> array_slice .)
    TO              reduce using rule 64 (location -> array_slice .)
    ELSE            reduce using rule 64 (location -> array_slice .)
    ELSIF           reduce using rule 64 (location -> array_slice .)
    COLON           reduce using rule 64 (location -> array_slice .)
    SEMICOL         reduce using rule 64 (location -> array_slice .)
    THEN            reduce using rule 64 (location -> array_slice .)
    RPAREN          reduce using rule 64 (location -> array_slice .)
    FI              reduce using rule 64 (location -> array_slice .)
    WHILE           reduce using rule 64 (location -> array_slice .)


state 15

    (208) builtin_name -> LENGTH .

    LPAREN          reduce using rule 208 (builtin_name -> LENGTH .)


state 16

    (149) bracketed_action -> do_action .

    SEMICOL         reduce using rule 149 (bracketed_action -> do_action .)


state 17

    (146) action -> return_action .

    SEMICOL         reduce using rule 146 (action -> return_action .)


state 18

    (206) builtin_name -> UPPER .

    LPAREN          reduce using rule 206 (builtin_name -> UPPER .)


state 19

    (142) action -> bracketed_action .

    SEMICOL         reduce using rule 142 (action -> bracketed_action .)


state 20

    (204) builtin_name -> PRED .

    LPAREN          reduce using rule 204 (builtin_name -> PRED .)


state 21

    (4) statement -> declaration_statement .

    END             reduce using rule 4 (statement -> declaration_statement .)
    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    EXIT            reduce using rule 4 (statement -> declaration_statement .)
    RETURN          reduce using rule 4 (statement -> declaration_statement .)
    RESULT          reduce using rule 4 (statement -> declaration_statement .)
    IF              reduce using rule 4 (statement -> declaration_statement .)
    DO              reduce using rule 4 (statement -> declaration_statement .)
    NUM             reduce using rule 4 (statement -> declaration_statement .)
    PRED            reduce using rule 4 (statement -> declaration_statement .)
    SUCC            reduce using rule 4 (statement -> declaration_statement .)
    UPPER           reduce using rule 4 (statement -> declaration_statement .)
    LOWER           reduce using rule 4 (statement -> declaration_statement .)
    LENGTH          reduce using rule 4 (statement -> declaration_statement .)
    READ            reduce using rule 4 (statement -> declaration_statement .)
    PRINT           reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)


state 22

    (62) location -> string_slice .

    ARROW           reduce using rule 62 (location -> string_slice .)
    ASSIGN          reduce using rule 62 (location -> string_slice .)
    PLUSASSIGN      reduce using rule 62 (location -> string_slice .)
    MINUSASSIGN     reduce using rule 62 (location -> string_slice .)
    TIMESASSIGN     reduce using rule 62 (location -> string_slice .)
    DIVIDEASSIGN    reduce using rule 62 (location -> string_slice .)
    PERCASSIGN      reduce using rule 62 (location -> string_slice .)
    CONCATASSIGN    reduce using rule 62 (location -> string_slice .)
    LBRACK          reduce using rule 62 (location -> string_slice .)
    TIMES           reduce using rule 62 (location -> string_slice .)
    DIVIDE          reduce using rule 62 (location -> string_slice .)
    PERC            reduce using rule 62 (location -> string_slice .)
    PLUS            reduce using rule 62 (location -> string_slice .)
    MINUS           reduce using rule 62 (location -> string_slice .)
    CONCAT          reduce using rule 62 (location -> string_slice .)
    AND             reduce using rule 62 (location -> string_slice .)
    OR              reduce using rule 62 (location -> string_slice .)
    EQUALS          reduce using rule 62 (location -> string_slice .)
    DIF             reduce using rule 62 (location -> string_slice .)
    GTR             reduce using rule 62 (location -> string_slice .)
    GEQ             reduce using rule 62 (location -> string_slice .)
    LSS             reduce using rule 62 (location -> string_slice .)
    LEQ             reduce using rule 62 (location -> string_slice .)
    IN              reduce using rule 62 (location -> string_slice .)
    RBRACK          reduce using rule 62 (location -> string_slice .)
    COMMA           reduce using rule 62 (location -> string_slice .)
    DOWN            reduce using rule 62 (location -> string_slice .)
    BY              reduce using rule 62 (location -> string_slice .)
    TO              reduce using rule 62 (location -> string_slice .)
    ELSE            reduce using rule 62 (location -> string_slice .)
    ELSIF           reduce using rule 62 (location -> string_slice .)
    COLON           reduce using rule 62 (location -> string_slice .)
    SEMICOL         reduce using rule 62 (location -> string_slice .)
    THEN            reduce using rule 62 (location -> string_slice .)
    RPAREN          reduce using rule 62 (location -> string_slice .)
    FI              reduce using rule 62 (location -> string_slice .)
    WHILE           reduce using rule 62 (location -> string_slice .)


state 23

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 94
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 24

    (197) return_action -> RETURN . result
    (198) return_action -> RETURN .
    (200) result -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    SEMICOL         reduce using rule 198 (return_action -> RETURN .)
    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 61
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    result                         shift and go to state 95
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 25

    (14) action_statement -> action . SEMICOL

    SEMICOL         shift and go to state 96


state 26

    (63) location -> array_element .

    ARROW           reduce using rule 63 (location -> array_element .)
    ASSIGN          reduce using rule 63 (location -> array_element .)
    PLUSASSIGN      reduce using rule 63 (location -> array_element .)
    MINUSASSIGN     reduce using rule 63 (location -> array_element .)
    TIMESASSIGN     reduce using rule 63 (location -> array_element .)
    DIVIDEASSIGN    reduce using rule 63 (location -> array_element .)
    PERCASSIGN      reduce using rule 63 (location -> array_element .)
    CONCATASSIGN    reduce using rule 63 (location -> array_element .)
    LBRACK          reduce using rule 63 (location -> array_element .)
    TIMES           reduce using rule 63 (location -> array_element .)
    DIVIDE          reduce using rule 63 (location -> array_element .)
    PERC            reduce using rule 63 (location -> array_element .)
    PLUS            reduce using rule 63 (location -> array_element .)
    MINUS           reduce using rule 63 (location -> array_element .)
    CONCAT          reduce using rule 63 (location -> array_element .)
    AND             reduce using rule 63 (location -> array_element .)
    OR              reduce using rule 63 (location -> array_element .)
    EQUALS          reduce using rule 63 (location -> array_element .)
    DIF             reduce using rule 63 (location -> array_element .)
    GTR             reduce using rule 63 (location -> array_element .)
    GEQ             reduce using rule 63 (location -> array_element .)
    LSS             reduce using rule 63 (location -> array_element .)
    LEQ             reduce using rule 63 (location -> array_element .)
    IN              reduce using rule 63 (location -> array_element .)
    RBRACK          reduce using rule 63 (location -> array_element .)
    COMMA           reduce using rule 63 (location -> array_element .)
    DOWN            reduce using rule 63 (location -> array_element .)
    BY              reduce using rule 63 (location -> array_element .)
    TO              reduce using rule 63 (location -> array_element .)
    ELSE            reduce using rule 63 (location -> array_element .)
    ELSIF           reduce using rule 63 (location -> array_element .)
    COLON           reduce using rule 63 (location -> array_element .)
    SEMICOL         reduce using rule 63 (location -> array_element .)
    THEN            reduce using rule 63 (location -> array_element .)
    RPAREN          reduce using rule 63 (location -> array_element .)
    FI              reduce using rule 63 (location -> array_element .)
    WHILE           reduce using rule 63 (location -> array_element .)


state 27

    (7) statement -> procedure_statement .

    END             reduce using rule 7 (statement -> procedure_statement .)
    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    EXIT            reduce using rule 7 (statement -> procedure_statement .)
    RETURN          reduce using rule 7 (statement -> procedure_statement .)
    RESULT          reduce using rule 7 (statement -> procedure_statement .)
    IF              reduce using rule 7 (statement -> procedure_statement .)
    DO              reduce using rule 7 (statement -> procedure_statement .)
    NUM             reduce using rule 7 (statement -> procedure_statement .)
    PRED            reduce using rule 7 (statement -> procedure_statement .)
    SUCC            reduce using rule 7 (statement -> procedure_statement .)
    UPPER           reduce using rule 7 (statement -> procedure_statement .)
    LOWER           reduce using rule 7 (statement -> procedure_statement .)
    LENGTH          reduce using rule 7 (statement -> procedure_statement .)
    READ            reduce using rule 7 (statement -> procedure_statement .)
    PRINT           reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)


state 28

    (6) statement -> newmode_statement .

    END             reduce using rule 6 (statement -> newmode_statement .)
    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    EXIT            reduce using rule 6 (statement -> newmode_statement .)
    RETURN          reduce using rule 6 (statement -> newmode_statement .)
    RESULT          reduce using rule 6 (statement -> newmode_statement .)
    IF              reduce using rule 6 (statement -> newmode_statement .)
    DO              reduce using rule 6 (statement -> newmode_statement .)
    NUM             reduce using rule 6 (statement -> newmode_statement .)
    PRED            reduce using rule 6 (statement -> newmode_statement .)
    SUCC            reduce using rule 6 (statement -> newmode_statement .)
    UPPER           reduce using rule 6 (statement -> newmode_statement .)
    LOWER           reduce using rule 6 (statement -> newmode_statement .)
    LENGTH          reduce using rule 6 (statement -> newmode_statement .)
    READ            reduce using rule 6 (statement -> newmode_statement .)
    PRINT           reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)


state 29

    (196) exit_action -> EXIT . label_id
    (141) label_id -> . identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    identifier                     shift and go to state 98
    label_id                       shift and go to state 97

state 30

    (150) assignment_action -> location . assigning_operator expression
    (67) dereferenced_reference -> location . ARROW
    (75) array_location -> location .
    (151) assigning_operator -> . ASSIGN
    (152) assigning_operator -> . PLUSASSIGN
    (153) assigning_operator -> . MINUSASSIGN
    (154) assigning_operator -> . TIMESASSIGN
    (155) assigning_operator -> . DIVIDEASSIGN
    (156) assigning_operator -> . PERCASSIGN
    (157) assigning_operator -> . CONCATASSIGN

    ARROW           shift and go to state 105
    LBRACK          reduce using rule 75 (array_location -> location .)
    ASSIGN          shift and go to state 99
    PLUSASSIGN      shift and go to state 106
    MINUSASSIGN     shift and go to state 102
    TIMESASSIGN     shift and go to state 104
    DIVIDEASSIGN    shift and go to state 107
    PERCASSIGN      shift and go to state 100
    CONCATASSIGN    shift and go to state 101

    assigning_operator             shift and go to state 103

state 31

    (190) procedure_call -> procedure_name . LPAREN parameter_list RPAREN
    (191) procedure_call -> procedure_name . LPAREN RPAREN

    LPAREN          shift and go to state 108


state 32

    (11) newmode_statement -> TYPE . newmode_list SEMICOL
    (25) newmode_list -> . newmode_list COMMA mode_definition
    (26) newmode_list -> . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    identifier                     shift and go to state 111
    newmode_list                   shift and go to state 112
    identifier_list                shift and go to state 110
    mode_definition                shift and go to state 109

state 33

    (147) action -> result_action .

    SEMICOL         reduce using rule 147 (action -> result_action .)


state 34

    (158) if_action -> IF . boolean_expression then_clause else_clause FI
    (159) if_action -> IF . boolean_expression then_clause FI
    (102) boolean_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 113
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    boolean_expression             shift and go to state 114
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand4                       shift and go to state 62
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    operand0                       shift and go to state 70
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    referenced_location            shift and go to state 84
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 35

    (59) location -> location_name .

    ARROW           reduce using rule 59 (location -> location_name .)
    ASSIGN          reduce using rule 59 (location -> location_name .)
    PLUSASSIGN      reduce using rule 59 (location -> location_name .)
    MINUSASSIGN     reduce using rule 59 (location -> location_name .)
    TIMESASSIGN     reduce using rule 59 (location -> location_name .)
    DIVIDEASSIGN    reduce using rule 59 (location -> location_name .)
    PERCASSIGN      reduce using rule 59 (location -> location_name .)
    CONCATASSIGN    reduce using rule 59 (location -> location_name .)
    LBRACK          reduce using rule 59 (location -> location_name .)
    TIMES           reduce using rule 59 (location -> location_name .)
    DIVIDE          reduce using rule 59 (location -> location_name .)
    PERC            reduce using rule 59 (location -> location_name .)
    PLUS            reduce using rule 59 (location -> location_name .)
    MINUS           reduce using rule 59 (location -> location_name .)
    CONCAT          reduce using rule 59 (location -> location_name .)
    AND             reduce using rule 59 (location -> location_name .)
    OR              reduce using rule 59 (location -> location_name .)
    EQUALS          reduce using rule 59 (location -> location_name .)
    DIF             reduce using rule 59 (location -> location_name .)
    GTR             reduce using rule 59 (location -> location_name .)
    GEQ             reduce using rule 59 (location -> location_name .)
    LSS             reduce using rule 59 (location -> location_name .)
    LEQ             reduce using rule 59 (location -> location_name .)
    IN              reduce using rule 59 (location -> location_name .)
    RBRACK          reduce using rule 59 (location -> location_name .)
    COMMA           reduce using rule 59 (location -> location_name .)
    DOWN            reduce using rule 59 (location -> location_name .)
    BY              reduce using rule 59 (location -> location_name .)
    TO              reduce using rule 59 (location -> location_name .)
    ELSE            reduce using rule 59 (location -> location_name .)
    ELSIF           reduce using rule 59 (location -> location_name .)
    COLON           reduce using rule 59 (location -> location_name .)
    SEMICOL         reduce using rule 59 (location -> location_name .)
    THEN            reduce using rule 59 (location -> location_name .)
    RPAREN          reduce using rule 59 (location -> location_name .)
    FI              reduce using rule 59 (location -> location_name .)
    WHILE           reduce using rule 59 (location -> location_name .)


state 36

    (189) call_action -> builtin_call .

    ARROW           reduce using rule 189 (call_action -> builtin_call .)
    TIMES           reduce using rule 189 (call_action -> builtin_call .)
    DIVIDE          reduce using rule 189 (call_action -> builtin_call .)
    PERC            reduce using rule 189 (call_action -> builtin_call .)
    PLUS            reduce using rule 189 (call_action -> builtin_call .)
    MINUS           reduce using rule 189 (call_action -> builtin_call .)
    CONCAT          reduce using rule 189 (call_action -> builtin_call .)
    AND             reduce using rule 189 (call_action -> builtin_call .)
    OR              reduce using rule 189 (call_action -> builtin_call .)
    EQUALS          reduce using rule 189 (call_action -> builtin_call .)
    DIF             reduce using rule 189 (call_action -> builtin_call .)
    GTR             reduce using rule 189 (call_action -> builtin_call .)
    GEQ             reduce using rule 189 (call_action -> builtin_call .)
    LSS             reduce using rule 189 (call_action -> builtin_call .)
    LEQ             reduce using rule 189 (call_action -> builtin_call .)
    IN              reduce using rule 189 (call_action -> builtin_call .)
    FI              reduce using rule 189 (call_action -> builtin_call .)
    LBRACK          reduce using rule 189 (call_action -> builtin_call .)
    COLON           reduce using rule 189 (call_action -> builtin_call .)
    SEMICOL         reduce using rule 189 (call_action -> builtin_call .)
    THEN            reduce using rule 189 (call_action -> builtin_call .)
    RBRACK          reduce using rule 189 (call_action -> builtin_call .)
    COMMA           reduce using rule 189 (call_action -> builtin_call .)
    RPAREN          reduce using rule 189 (call_action -> builtin_call .)
    DOWN            reduce using rule 189 (call_action -> builtin_call .)
    BY              reduce using rule 189 (call_action -> builtin_call .)
    TO              reduce using rule 189 (call_action -> builtin_call .)
    ELSE            reduce using rule 189 (call_action -> builtin_call .)
    ELSIF           reduce using rule 189 (call_action -> builtin_call .)
    WHILE           reduce using rule 189 (call_action -> builtin_call .)
    ASSIGN          reduce using rule 189 (call_action -> builtin_call .)
    PLUSASSIGN      reduce using rule 189 (call_action -> builtin_call .)
    MINUSASSIGN     reduce using rule 189 (call_action -> builtin_call .)
    TIMESASSIGN     reduce using rule 189 (call_action -> builtin_call .)
    DIVIDEASSIGN    reduce using rule 189 (call_action -> builtin_call .)
    PERCASSIGN      reduce using rule 189 (call_action -> builtin_call .)
    CONCATASSIGN    reduce using rule 189 (call_action -> builtin_call .)


state 37

    (9) declaration_statement -> DCL . declaration_list SEMICOL
    (15) declaration_list -> . declaration_list COMMA declaration
    (16) declaration_list -> . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    declaration_list               shift and go to state 115
    identifier                     shift and go to state 111
    identifier_list                shift and go to state 116
    declaration                    shift and go to state 117

state 38

    (58) identifier -> ID .

    LBRACK          reduce using rule 58 (identifier -> ID .)
    ARROW           reduce using rule 58 (identifier -> ID .)
    TIMES           reduce using rule 58 (identifier -> ID .)
    DIVIDE          reduce using rule 58 (identifier -> ID .)
    PERC            reduce using rule 58 (identifier -> ID .)
    PLUS            reduce using rule 58 (identifier -> ID .)
    MINUS           reduce using rule 58 (identifier -> ID .)
    CONCAT          reduce using rule 58 (identifier -> ID .)
    AND             reduce using rule 58 (identifier -> ID .)
    OR              reduce using rule 58 (identifier -> ID .)
    EQUALS          reduce using rule 58 (identifier -> ID .)
    DIF             reduce using rule 58 (identifier -> ID .)
    GTR             reduce using rule 58 (identifier -> ID .)
    GEQ             reduce using rule 58 (identifier -> ID .)
    LSS             reduce using rule 58 (identifier -> ID .)
    LEQ             reduce using rule 58 (identifier -> ID .)
    IN              reduce using rule 58 (identifier -> ID .)
    COLON           reduce using rule 58 (identifier -> ID .)
    LPAREN          reduce using rule 58 (identifier -> ID .)
    COMMA           reduce using rule 58 (identifier -> ID .)
    REF             reduce using rule 58 (identifier -> ID .)
    ID              reduce using rule 58 (identifier -> ID .)
    INT             reduce using rule 58 (identifier -> ID .)
    BOOL            reduce using rule 58 (identifier -> ID .)
    CHAR            reduce using rule 58 (identifier -> ID .)
    CHARS           reduce using rule 58 (identifier -> ID .)
    ARRAY           reduce using rule 58 (identifier -> ID .)
    RBRACK          reduce using rule 58 (identifier -> ID .)
    RPAREN          reduce using rule 58 (identifier -> ID .)
    SEMICOL         reduce using rule 58 (identifier -> ID .)
    ASSIGN          reduce using rule 58 (identifier -> ID .)
    PLUSASSIGN      reduce using rule 58 (identifier -> ID .)
    MINUSASSIGN     reduce using rule 58 (identifier -> ID .)
    TIMESASSIGN     reduce using rule 58 (identifier -> ID .)
    DIVIDEASSIGN    reduce using rule 58 (identifier -> ID .)
    PERCASSIGN      reduce using rule 58 (identifier -> ID .)
    CONCATASSIGN    reduce using rule 58 (identifier -> ID .)
    LOC             reduce using rule 58 (identifier -> ID .)
    THEN            reduce using rule 58 (identifier -> ID .)
    DOWN            reduce using rule 58 (identifier -> ID .)
    BY              reduce using rule 58 (identifier -> ID .)
    TO              reduce using rule 58 (identifier -> ID .)
    ELSE            reduce using rule 58 (identifier -> ID .)
    ELSIF           reduce using rule 58 (identifier -> ID .)
    FI              reduce using rule 58 (identifier -> ID .)
    WHILE           reduce using rule 58 (identifier -> ID .)


state 39

    (3) statement_list -> statement .

    END             reduce using rule 3 (statement_list -> statement .)
    DCL             reduce using rule 3 (statement_list -> statement .)
    SYN             reduce using rule 3 (statement_list -> statement .)
    TYPE            reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    EXIT            reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    RESULT          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    DO              reduce using rule 3 (statement_list -> statement .)
    NUM             reduce using rule 3 (statement_list -> statement .)
    PRED            reduce using rule 3 (statement_list -> statement .)
    SUCC            reduce using rule 3 (statement_list -> statement .)
    UPPER           reduce using rule 3 (statement_list -> statement .)
    LOWER           reduce using rule 3 (statement_list -> statement .)
    LENGTH          reduce using rule 3 (statement_list -> statement .)
    READ            reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 40

    (0) S' -> program .



state 41

    (148) bracketed_action -> if_action .

    SEMICOL         reduce using rule 148 (bracketed_action -> if_action .)


state 42

    (209) builtin_name -> READ .

    LPAREN          reduce using rule 209 (builtin_name -> READ .)


state 43

    (143) action -> assignment_action .

    SEMICOL         reduce using rule 143 (action -> assignment_action .)


state 44

    (10) synonym_statement -> SYN . synonym_list SEMICOL
    (20) synonym_list -> . synonym_list COMMA synonym_definition
    (21) synonym_list -> . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    synonym_definition             shift and go to state 118
    synonym_list                   shift and go to state 119
    identifier                     shift and go to state 111
    identifier_list                shift and go to state 120

state 45

    (141) label_id -> identifier .
    (66) location_name -> identifier .
    (68) string_element -> identifier . LBRACK start_element RBRACK
    (70) string_slice -> identifier . LBRACK left_element COLON right_element RBRACK
    (195) procedure_name -> identifier .

  ! shift/reduce conflict for LBRACK resolved as shift
    COLON           reduce using rule 141 (label_id -> identifier .)
    ARROW           reduce using rule 66 (location_name -> identifier .)
    ASSIGN          reduce using rule 66 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 66 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 66 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 66 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 66 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 66 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 66 (location_name -> identifier .)
    LBRACK          shift and go to state 121
    LPAREN          reduce using rule 195 (procedure_name -> identifier .)

  ! LBRACK          [ reduce using rule 66 (location_name -> identifier .) ]


state 46

    (145) action -> exit_action .

    SEMICOL         reduce using rule 145 (action -> exit_action .)


state 47

    (201) builtin_call -> builtin_name . LPAREN parameter_list RPAREN
    (202) builtin_call -> builtin_name . LPAREN RPAREN

    LPAREN          shift and go to state 122


state 48

    (8) statement -> action_statement .

    END             reduce using rule 8 (statement -> action_statement .)
    DCL             reduce using rule 8 (statement -> action_statement .)
    SYN             reduce using rule 8 (statement -> action_statement .)
    TYPE            reduce using rule 8 (statement -> action_statement .)
    ID              reduce using rule 8 (statement -> action_statement .)
    EXIT            reduce using rule 8 (statement -> action_statement .)
    RETURN          reduce using rule 8 (statement -> action_statement .)
    RESULT          reduce using rule 8 (statement -> action_statement .)
    IF              reduce using rule 8 (statement -> action_statement .)
    DO              reduce using rule 8 (statement -> action_statement .)
    NUM             reduce using rule 8 (statement -> action_statement .)
    PRED            reduce using rule 8 (statement -> action_statement .)
    SUCC            reduce using rule 8 (statement -> action_statement .)
    UPPER           reduce using rule 8 (statement -> action_statement .)
    LOWER           reduce using rule 8 (statement -> action_statement .)
    LENGTH          reduce using rule 8 (statement -> action_statement .)
    READ            reduce using rule 8 (statement -> action_statement .)
    PRINT           reduce using rule 8 (statement -> action_statement .)
    $end            reduce using rule 8 (statement -> action_statement .)


state 49

    (73) array_element -> array_location LBRACK . expression_list RBRACK
    (74) array_slice -> array_location LBRACK . lower_bound COLON upper_bound RBRACK
    (95) expression_list -> . expression_list COMMA expression
    (96) expression_list -> . expression
    (43) lower_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 123
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    lower_bound                    shift and go to state 124
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    expression_list                shift and go to state 125
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 50

    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 126


state 51

    (171) control_part -> while_control .

    SEMICOL         reduce using rule 171 (control_part -> while_control .)


state 52

    (173) for_control -> FOR . iteration
    (174) iteration -> . range_enumeration
    (175) iteration -> . step_enumeration
    (185) range_enumeration -> . loop_counter DOWN IN discrete_mode
    (186) range_enumeration -> . loop_counter IN discrete_mode
    (176) step_enumeration -> . loop_counter ASSIGN start_value step_value DOWN end_value
    (177) step_enumeration -> . loop_counter ASSIGN start_value step_value end_value
    (178) step_enumeration -> . loop_counter ASSIGN start_value DOWN end_value
    (179) step_enumeration -> . loop_counter ASSIGN start_value end_value
    (180) loop_counter -> . identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    range_enumeration              shift and go to state 127
    iteration                      shift and go to state 128
    step_enumeration               shift and go to state 129
    loop_counter                   shift and go to state 130
    identifier                     shift and go to state 131

state 53

    (168) do_action -> DO action_statement_list . OD
    (139) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    OD              shift and go to state 132
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 50
    string_slice                   shift and go to state 22
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 133

state 54

    (187) while_control -> WHILE . boolean_expression
    (102) boolean_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 113
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    boolean_expression             shift and go to state 134
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 55

    (170) control_part -> for_control . while_control
    (172) control_part -> for_control .
    (187) while_control -> . WHILE boolean_expression

    SEMICOL         reduce using rule 172 (control_part -> for_control .)
    WHILE           shift and go to state 54

    while_control                  shift and go to state 135

state 56

    (166) do_action -> DO control_part . SEMICOL action_statement_list OD
    (167) do_action -> DO control_part . SEMICOL OD

    SEMICOL         shift and go to state 136


state 57

    (169) do_action -> DO OD .

    SEMICOL         reduce using rule 169 (do_action -> DO OD .)


state 58

    (140) action_statement_list -> action_statement .

    OD              reduce using rule 140 (action_statement_list -> action_statement .)
    ID              reduce using rule 140 (action_statement_list -> action_statement .)
    EXIT            reduce using rule 140 (action_statement_list -> action_statement .)
    RETURN          reduce using rule 140 (action_statement_list -> action_statement .)
    RESULT          reduce using rule 140 (action_statement_list -> action_statement .)
    IF              reduce using rule 140 (action_statement_list -> action_statement .)
    DO              reduce using rule 140 (action_statement_list -> action_statement .)
    NUM             reduce using rule 140 (action_statement_list -> action_statement .)
    PRED            reduce using rule 140 (action_statement_list -> action_statement .)
    SUCC            reduce using rule 140 (action_statement_list -> action_statement .)
    UPPER           reduce using rule 140 (action_statement_list -> action_statement .)
    LOWER           reduce using rule 140 (action_statement_list -> action_statement .)
    LENGTH          reduce using rule 140 (action_statement_list -> action_statement .)
    READ            reduce using rule 140 (action_statement_list -> action_statement .)
    PRINT           reduce using rule 140 (action_statement_list -> action_statement .)
    FI              reduce using rule 140 (action_statement_list -> action_statement .)
    ELSE            reduce using rule 140 (action_statement_list -> action_statement .)
    ELSIF           reduce using rule 140 (action_statement_list -> action_statement .)


state 59

    (87) boolean_literal -> TRUE .

    TIMES           reduce using rule 87 (boolean_literal -> TRUE .)
    DIVIDE          reduce using rule 87 (boolean_literal -> TRUE .)
    PERC            reduce using rule 87 (boolean_literal -> TRUE .)
    PLUS            reduce using rule 87 (boolean_literal -> TRUE .)
    MINUS           reduce using rule 87 (boolean_literal -> TRUE .)
    CONCAT          reduce using rule 87 (boolean_literal -> TRUE .)
    AND             reduce using rule 87 (boolean_literal -> TRUE .)
    OR              reduce using rule 87 (boolean_literal -> TRUE .)
    EQUALS          reduce using rule 87 (boolean_literal -> TRUE .)
    DIF             reduce using rule 87 (boolean_literal -> TRUE .)
    GTR             reduce using rule 87 (boolean_literal -> TRUE .)
    GEQ             reduce using rule 87 (boolean_literal -> TRUE .)
    LSS             reduce using rule 87 (boolean_literal -> TRUE .)
    LEQ             reduce using rule 87 (boolean_literal -> TRUE .)
    IN              reduce using rule 87 (boolean_literal -> TRUE .)
    SEMICOL         reduce using rule 87 (boolean_literal -> TRUE .)
    THEN            reduce using rule 87 (boolean_literal -> TRUE .)
    RBRACK          reduce using rule 87 (boolean_literal -> TRUE .)
    COMMA           reduce using rule 87 (boolean_literal -> TRUE .)
    COLON           reduce using rule 87 (boolean_literal -> TRUE .)
    RPAREN          reduce using rule 87 (boolean_literal -> TRUE .)
    DOWN            reduce using rule 87 (boolean_literal -> TRUE .)
    BY              reduce using rule 87 (boolean_literal -> TRUE .)
    TO              reduce using rule 87 (boolean_literal -> TRUE .)
    ELSE            reduce using rule 87 (boolean_literal -> TRUE .)
    ELSIF           reduce using rule 87 (boolean_literal -> TRUE .)
    FI              reduce using rule 87 (boolean_literal -> TRUE .)
    WHILE           reduce using rule 87 (boolean_literal -> TRUE .)
    LBRACK          reduce using rule 87 (boolean_literal -> TRUE .)


state 60

    (76) primitive_value -> literal .

    TIMES           reduce using rule 76 (primitive_value -> literal .)
    DIVIDE          reduce using rule 76 (primitive_value -> literal .)
    PERC            reduce using rule 76 (primitive_value -> literal .)
    PLUS            reduce using rule 76 (primitive_value -> literal .)
    MINUS           reduce using rule 76 (primitive_value -> literal .)
    CONCAT          reduce using rule 76 (primitive_value -> literal .)
    AND             reduce using rule 76 (primitive_value -> literal .)
    OR              reduce using rule 76 (primitive_value -> literal .)
    EQUALS          reduce using rule 76 (primitive_value -> literal .)
    DIF             reduce using rule 76 (primitive_value -> literal .)
    GTR             reduce using rule 76 (primitive_value -> literal .)
    GEQ             reduce using rule 76 (primitive_value -> literal .)
    LSS             reduce using rule 76 (primitive_value -> literal .)
    LEQ             reduce using rule 76 (primitive_value -> literal .)
    IN              reduce using rule 76 (primitive_value -> literal .)
    SEMICOL         reduce using rule 76 (primitive_value -> literal .)
    COMMA           reduce using rule 76 (primitive_value -> literal .)
    LBRACK          reduce using rule 76 (primitive_value -> literal .)
    THEN            reduce using rule 76 (primitive_value -> literal .)
    RBRACK          reduce using rule 76 (primitive_value -> literal .)
    COLON           reduce using rule 76 (primitive_value -> literal .)
    RPAREN          reduce using rule 76 (primitive_value -> literal .)
    DOWN            reduce using rule 76 (primitive_value -> literal .)
    BY              reduce using rule 76 (primitive_value -> literal .)
    TO              reduce using rule 76 (primitive_value -> literal .)
    ELSE            reduce using rule 76 (primitive_value -> literal .)
    ELSIF           reduce using rule 76 (primitive_value -> literal .)
    FI              reduce using rule 76 (primitive_value -> literal .)
    WHILE           reduce using rule 76 (primitive_value -> literal .)


state 61

    (200) result -> expression .

    SEMICOL         reduce using rule 200 (result -> expression .)


state 62

    (134) operand3 -> operand4 .

    TIMES           reduce using rule 134 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 134 (operand3 -> operand4 .)
    PERC            reduce using rule 134 (operand3 -> operand4 .)
    PLUS            reduce using rule 134 (operand3 -> operand4 .)
    MINUS           reduce using rule 134 (operand3 -> operand4 .)
    CONCAT          reduce using rule 134 (operand3 -> operand4 .)
    AND             reduce using rule 134 (operand3 -> operand4 .)
    OR              reduce using rule 134 (operand3 -> operand4 .)
    EQUALS          reduce using rule 134 (operand3 -> operand4 .)
    DIF             reduce using rule 134 (operand3 -> operand4 .)
    GTR             reduce using rule 134 (operand3 -> operand4 .)
    GEQ             reduce using rule 134 (operand3 -> operand4 .)
    LSS             reduce using rule 134 (operand3 -> operand4 .)
    LEQ             reduce using rule 134 (operand3 -> operand4 .)
    IN              reduce using rule 134 (operand3 -> operand4 .)
    SEMICOL         reduce using rule 134 (operand3 -> operand4 .)
    COMMA           reduce using rule 134 (operand3 -> operand4 .)
    RBRACK          reduce using rule 134 (operand3 -> operand4 .)
    THEN            reduce using rule 134 (operand3 -> operand4 .)
    COLON           reduce using rule 134 (operand3 -> operand4 .)
    RPAREN          reduce using rule 134 (operand3 -> operand4 .)
    DOWN            reduce using rule 134 (operand3 -> operand4 .)
    BY              reduce using rule 134 (operand3 -> operand4 .)
    TO              reduce using rule 134 (operand3 -> operand4 .)
    ELSE            reduce using rule 134 (operand3 -> operand4 .)
    ELSIF           reduce using rule 134 (operand3 -> operand4 .)
    FI              reduce using rule 134 (operand3 -> operand4 .)
    WHILE           reduce using rule 134 (operand3 -> operand4 .)


state 63

    (79) primitive_value -> parenthesized_expression .

    TIMES           reduce using rule 79 (primitive_value -> parenthesized_expression .)
    DIVIDE          reduce using rule 79 (primitive_value -> parenthesized_expression .)
    PERC            reduce using rule 79 (primitive_value -> parenthesized_expression .)
    PLUS            reduce using rule 79 (primitive_value -> parenthesized_expression .)
    MINUS           reduce using rule 79 (primitive_value -> parenthesized_expression .)
    CONCAT          reduce using rule 79 (primitive_value -> parenthesized_expression .)
    AND             reduce using rule 79 (primitive_value -> parenthesized_expression .)
    OR              reduce using rule 79 (primitive_value -> parenthesized_expression .)
    EQUALS          reduce using rule 79 (primitive_value -> parenthesized_expression .)
    DIF             reduce using rule 79 (primitive_value -> parenthesized_expression .)
    GTR             reduce using rule 79 (primitive_value -> parenthesized_expression .)
    GEQ             reduce using rule 79 (primitive_value -> parenthesized_expression .)
    LSS             reduce using rule 79 (primitive_value -> parenthesized_expression .)
    LEQ             reduce using rule 79 (primitive_value -> parenthesized_expression .)
    IN              reduce using rule 79 (primitive_value -> parenthesized_expression .)
    SEMICOL         reduce using rule 79 (primitive_value -> parenthesized_expression .)
    COMMA           reduce using rule 79 (primitive_value -> parenthesized_expression .)
    LBRACK          reduce using rule 79 (primitive_value -> parenthesized_expression .)
    THEN            reduce using rule 79 (primitive_value -> parenthesized_expression .)
    RBRACK          reduce using rule 79 (primitive_value -> parenthesized_expression .)
    COLON           reduce using rule 79 (primitive_value -> parenthesized_expression .)
    RPAREN          reduce using rule 79 (primitive_value -> parenthesized_expression .)
    DOWN            reduce using rule 79 (primitive_value -> parenthesized_expression .)
    BY              reduce using rule 79 (primitive_value -> parenthesized_expression .)
    TO              reduce using rule 79 (primitive_value -> parenthesized_expression .)
    ELSE            reduce using rule 79 (primitive_value -> parenthesized_expression .)
    ELSIF           reduce using rule 79 (primitive_value -> parenthesized_expression .)
    FI              reduce using rule 79 (primitive_value -> parenthesized_expression .)
    WHILE           reduce using rule 79 (primitive_value -> parenthesized_expression .)


state 64

    (120) operand1 -> operand2 .
    (128) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (129) arithmetic_multiplicative_operator -> . TIMES
    (130) arithmetic_multiplicative_operator -> . DIVIDE
    (131) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 120 (operand1 -> operand2 .)
    MINUS           reduce using rule 120 (operand1 -> operand2 .)
    CONCAT          reduce using rule 120 (operand1 -> operand2 .)
    AND             reduce using rule 120 (operand1 -> operand2 .)
    OR              reduce using rule 120 (operand1 -> operand2 .)
    EQUALS          reduce using rule 120 (operand1 -> operand2 .)
    DIF             reduce using rule 120 (operand1 -> operand2 .)
    GTR             reduce using rule 120 (operand1 -> operand2 .)
    GEQ             reduce using rule 120 (operand1 -> operand2 .)
    LSS             reduce using rule 120 (operand1 -> operand2 .)
    LEQ             reduce using rule 120 (operand1 -> operand2 .)
    IN              reduce using rule 120 (operand1 -> operand2 .)
    ELSE            reduce using rule 120 (operand1 -> operand2 .)
    ELSIF           reduce using rule 120 (operand1 -> operand2 .)
    RBRACK          reduce using rule 120 (operand1 -> operand2 .)
    COMMA           reduce using rule 120 (operand1 -> operand2 .)
    COLON           reduce using rule 120 (operand1 -> operand2 .)
    THEN            reduce using rule 120 (operand1 -> operand2 .)
    RPAREN          reduce using rule 120 (operand1 -> operand2 .)
    SEMICOL         reduce using rule 120 (operand1 -> operand2 .)
    WHILE           reduce using rule 120 (operand1 -> operand2 .)
    DOWN            reduce using rule 120 (operand1 -> operand2 .)
    BY              reduce using rule 120 (operand1 -> operand2 .)
    TO              reduce using rule 120 (operand1 -> operand2 .)
    FI              reduce using rule 120 (operand1 -> operand2 .)
    TIMES           shift and go to state 140
    DIVIDE          shift and go to state 138
    PERC            shift and go to state 137

    arithmetic_multiplicative_operator shift and go to state 139

state 65

    (85) integer_literal -> ICONST .

    TIMES           reduce using rule 85 (integer_literal -> ICONST .)
    DIVIDE          reduce using rule 85 (integer_literal -> ICONST .)
    PERC            reduce using rule 85 (integer_literal -> ICONST .)
    PLUS            reduce using rule 85 (integer_literal -> ICONST .)
    MINUS           reduce using rule 85 (integer_literal -> ICONST .)
    CONCAT          reduce using rule 85 (integer_literal -> ICONST .)
    AND             reduce using rule 85 (integer_literal -> ICONST .)
    OR              reduce using rule 85 (integer_literal -> ICONST .)
    EQUALS          reduce using rule 85 (integer_literal -> ICONST .)
    DIF             reduce using rule 85 (integer_literal -> ICONST .)
    GTR             reduce using rule 85 (integer_literal -> ICONST .)
    GEQ             reduce using rule 85 (integer_literal -> ICONST .)
    LSS             reduce using rule 85 (integer_literal -> ICONST .)
    LEQ             reduce using rule 85 (integer_literal -> ICONST .)
    IN              reduce using rule 85 (integer_literal -> ICONST .)
    RBRACK          reduce using rule 85 (integer_literal -> ICONST .)
    COMMA           reduce using rule 85 (integer_literal -> ICONST .)
    COLON           reduce using rule 85 (integer_literal -> ICONST .)
    LBRACK          reduce using rule 85 (integer_literal -> ICONST .)
    SEMICOL         reduce using rule 85 (integer_literal -> ICONST .)
    THEN            reduce using rule 85 (integer_literal -> ICONST .)
    RPAREN          reduce using rule 85 (integer_literal -> ICONST .)
    WHILE           reduce using rule 85 (integer_literal -> ICONST .)
    DOWN            reduce using rule 85 (integer_literal -> ICONST .)
    BY              reduce using rule 85 (integer_literal -> ICONST .)
    TO              reduce using rule 85 (integer_literal -> ICONST .)
    ELSE            reduce using rule 85 (integer_literal -> ICONST .)
    ELSIF           reduce using rule 85 (integer_literal -> ICONST .)
    FI              reduce using rule 85 (integer_literal -> ICONST .)


state 66

    (127) operand2 -> operand3 .

    TIMES           reduce using rule 127 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 127 (operand2 -> operand3 .)
    PERC            reduce using rule 127 (operand2 -> operand3 .)
    PLUS            reduce using rule 127 (operand2 -> operand3 .)
    MINUS           reduce using rule 127 (operand2 -> operand3 .)
    CONCAT          reduce using rule 127 (operand2 -> operand3 .)
    AND             reduce using rule 127 (operand2 -> operand3 .)
    OR              reduce using rule 127 (operand2 -> operand3 .)
    EQUALS          reduce using rule 127 (operand2 -> operand3 .)
    DIF             reduce using rule 127 (operand2 -> operand3 .)
    GTR             reduce using rule 127 (operand2 -> operand3 .)
    GEQ             reduce using rule 127 (operand2 -> operand3 .)
    LSS             reduce using rule 127 (operand2 -> operand3 .)
    LEQ             reduce using rule 127 (operand2 -> operand3 .)
    IN              reduce using rule 127 (operand2 -> operand3 .)
    COLON           reduce using rule 127 (operand2 -> operand3 .)
    RPAREN          reduce using rule 127 (operand2 -> operand3 .)
    COMMA           reduce using rule 127 (operand2 -> operand3 .)
    RBRACK          reduce using rule 127 (operand2 -> operand3 .)
    THEN            reduce using rule 127 (operand2 -> operand3 .)
    WHILE           reduce using rule 127 (operand2 -> operand3 .)
    SEMICOL         reduce using rule 127 (operand2 -> operand3 .)
    FI              reduce using rule 127 (operand2 -> operand3 .)
    DOWN            reduce using rule 127 (operand2 -> operand3 .)
    BY              reduce using rule 127 (operand2 -> operand3 .)
    TO              reduce using rule 127 (operand2 -> operand3 .)
    ELSE            reduce using rule 127 (operand2 -> operand3 .)
    ELSIF           reduce using rule 127 (operand2 -> operand3 .)


state 67

    (65) location -> call_action .

    ARROW           reduce using rule 65 (location -> call_action .)
    TIMES           reduce using rule 65 (location -> call_action .)
    DIVIDE          reduce using rule 65 (location -> call_action .)
    PERC            reduce using rule 65 (location -> call_action .)
    PLUS            reduce using rule 65 (location -> call_action .)
    MINUS           reduce using rule 65 (location -> call_action .)
    CONCAT          reduce using rule 65 (location -> call_action .)
    AND             reduce using rule 65 (location -> call_action .)
    OR              reduce using rule 65 (location -> call_action .)
    EQUALS          reduce using rule 65 (location -> call_action .)
    DIF             reduce using rule 65 (location -> call_action .)
    GTR             reduce using rule 65 (location -> call_action .)
    GEQ             reduce using rule 65 (location -> call_action .)
    LSS             reduce using rule 65 (location -> call_action .)
    LEQ             reduce using rule 65 (location -> call_action .)
    IN              reduce using rule 65 (location -> call_action .)
    RBRACK          reduce using rule 65 (location -> call_action .)
    COMMA           reduce using rule 65 (location -> call_action .)
    LBRACK          reduce using rule 65 (location -> call_action .)
    DOWN            reduce using rule 65 (location -> call_action .)
    BY              reduce using rule 65 (location -> call_action .)
    TO              reduce using rule 65 (location -> call_action .)
    ELSE            reduce using rule 65 (location -> call_action .)
    ELSIF           reduce using rule 65 (location -> call_action .)
    COLON           reduce using rule 65 (location -> call_action .)
    SEMICOL         reduce using rule 65 (location -> call_action .)
    THEN            reduce using rule 65 (location -> call_action .)
    RPAREN          reduce using rule 65 (location -> call_action .)
    FI              reduce using rule 65 (location -> call_action .)
    WHILE           reduce using rule 65 (location -> call_action .)


state 68

    (90) character_string_literal -> SCONST .

    TIMES           reduce using rule 90 (character_string_literal -> SCONST .)
    DIVIDE          reduce using rule 90 (character_string_literal -> SCONST .)
    PERC            reduce using rule 90 (character_string_literal -> SCONST .)
    PLUS            reduce using rule 90 (character_string_literal -> SCONST .)
    MINUS           reduce using rule 90 (character_string_literal -> SCONST .)
    CONCAT          reduce using rule 90 (character_string_literal -> SCONST .)
    AND             reduce using rule 90 (character_string_literal -> SCONST .)
    OR              reduce using rule 90 (character_string_literal -> SCONST .)
    EQUALS          reduce using rule 90 (character_string_literal -> SCONST .)
    DIF             reduce using rule 90 (character_string_literal -> SCONST .)
    GTR             reduce using rule 90 (character_string_literal -> SCONST .)
    GEQ             reduce using rule 90 (character_string_literal -> SCONST .)
    LSS             reduce using rule 90 (character_string_literal -> SCONST .)
    LEQ             reduce using rule 90 (character_string_literal -> SCONST .)
    IN              reduce using rule 90 (character_string_literal -> SCONST .)
    RBRACK          reduce using rule 90 (character_string_literal -> SCONST .)
    COMMA           reduce using rule 90 (character_string_literal -> SCONST .)
    COLON           reduce using rule 90 (character_string_literal -> SCONST .)
    LBRACK          reduce using rule 90 (character_string_literal -> SCONST .)
    SEMICOL         reduce using rule 90 (character_string_literal -> SCONST .)
    THEN            reduce using rule 90 (character_string_literal -> SCONST .)
    RPAREN          reduce using rule 90 (character_string_literal -> SCONST .)
    DOWN            reduce using rule 90 (character_string_literal -> SCONST .)
    BY              reduce using rule 90 (character_string_literal -> SCONST .)
    TO              reduce using rule 90 (character_string_literal -> SCONST .)
    ELSE            reduce using rule 90 (character_string_literal -> SCONST .)
    ELSIF           reduce using rule 90 (character_string_literal -> SCONST .)
    FI              reduce using rule 90 (character_string_literal -> SCONST .)
    WHILE           reduce using rule 90 (character_string_literal -> SCONST .)


state 69

    (82) literal -> character_literal .

    TIMES           reduce using rule 82 (literal -> character_literal .)
    DIVIDE          reduce using rule 82 (literal -> character_literal .)
    PERC            reduce using rule 82 (literal -> character_literal .)
    PLUS            reduce using rule 82 (literal -> character_literal .)
    MINUS           reduce using rule 82 (literal -> character_literal .)
    CONCAT          reduce using rule 82 (literal -> character_literal .)
    AND             reduce using rule 82 (literal -> character_literal .)
    OR              reduce using rule 82 (literal -> character_literal .)
    EQUALS          reduce using rule 82 (literal -> character_literal .)
    DIF             reduce using rule 82 (literal -> character_literal .)
    GTR             reduce using rule 82 (literal -> character_literal .)
    GEQ             reduce using rule 82 (literal -> character_literal .)
    LSS             reduce using rule 82 (literal -> character_literal .)
    LEQ             reduce using rule 82 (literal -> character_literal .)
    IN              reduce using rule 82 (literal -> character_literal .)
    RBRACK          reduce using rule 82 (literal -> character_literal .)
    COMMA           reduce using rule 82 (literal -> character_literal .)
    COLON           reduce using rule 82 (literal -> character_literal .)
    LBRACK          reduce using rule 82 (literal -> character_literal .)
    ELSE            reduce using rule 82 (literal -> character_literal .)
    ELSIF           reduce using rule 82 (literal -> character_literal .)
    WHILE           reduce using rule 82 (literal -> character_literal .)
    SEMICOL         reduce using rule 82 (literal -> character_literal .)
    RPAREN          reduce using rule 82 (literal -> character_literal .)
    THEN            reduce using rule 82 (literal -> character_literal .)
    DOWN            reduce using rule 82 (literal -> character_literal .)
    BY              reduce using rule 82 (literal -> character_literal .)
    TO              reduce using rule 82 (literal -> character_literal .)
    FI              reduce using rule 82 (literal -> character_literal .)


state 70

    (97) expression -> operand0 .
    (108) operand0 -> operand0 . operator1 operand1
    (109) operator1 -> . relational_operator
    (110) operator1 -> . membership_operator
    (111) relational_operator -> . AND
    (112) relational_operator -> . OR
    (113) relational_operator -> . EQUALS
    (114) relational_operator -> . DIF
    (115) relational_operator -> . GTR
    (116) relational_operator -> . GEQ
    (117) relational_operator -> . LSS
    (118) relational_operator -> . LEQ
    (119) membership_operator -> . IN

    RBRACK          reduce using rule 97 (expression -> operand0 .)
    COMMA           reduce using rule 97 (expression -> operand0 .)
    COLON           reduce using rule 97 (expression -> operand0 .)
    THEN            reduce using rule 97 (expression -> operand0 .)
    WHILE           reduce using rule 97 (expression -> operand0 .)
    SEMICOL         reduce using rule 97 (expression -> operand0 .)
    RPAREN          reduce using rule 97 (expression -> operand0 .)
    FI              reduce using rule 97 (expression -> operand0 .)
    ELSE            reduce using rule 97 (expression -> operand0 .)
    ELSIF           reduce using rule 97 (expression -> operand0 .)
    DOWN            reduce using rule 97 (expression -> operand0 .)
    BY              reduce using rule 97 (expression -> operand0 .)
    TO              reduce using rule 97 (expression -> operand0 .)
    AND             shift and go to state 147
    OR              shift and go to state 146
    EQUALS          shift and go to state 143
    DIF             shift and go to state 148
    GTR             shift and go to state 144
    GEQ             shift and go to state 151
    LSS             shift and go to state 141
    LEQ             shift and go to state 150
    IN              shift and go to state 145

    operator1                      shift and go to state 149
    relational_operator            shift and go to state 152
    membership_operator            shift and go to state 142

state 71

    (83) literal -> empty_literal .

    TIMES           reduce using rule 83 (literal -> empty_literal .)
    DIVIDE          reduce using rule 83 (literal -> empty_literal .)
    PERC            reduce using rule 83 (literal -> empty_literal .)
    PLUS            reduce using rule 83 (literal -> empty_literal .)
    MINUS           reduce using rule 83 (literal -> empty_literal .)
    CONCAT          reduce using rule 83 (literal -> empty_literal .)
    AND             reduce using rule 83 (literal -> empty_literal .)
    OR              reduce using rule 83 (literal -> empty_literal .)
    EQUALS          reduce using rule 83 (literal -> empty_literal .)
    DIF             reduce using rule 83 (literal -> empty_literal .)
    GTR             reduce using rule 83 (literal -> empty_literal .)
    GEQ             reduce using rule 83 (literal -> empty_literal .)
    LSS             reduce using rule 83 (literal -> empty_literal .)
    LEQ             reduce using rule 83 (literal -> empty_literal .)
    IN              reduce using rule 83 (literal -> empty_literal .)
    RBRACK          reduce using rule 83 (literal -> empty_literal .)
    COMMA           reduce using rule 83 (literal -> empty_literal .)
    COLON           reduce using rule 83 (literal -> empty_literal .)
    LBRACK          reduce using rule 83 (literal -> empty_literal .)
    ELSE            reduce using rule 83 (literal -> empty_literal .)
    ELSIF           reduce using rule 83 (literal -> empty_literal .)
    WHILE           reduce using rule 83 (literal -> empty_literal .)
    SEMICOL         reduce using rule 83 (literal -> empty_literal .)
    RPAREN          reduce using rule 83 (literal -> empty_literal .)
    THEN            reduce using rule 83 (literal -> empty_literal .)
    DOWN            reduce using rule 83 (literal -> empty_literal .)
    BY              reduce using rule 83 (literal -> empty_literal .)
    TO              reduce using rule 83 (literal -> empty_literal .)
    FI              reduce using rule 83 (literal -> empty_literal .)


state 72

    (133) operand3 -> NOT . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    literal                        shift and go to state 60
    array_element                  shift and go to state 26
    operand4                       shift and go to state 153
    array_primitive_value          shift and go to state 77
    parenthesized_expression       shift and go to state 63
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    empty_literal                  shift and go to state 71
    procedure_name                 shift and go to state 31
    identifier                     shift and go to state 91
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    value_array_element            shift and go to state 86
    location                       shift and go to state 87
    boolean_literal                shift and go to state 88
    string_slice                   shift and go to state 22
    array_location                 shift and go to state 1
    character_literal              shift and go to state 69
    primitive_value                shift and go to state 92

state 73

    (98) expression -> conditional_expression .

    RBRACK          reduce using rule 98 (expression -> conditional_expression .)
    COMMA           reduce using rule 98 (expression -> conditional_expression .)
    COLON           reduce using rule 98 (expression -> conditional_expression .)
    THEN            reduce using rule 98 (expression -> conditional_expression .)
    WHILE           reduce using rule 98 (expression -> conditional_expression .)
    SEMICOL         reduce using rule 98 (expression -> conditional_expression .)
    RPAREN          reduce using rule 98 (expression -> conditional_expression .)
    FI              reduce using rule 98 (expression -> conditional_expression .)
    ELSE            reduce using rule 98 (expression -> conditional_expression .)
    ELSIF           reduce using rule 98 (expression -> conditional_expression .)
    DOWN            reduce using rule 98 (expression -> conditional_expression .)
    BY              reduce using rule 98 (expression -> conditional_expression .)
    TO              reduce using rule 98 (expression -> conditional_expression .)


state 74

    (80) literal -> integer_literal .

    TIMES           reduce using rule 80 (literal -> integer_literal .)
    DIVIDE          reduce using rule 80 (literal -> integer_literal .)
    PERC            reduce using rule 80 (literal -> integer_literal .)
    PLUS            reduce using rule 80 (literal -> integer_literal .)
    MINUS           reduce using rule 80 (literal -> integer_literal .)
    CONCAT          reduce using rule 80 (literal -> integer_literal .)
    AND             reduce using rule 80 (literal -> integer_literal .)
    OR              reduce using rule 80 (literal -> integer_literal .)
    EQUALS          reduce using rule 80 (literal -> integer_literal .)
    DIF             reduce using rule 80 (literal -> integer_literal .)
    GTR             reduce using rule 80 (literal -> integer_literal .)
    GEQ             reduce using rule 80 (literal -> integer_literal .)
    LSS             reduce using rule 80 (literal -> integer_literal .)
    LEQ             reduce using rule 80 (literal -> integer_literal .)
    IN              reduce using rule 80 (literal -> integer_literal .)
    RBRACK          reduce using rule 80 (literal -> integer_literal .)
    COMMA           reduce using rule 80 (literal -> integer_literal .)
    COLON           reduce using rule 80 (literal -> integer_literal .)
    LBRACK          reduce using rule 80 (literal -> integer_literal .)
    ELSE            reduce using rule 80 (literal -> integer_literal .)
    ELSIF           reduce using rule 80 (literal -> integer_literal .)
    WHILE           reduce using rule 80 (literal -> integer_literal .)
    SEMICOL         reduce using rule 80 (literal -> integer_literal .)
    RPAREN          reduce using rule 80 (literal -> integer_literal .)
    THEN            reduce using rule 80 (literal -> integer_literal .)
    DOWN            reduce using rule 80 (literal -> integer_literal .)
    BY              reduce using rule 80 (literal -> integer_literal .)
    TO              reduce using rule 80 (literal -> integer_literal .)
    FI              reduce using rule 80 (literal -> integer_literal .)


state 75

    (199) result_action -> RESULT result .

    SEMICOL         reduce using rule 199 (result_action -> RESULT result .)


state 76

    (94) parenthesized_expression -> LPAREN . expression RPAREN
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 154
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 77

    (91) value_array_element -> array_primitive_value . LBRACK expression_list RBRACK
    (92) value_array_slice -> array_primitive_value . LBRACK lower_bound COLON upper_bound RBRACK

    LBRACK          shift and go to state 155


state 78

    (86) boolean_literal -> FALSE .

    TIMES           reduce using rule 86 (boolean_literal -> FALSE .)
    DIVIDE          reduce using rule 86 (boolean_literal -> FALSE .)
    PERC            reduce using rule 86 (boolean_literal -> FALSE .)
    PLUS            reduce using rule 86 (boolean_literal -> FALSE .)
    MINUS           reduce using rule 86 (boolean_literal -> FALSE .)
    CONCAT          reduce using rule 86 (boolean_literal -> FALSE .)
    AND             reduce using rule 86 (boolean_literal -> FALSE .)
    OR              reduce using rule 86 (boolean_literal -> FALSE .)
    EQUALS          reduce using rule 86 (boolean_literal -> FALSE .)
    DIF             reduce using rule 86 (boolean_literal -> FALSE .)
    GTR             reduce using rule 86 (boolean_literal -> FALSE .)
    GEQ             reduce using rule 86 (boolean_literal -> FALSE .)
    LSS             reduce using rule 86 (boolean_literal -> FALSE .)
    LEQ             reduce using rule 86 (boolean_literal -> FALSE .)
    IN              reduce using rule 86 (boolean_literal -> FALSE .)
    SEMICOL         reduce using rule 86 (boolean_literal -> FALSE .)
    THEN            reduce using rule 86 (boolean_literal -> FALSE .)
    RBRACK          reduce using rule 86 (boolean_literal -> FALSE .)
    COMMA           reduce using rule 86 (boolean_literal -> FALSE .)
    COLON           reduce using rule 86 (boolean_literal -> FALSE .)
    RPAREN          reduce using rule 86 (boolean_literal -> FALSE .)
    DOWN            reduce using rule 86 (boolean_literal -> FALSE .)
    BY              reduce using rule 86 (boolean_literal -> FALSE .)
    TO              reduce using rule 86 (boolean_literal -> FALSE .)
    ELSE            reduce using rule 86 (boolean_literal -> FALSE .)
    ELSIF           reduce using rule 86 (boolean_literal -> FALSE .)
    FI              reduce using rule 86 (boolean_literal -> FALSE .)
    WHILE           reduce using rule 86 (boolean_literal -> FALSE .)
    LBRACK          reduce using rule 86 (boolean_literal -> FALSE .)


state 79

    (84) literal -> character_string_literal .

    TIMES           reduce using rule 84 (literal -> character_string_literal .)
    DIVIDE          reduce using rule 84 (literal -> character_string_literal .)
    PERC            reduce using rule 84 (literal -> character_string_literal .)
    PLUS            reduce using rule 84 (literal -> character_string_literal .)
    MINUS           reduce using rule 84 (literal -> character_string_literal .)
    CONCAT          reduce using rule 84 (literal -> character_string_literal .)
    AND             reduce using rule 84 (literal -> character_string_literal .)
    OR              reduce using rule 84 (literal -> character_string_literal .)
    EQUALS          reduce using rule 84 (literal -> character_string_literal .)
    DIF             reduce using rule 84 (literal -> character_string_literal .)
    GTR             reduce using rule 84 (literal -> character_string_literal .)
    GEQ             reduce using rule 84 (literal -> character_string_literal .)
    LSS             reduce using rule 84 (literal -> character_string_literal .)
    LEQ             reduce using rule 84 (literal -> character_string_literal .)
    IN              reduce using rule 84 (literal -> character_string_literal .)
    RBRACK          reduce using rule 84 (literal -> character_string_literal .)
    COMMA           reduce using rule 84 (literal -> character_string_literal .)
    COLON           reduce using rule 84 (literal -> character_string_literal .)
    LBRACK          reduce using rule 84 (literal -> character_string_literal .)
    ELSE            reduce using rule 84 (literal -> character_string_literal .)
    ELSIF           reduce using rule 84 (literal -> character_string_literal .)
    WHILE           reduce using rule 84 (literal -> character_string_literal .)
    SEMICOL         reduce using rule 84 (literal -> character_string_literal .)
    RPAREN          reduce using rule 84 (literal -> character_string_literal .)
    THEN            reduce using rule 84 (literal -> character_string_literal .)
    DOWN            reduce using rule 84 (literal -> character_string_literal .)
    BY              reduce using rule 84 (literal -> character_string_literal .)
    TO              reduce using rule 84 (literal -> character_string_literal .)
    FI              reduce using rule 84 (literal -> character_string_literal .)


state 80

    (78) primitive_value -> value_array_slice .

    TIMES           reduce using rule 78 (primitive_value -> value_array_slice .)
    DIVIDE          reduce using rule 78 (primitive_value -> value_array_slice .)
    PERC            reduce using rule 78 (primitive_value -> value_array_slice .)
    PLUS            reduce using rule 78 (primitive_value -> value_array_slice .)
    MINUS           reduce using rule 78 (primitive_value -> value_array_slice .)
    CONCAT          reduce using rule 78 (primitive_value -> value_array_slice .)
    AND             reduce using rule 78 (primitive_value -> value_array_slice .)
    OR              reduce using rule 78 (primitive_value -> value_array_slice .)
    EQUALS          reduce using rule 78 (primitive_value -> value_array_slice .)
    DIF             reduce using rule 78 (primitive_value -> value_array_slice .)
    GTR             reduce using rule 78 (primitive_value -> value_array_slice .)
    GEQ             reduce using rule 78 (primitive_value -> value_array_slice .)
    LSS             reduce using rule 78 (primitive_value -> value_array_slice .)
    LEQ             reduce using rule 78 (primitive_value -> value_array_slice .)
    IN              reduce using rule 78 (primitive_value -> value_array_slice .)
    SEMICOL         reduce using rule 78 (primitive_value -> value_array_slice .)
    COMMA           reduce using rule 78 (primitive_value -> value_array_slice .)
    LBRACK          reduce using rule 78 (primitive_value -> value_array_slice .)
    THEN            reduce using rule 78 (primitive_value -> value_array_slice .)
    RBRACK          reduce using rule 78 (primitive_value -> value_array_slice .)
    COLON           reduce using rule 78 (primitive_value -> value_array_slice .)
    RPAREN          reduce using rule 78 (primitive_value -> value_array_slice .)
    DOWN            reduce using rule 78 (primitive_value -> value_array_slice .)
    BY              reduce using rule 78 (primitive_value -> value_array_slice .)
    TO              reduce using rule 78 (primitive_value -> value_array_slice .)
    ELSE            reduce using rule 78 (primitive_value -> value_array_slice .)
    ELSIF           reduce using rule 78 (primitive_value -> value_array_slice .)
    FI              reduce using rule 78 (primitive_value -> value_array_slice .)
    WHILE           reduce using rule 78 (primitive_value -> value_array_slice .)


state 81

    (88) character_literal -> CCONST .

    TIMES           reduce using rule 88 (character_literal -> CCONST .)
    DIVIDE          reduce using rule 88 (character_literal -> CCONST .)
    PERC            reduce using rule 88 (character_literal -> CCONST .)
    PLUS            reduce using rule 88 (character_literal -> CCONST .)
    MINUS           reduce using rule 88 (character_literal -> CCONST .)
    CONCAT          reduce using rule 88 (character_literal -> CCONST .)
    AND             reduce using rule 88 (character_literal -> CCONST .)
    OR              reduce using rule 88 (character_literal -> CCONST .)
    EQUALS          reduce using rule 88 (character_literal -> CCONST .)
    DIF             reduce using rule 88 (character_literal -> CCONST .)
    GTR             reduce using rule 88 (character_literal -> CCONST .)
    GEQ             reduce using rule 88 (character_literal -> CCONST .)
    LSS             reduce using rule 88 (character_literal -> CCONST .)
    LEQ             reduce using rule 88 (character_literal -> CCONST .)
    IN              reduce using rule 88 (character_literal -> CCONST .)
    RBRACK          reduce using rule 88 (character_literal -> CCONST .)
    COLON           reduce using rule 88 (character_literal -> CCONST .)
    LBRACK          reduce using rule 88 (character_literal -> CCONST .)
    SEMICOL         reduce using rule 88 (character_literal -> CCONST .)
    THEN            reduce using rule 88 (character_literal -> CCONST .)
    COMMA           reduce using rule 88 (character_literal -> CCONST .)
    RPAREN          reduce using rule 88 (character_literal -> CCONST .)
    ELSE            reduce using rule 88 (character_literal -> CCONST .)
    ELSIF           reduce using rule 88 (character_literal -> CCONST .)
    DOWN            reduce using rule 88 (character_literal -> CCONST .)
    BY              reduce using rule 88 (character_literal -> CCONST .)
    TO              reduce using rule 88 (character_literal -> CCONST .)
    FI              reduce using rule 88 (character_literal -> CCONST .)
    WHILE           reduce using rule 88 (character_literal -> CCONST .)


state 82

    (99) conditional_expression -> IF . boolean_expression then_expression else_expression FI
    (100) conditional_expression -> IF . boolean_expression then_expression elsif_expression else_expression FI
    (102) boolean_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 113
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    boolean_expression             shift and go to state 156
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 83

    (132) operand3 -> MINUS . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    literal                        shift and go to state 60
    array_element                  shift and go to state 26
    operand4                       shift and go to state 157
    array_primitive_value          shift and go to state 77
    parenthesized_expression       shift and go to state 63
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    empty_literal                  shift and go to state 71
    procedure_name                 shift and go to state 31
    identifier                     shift and go to state 91
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    value_array_element            shift and go to state 86
    location                       shift and go to state 87
    boolean_literal                shift and go to state 88
    string_slice                   shift and go to state 22
    array_location                 shift and go to state 1
    character_literal              shift and go to state 69
    primitive_value                shift and go to state 92

state 84

    (136) operand4 -> referenced_location .

    TIMES           reduce using rule 136 (operand4 -> referenced_location .)
    DIVIDE          reduce using rule 136 (operand4 -> referenced_location .)
    PERC            reduce using rule 136 (operand4 -> referenced_location .)
    PLUS            reduce using rule 136 (operand4 -> referenced_location .)
    MINUS           reduce using rule 136 (operand4 -> referenced_location .)
    CONCAT          reduce using rule 136 (operand4 -> referenced_location .)
    AND             reduce using rule 136 (operand4 -> referenced_location .)
    OR              reduce using rule 136 (operand4 -> referenced_location .)
    EQUALS          reduce using rule 136 (operand4 -> referenced_location .)
    DIF             reduce using rule 136 (operand4 -> referenced_location .)
    GTR             reduce using rule 136 (operand4 -> referenced_location .)
    GEQ             reduce using rule 136 (operand4 -> referenced_location .)
    LSS             reduce using rule 136 (operand4 -> referenced_location .)
    LEQ             reduce using rule 136 (operand4 -> referenced_location .)
    IN              reduce using rule 136 (operand4 -> referenced_location .)
    RPAREN          reduce using rule 136 (operand4 -> referenced_location .)
    COMMA           reduce using rule 136 (operand4 -> referenced_location .)
    RBRACK          reduce using rule 136 (operand4 -> referenced_location .)
    COLON           reduce using rule 136 (operand4 -> referenced_location .)
    THEN            reduce using rule 136 (operand4 -> referenced_location .)
    SEMICOL         reduce using rule 136 (operand4 -> referenced_location .)
    DOWN            reduce using rule 136 (operand4 -> referenced_location .)
    BY              reduce using rule 136 (operand4 -> referenced_location .)
    TO              reduce using rule 136 (operand4 -> referenced_location .)
    ELSE            reduce using rule 136 (operand4 -> referenced_location .)
    ELSIF           reduce using rule 136 (operand4 -> referenced_location .)
    FI              reduce using rule 136 (operand4 -> referenced_location .)
    WHILE           reduce using rule 136 (operand4 -> referenced_location .)


state 85

    (89) empty_literal -> NULL .

    TIMES           reduce using rule 89 (empty_literal -> NULL .)
    DIVIDE          reduce using rule 89 (empty_literal -> NULL .)
    PERC            reduce using rule 89 (empty_literal -> NULL .)
    PLUS            reduce using rule 89 (empty_literal -> NULL .)
    MINUS           reduce using rule 89 (empty_literal -> NULL .)
    CONCAT          reduce using rule 89 (empty_literal -> NULL .)
    AND             reduce using rule 89 (empty_literal -> NULL .)
    OR              reduce using rule 89 (empty_literal -> NULL .)
    EQUALS          reduce using rule 89 (empty_literal -> NULL .)
    DIF             reduce using rule 89 (empty_literal -> NULL .)
    GTR             reduce using rule 89 (empty_literal -> NULL .)
    GEQ             reduce using rule 89 (empty_literal -> NULL .)
    LSS             reduce using rule 89 (empty_literal -> NULL .)
    LEQ             reduce using rule 89 (empty_literal -> NULL .)
    IN              reduce using rule 89 (empty_literal -> NULL .)
    FI              reduce using rule 89 (empty_literal -> NULL .)
    LBRACK          reduce using rule 89 (empty_literal -> NULL .)
    DOWN            reduce using rule 89 (empty_literal -> NULL .)
    BY              reduce using rule 89 (empty_literal -> NULL .)
    TO              reduce using rule 89 (empty_literal -> NULL .)
    SEMICOL         reduce using rule 89 (empty_literal -> NULL .)
    THEN            reduce using rule 89 (empty_literal -> NULL .)
    RBRACK          reduce using rule 89 (empty_literal -> NULL .)
    COMMA           reduce using rule 89 (empty_literal -> NULL .)
    COLON           reduce using rule 89 (empty_literal -> NULL .)
    RPAREN          reduce using rule 89 (empty_literal -> NULL .)
    ELSE            reduce using rule 89 (empty_literal -> NULL .)
    ELSIF           reduce using rule 89 (empty_literal -> NULL .)
    WHILE           reduce using rule 89 (empty_literal -> NULL .)


state 86

    (77) primitive_value -> value_array_element .

    TIMES           reduce using rule 77 (primitive_value -> value_array_element .)
    DIVIDE          reduce using rule 77 (primitive_value -> value_array_element .)
    PERC            reduce using rule 77 (primitive_value -> value_array_element .)
    PLUS            reduce using rule 77 (primitive_value -> value_array_element .)
    MINUS           reduce using rule 77 (primitive_value -> value_array_element .)
    CONCAT          reduce using rule 77 (primitive_value -> value_array_element .)
    AND             reduce using rule 77 (primitive_value -> value_array_element .)
    OR              reduce using rule 77 (primitive_value -> value_array_element .)
    EQUALS          reduce using rule 77 (primitive_value -> value_array_element .)
    DIF             reduce using rule 77 (primitive_value -> value_array_element .)
    GTR             reduce using rule 77 (primitive_value -> value_array_element .)
    GEQ             reduce using rule 77 (primitive_value -> value_array_element .)
    LSS             reduce using rule 77 (primitive_value -> value_array_element .)
    LEQ             reduce using rule 77 (primitive_value -> value_array_element .)
    IN              reduce using rule 77 (primitive_value -> value_array_element .)
    SEMICOL         reduce using rule 77 (primitive_value -> value_array_element .)
    COMMA           reduce using rule 77 (primitive_value -> value_array_element .)
    LBRACK          reduce using rule 77 (primitive_value -> value_array_element .)
    THEN            reduce using rule 77 (primitive_value -> value_array_element .)
    RBRACK          reduce using rule 77 (primitive_value -> value_array_element .)
    COLON           reduce using rule 77 (primitive_value -> value_array_element .)
    RPAREN          reduce using rule 77 (primitive_value -> value_array_element .)
    DOWN            reduce using rule 77 (primitive_value -> value_array_element .)
    BY              reduce using rule 77 (primitive_value -> value_array_element .)
    TO              reduce using rule 77 (primitive_value -> value_array_element .)
    ELSE            reduce using rule 77 (primitive_value -> value_array_element .)
    ELSIF           reduce using rule 77 (primitive_value -> value_array_element .)
    FI              reduce using rule 77 (primitive_value -> value_array_element .)
    WHILE           reduce using rule 77 (primitive_value -> value_array_element .)


state 87

    (135) operand4 -> location .
    (67) dereferenced_reference -> location . ARROW
    (75) array_location -> location .

    TIMES           reduce using rule 135 (operand4 -> location .)
    DIVIDE          reduce using rule 135 (operand4 -> location .)
    PERC            reduce using rule 135 (operand4 -> location .)
    PLUS            reduce using rule 135 (operand4 -> location .)
    MINUS           reduce using rule 135 (operand4 -> location .)
    CONCAT          reduce using rule 135 (operand4 -> location .)
    AND             reduce using rule 135 (operand4 -> location .)
    OR              reduce using rule 135 (operand4 -> location .)
    EQUALS          reduce using rule 135 (operand4 -> location .)
    DIF             reduce using rule 135 (operand4 -> location .)
    GTR             reduce using rule 135 (operand4 -> location .)
    GEQ             reduce using rule 135 (operand4 -> location .)
    LSS             reduce using rule 135 (operand4 -> location .)
    LEQ             reduce using rule 135 (operand4 -> location .)
    IN              reduce using rule 135 (operand4 -> location .)
    RPAREN          reduce using rule 135 (operand4 -> location .)
    COMMA           reduce using rule 135 (operand4 -> location .)
    RBRACK          reduce using rule 135 (operand4 -> location .)
    COLON           reduce using rule 135 (operand4 -> location .)
    THEN            reduce using rule 135 (operand4 -> location .)
    SEMICOL         reduce using rule 135 (operand4 -> location .)
    DOWN            reduce using rule 135 (operand4 -> location .)
    BY              reduce using rule 135 (operand4 -> location .)
    TO              reduce using rule 135 (operand4 -> location .)
    ELSE            reduce using rule 135 (operand4 -> location .)
    ELSIF           reduce using rule 135 (operand4 -> location .)
    FI              reduce using rule 135 (operand4 -> location .)
    WHILE           reduce using rule 135 (operand4 -> location .)
    ARROW           shift and go to state 105
    LBRACK          reduce using rule 75 (array_location -> location .)


state 88

    (81) literal -> boolean_literal .

    TIMES           reduce using rule 81 (literal -> boolean_literal .)
    DIVIDE          reduce using rule 81 (literal -> boolean_literal .)
    PERC            reduce using rule 81 (literal -> boolean_literal .)
    PLUS            reduce using rule 81 (literal -> boolean_literal .)
    MINUS           reduce using rule 81 (literal -> boolean_literal .)
    CONCAT          reduce using rule 81 (literal -> boolean_literal .)
    AND             reduce using rule 81 (literal -> boolean_literal .)
    OR              reduce using rule 81 (literal -> boolean_literal .)
    EQUALS          reduce using rule 81 (literal -> boolean_literal .)
    DIF             reduce using rule 81 (literal -> boolean_literal .)
    GTR             reduce using rule 81 (literal -> boolean_literal .)
    GEQ             reduce using rule 81 (literal -> boolean_literal .)
    LSS             reduce using rule 81 (literal -> boolean_literal .)
    LEQ             reduce using rule 81 (literal -> boolean_literal .)
    IN              reduce using rule 81 (literal -> boolean_literal .)
    RBRACK          reduce using rule 81 (literal -> boolean_literal .)
    COMMA           reduce using rule 81 (literal -> boolean_literal .)
    COLON           reduce using rule 81 (literal -> boolean_literal .)
    LBRACK          reduce using rule 81 (literal -> boolean_literal .)
    ELSE            reduce using rule 81 (literal -> boolean_literal .)
    ELSIF           reduce using rule 81 (literal -> boolean_literal .)
    WHILE           reduce using rule 81 (literal -> boolean_literal .)
    SEMICOL         reduce using rule 81 (literal -> boolean_literal .)
    RPAREN          reduce using rule 81 (literal -> boolean_literal .)
    THEN            reduce using rule 81 (literal -> boolean_literal .)
    DOWN            reduce using rule 81 (literal -> boolean_literal .)
    BY              reduce using rule 81 (literal -> boolean_literal .)
    TO              reduce using rule 81 (literal -> boolean_literal .)
    FI              reduce using rule 81 (literal -> boolean_literal .)


state 89

    (138) referenced_location -> ARROW . location
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    ID              shift and go to state 38
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    location_name                  shift and go to state 35
    procedure_call                 shift and go to state 12
    array_element                  shift and go to state 26
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    builtin_name                   shift and go to state 47
    dereferenced_reference         shift and go to state 11
    builtin_call                   shift and go to state 36
    procedure_name                 shift and go to state 31
    identifier                     shift and go to state 91
    location                       shift and go to state 158
    string_slice                   shift and go to state 22
    array_location                 shift and go to state 1
    string_element                 shift and go to state 9

state 90

    (107) operand0 -> operand1 .
    (121) operand1 -> operand1 . operator2 operand2
    (122) operator2 -> . arithmetic_additive_operator
    (123) operator2 -> . string_concatenation_operator
    (124) arithmetic_additive_operator -> . PLUS
    (125) arithmetic_additive_operator -> . MINUS
    (126) string_concatenation_operator -> . CONCAT

    AND             reduce using rule 107 (operand0 -> operand1 .)
    OR              reduce using rule 107 (operand0 -> operand1 .)
    EQUALS          reduce using rule 107 (operand0 -> operand1 .)
    DIF             reduce using rule 107 (operand0 -> operand1 .)
    GTR             reduce using rule 107 (operand0 -> operand1 .)
    GEQ             reduce using rule 107 (operand0 -> operand1 .)
    LSS             reduce using rule 107 (operand0 -> operand1 .)
    LEQ             reduce using rule 107 (operand0 -> operand1 .)
    IN              reduce using rule 107 (operand0 -> operand1 .)
    DOWN            reduce using rule 107 (operand0 -> operand1 .)
    TO              reduce using rule 107 (operand0 -> operand1 .)
    COLON           reduce using rule 107 (operand0 -> operand1 .)
    SEMICOL         reduce using rule 107 (operand0 -> operand1 .)
    FI              reduce using rule 107 (operand0 -> operand1 .)
    COMMA           reduce using rule 107 (operand0 -> operand1 .)
    THEN            reduce using rule 107 (operand0 -> operand1 .)
    RPAREN          reduce using rule 107 (operand0 -> operand1 .)
    RBRACK          reduce using rule 107 (operand0 -> operand1 .)
    WHILE           reduce using rule 107 (operand0 -> operand1 .)
    ELSE            reduce using rule 107 (operand0 -> operand1 .)
    ELSIF           reduce using rule 107 (operand0 -> operand1 .)
    BY              reduce using rule 107 (operand0 -> operand1 .)
    PLUS            shift and go to state 164
    MINUS           shift and go to state 159
    CONCAT          shift and go to state 162

    operator2                      shift and go to state 161
    string_concatenation_operator  shift and go to state 163
    arithmetic_additive_operator   shift and go to state 160

state 91

    (66) location_name -> identifier .
    (68) string_element -> identifier . LBRACK start_element RBRACK
    (70) string_slice -> identifier . LBRACK left_element COLON right_element RBRACK
    (195) procedure_name -> identifier .

  ! shift/reduce conflict for LBRACK resolved as shift
    ARROW           reduce using rule 66 (location_name -> identifier .)
    TIMES           reduce using rule 66 (location_name -> identifier .)
    DIVIDE          reduce using rule 66 (location_name -> identifier .)
    PERC            reduce using rule 66 (location_name -> identifier .)
    PLUS            reduce using rule 66 (location_name -> identifier .)
    MINUS           reduce using rule 66 (location_name -> identifier .)
    CONCAT          reduce using rule 66 (location_name -> identifier .)
    AND             reduce using rule 66 (location_name -> identifier .)
    OR              reduce using rule 66 (location_name -> identifier .)
    EQUALS          reduce using rule 66 (location_name -> identifier .)
    DIF             reduce using rule 66 (location_name -> identifier .)
    GTR             reduce using rule 66 (location_name -> identifier .)
    GEQ             reduce using rule 66 (location_name -> identifier .)
    LSS             reduce using rule 66 (location_name -> identifier .)
    LEQ             reduce using rule 66 (location_name -> identifier .)
    IN              reduce using rule 66 (location_name -> identifier .)
    RBRACK          reduce using rule 66 (location_name -> identifier .)
    COLON           reduce using rule 66 (location_name -> identifier .)
    SEMICOL         reduce using rule 66 (location_name -> identifier .)
    THEN            reduce using rule 66 (location_name -> identifier .)
    COMMA           reduce using rule 66 (location_name -> identifier .)
    RPAREN          reduce using rule 66 (location_name -> identifier .)
    DOWN            reduce using rule 66 (location_name -> identifier .)
    BY              reduce using rule 66 (location_name -> identifier .)
    TO              reduce using rule 66 (location_name -> identifier .)
    ELSE            reduce using rule 66 (location_name -> identifier .)
    ELSIF           reduce using rule 66 (location_name -> identifier .)
    FI              reduce using rule 66 (location_name -> identifier .)
    WHILE           reduce using rule 66 (location_name -> identifier .)
    ASSIGN          reduce using rule 66 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 66 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 66 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 66 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 66 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 66 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 66 (location_name -> identifier .)
    LBRACK          shift and go to state 121
    LPAREN          reduce using rule 195 (procedure_name -> identifier .)

  ! LBRACK          [ reduce using rule 66 (location_name -> identifier .) ]


state 92

    (137) operand4 -> primitive_value .
    (93) array_primitive_value -> primitive_value .

    TIMES           reduce using rule 137 (operand4 -> primitive_value .)
    DIVIDE          reduce using rule 137 (operand4 -> primitive_value .)
    PERC            reduce using rule 137 (operand4 -> primitive_value .)
    PLUS            reduce using rule 137 (operand4 -> primitive_value .)
    MINUS           reduce using rule 137 (operand4 -> primitive_value .)
    CONCAT          reduce using rule 137 (operand4 -> primitive_value .)
    AND             reduce using rule 137 (operand4 -> primitive_value .)
    OR              reduce using rule 137 (operand4 -> primitive_value .)
    EQUALS          reduce using rule 137 (operand4 -> primitive_value .)
    DIF             reduce using rule 137 (operand4 -> primitive_value .)
    GTR             reduce using rule 137 (operand4 -> primitive_value .)
    GEQ             reduce using rule 137 (operand4 -> primitive_value .)
    LSS             reduce using rule 137 (operand4 -> primitive_value .)
    LEQ             reduce using rule 137 (operand4 -> primitive_value .)
    IN              reduce using rule 137 (operand4 -> primitive_value .)
    RPAREN          reduce using rule 137 (operand4 -> primitive_value .)
    COMMA           reduce using rule 137 (operand4 -> primitive_value .)
    RBRACK          reduce using rule 137 (operand4 -> primitive_value .)
    COLON           reduce using rule 137 (operand4 -> primitive_value .)
    THEN            reduce using rule 137 (operand4 -> primitive_value .)
    SEMICOL         reduce using rule 137 (operand4 -> primitive_value .)
    DOWN            reduce using rule 137 (operand4 -> primitive_value .)
    BY              reduce using rule 137 (operand4 -> primitive_value .)
    TO              reduce using rule 137 (operand4 -> primitive_value .)
    ELSE            reduce using rule 137 (operand4 -> primitive_value .)
    ELSIF           reduce using rule 137 (operand4 -> primitive_value .)
    FI              reduce using rule 137 (operand4 -> primitive_value .)
    WHILE           reduce using rule 137 (operand4 -> primitive_value .)
    LBRACK          reduce using rule 93 (array_primitive_value -> primitive_value .)


state 93

    (12) procedure_statement -> label_id COLON . procedure_definition SEMICOL
    (13) action_statement -> label_id COLON . action SEMICOL
    (211) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (212) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (213) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (214) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL statement_list END
    (215) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL END
    (216) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL END
    (217) procedure_definition -> . PROC LPAREN RPAREN SEMICOL statement_list END
    (218) procedure_definition -> . PROC LPAREN RPAREN SEMICOL END
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (58) identifier -> . ID
    (75) array_location -> . location

    PROC            shift and go to state 166
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10
    ID              shift and go to state 38

    action                         shift and go to state 167
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    dereferenced_reference         shift and go to state 11
    assignment_action              shift and go to state 43
    builtin_name                   shift and go to state 47
    string_slice                   shift and go to state 22
    procedure_definition           shift and go to state 165
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    procedure_call                 shift and go to state 12
    exit_action                    shift and go to state 46
    identifier                     shift and go to state 91

state 94

    (2) statement_list -> statement_list statement .

    END             reduce using rule 2 (statement_list -> statement_list statement .)
    DCL             reduce using rule 2 (statement_list -> statement_list statement .)
    SYN             reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    RESULT          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    DO              reduce using rule 2 (statement_list -> statement_list statement .)
    NUM             reduce using rule 2 (statement_list -> statement_list statement .)
    PRED            reduce using rule 2 (statement_list -> statement_list statement .)
    SUCC            reduce using rule 2 (statement_list -> statement_list statement .)
    UPPER           reduce using rule 2 (statement_list -> statement_list statement .)
    LOWER           reduce using rule 2 (statement_list -> statement_list statement .)
    LENGTH          reduce using rule 2 (statement_list -> statement_list statement .)
    READ            reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 95

    (197) return_action -> RETURN result .

    SEMICOL         reduce using rule 197 (return_action -> RETURN result .)


state 96

    (14) action_statement -> action SEMICOL .

    ID              reduce using rule 14 (action_statement -> action SEMICOL .)
    EXIT            reduce using rule 14 (action_statement -> action SEMICOL .)
    RETURN          reduce using rule 14 (action_statement -> action SEMICOL .)
    RESULT          reduce using rule 14 (action_statement -> action SEMICOL .)
    IF              reduce using rule 14 (action_statement -> action SEMICOL .)
    DO              reduce using rule 14 (action_statement -> action SEMICOL .)
    NUM             reduce using rule 14 (action_statement -> action SEMICOL .)
    PRED            reduce using rule 14 (action_statement -> action SEMICOL .)
    SUCC            reduce using rule 14 (action_statement -> action SEMICOL .)
    UPPER           reduce using rule 14 (action_statement -> action SEMICOL .)
    LOWER           reduce using rule 14 (action_statement -> action SEMICOL .)
    LENGTH          reduce using rule 14 (action_statement -> action SEMICOL .)
    READ            reduce using rule 14 (action_statement -> action SEMICOL .)
    PRINT           reduce using rule 14 (action_statement -> action SEMICOL .)
    FI              reduce using rule 14 (action_statement -> action SEMICOL .)
    DCL             reduce using rule 14 (action_statement -> action SEMICOL .)
    SYN             reduce using rule 14 (action_statement -> action SEMICOL .)
    TYPE            reduce using rule 14 (action_statement -> action SEMICOL .)
    $end            reduce using rule 14 (action_statement -> action SEMICOL .)
    END             reduce using rule 14 (action_statement -> action SEMICOL .)
    OD              reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSE            reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSIF           reduce using rule 14 (action_statement -> action SEMICOL .)


state 97

    (196) exit_action -> EXIT label_id .

    SEMICOL         reduce using rule 196 (exit_action -> EXIT label_id .)


state 98

    (141) label_id -> identifier .

    SEMICOL         reduce using rule 141 (label_id -> identifier .)


state 99

    (151) assigning_operator -> ASSIGN .

    IF              reduce using rule 151 (assigning_operator -> ASSIGN .)
    MINUS           reduce using rule 151 (assigning_operator -> ASSIGN .)
    NOT             reduce using rule 151 (assigning_operator -> ASSIGN .)
    ARROW           reduce using rule 151 (assigning_operator -> ASSIGN .)
    LPAREN          reduce using rule 151 (assigning_operator -> ASSIGN .)
    ID              reduce using rule 151 (assigning_operator -> ASSIGN .)
    ICONST          reduce using rule 151 (assigning_operator -> ASSIGN .)
    FALSE           reduce using rule 151 (assigning_operator -> ASSIGN .)
    TRUE            reduce using rule 151 (assigning_operator -> ASSIGN .)
    CCONST          reduce using rule 151 (assigning_operator -> ASSIGN .)
    NULL            reduce using rule 151 (assigning_operator -> ASSIGN .)
    SCONST          reduce using rule 151 (assigning_operator -> ASSIGN .)
    NUM             reduce using rule 151 (assigning_operator -> ASSIGN .)
    PRED            reduce using rule 151 (assigning_operator -> ASSIGN .)
    SUCC            reduce using rule 151 (assigning_operator -> ASSIGN .)
    UPPER           reduce using rule 151 (assigning_operator -> ASSIGN .)
    LOWER           reduce using rule 151 (assigning_operator -> ASSIGN .)
    LENGTH          reduce using rule 151 (assigning_operator -> ASSIGN .)
    READ            reduce using rule 151 (assigning_operator -> ASSIGN .)
    PRINT           reduce using rule 151 (assigning_operator -> ASSIGN .)


state 100

    (156) assigning_operator -> PERCASSIGN .

    IF              reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    MINUS           reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    NOT             reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    ARROW           reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    LPAREN          reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    ID              reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    ICONST          reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    FALSE           reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    TRUE            reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    CCONST          reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    NULL            reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    SCONST          reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    NUM             reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    PRED            reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    SUCC            reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    UPPER           reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    LOWER           reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    LENGTH          reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    READ            reduce using rule 156 (assigning_operator -> PERCASSIGN .)
    PRINT           reduce using rule 156 (assigning_operator -> PERCASSIGN .)


state 101

    (157) assigning_operator -> CONCATASSIGN .

    IF              reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    MINUS           reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    NOT             reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    ARROW           reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    LPAREN          reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    ID              reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    ICONST          reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    FALSE           reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    TRUE            reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    CCONST          reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    NULL            reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    SCONST          reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    NUM             reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    PRED            reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    SUCC            reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    UPPER           reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    LOWER           reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    LENGTH          reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    READ            reduce using rule 157 (assigning_operator -> CONCATASSIGN .)
    PRINT           reduce using rule 157 (assigning_operator -> CONCATASSIGN .)


state 102

    (153) assigning_operator -> MINUSASSIGN .

    IF              reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    MINUS           reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    NOT             reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    ARROW           reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    LPAREN          reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    ID              reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    ICONST          reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    FALSE           reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    TRUE            reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    CCONST          reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    NULL            reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    SCONST          reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    NUM             reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    PRED            reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    SUCC            reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    UPPER           reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    LOWER           reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    LENGTH          reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    READ            reduce using rule 153 (assigning_operator -> MINUSASSIGN .)
    PRINT           reduce using rule 153 (assigning_operator -> MINUSASSIGN .)


state 103

    (150) assignment_action -> location assigning_operator . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 168
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand0                       shift and go to state 70
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    location                       shift and go to state 87
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 104

    (154) assigning_operator -> TIMESASSIGN .

    IF              reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    MINUS           reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    NOT             reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    ARROW           reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    LPAREN          reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    ID              reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    ICONST          reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    FALSE           reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    TRUE            reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    CCONST          reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    NULL            reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    SCONST          reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    NUM             reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    PRED            reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    SUCC            reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    UPPER           reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    LOWER           reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    LENGTH          reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    READ            reduce using rule 154 (assigning_operator -> TIMESASSIGN .)
    PRINT           reduce using rule 154 (assigning_operator -> TIMESASSIGN .)


state 105

    (67) dereferenced_reference -> location ARROW .

    ARROW           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    TIMES           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    DIVIDE          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PERC            reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PLUS            reduce using rule 67 (dereferenced_reference -> location ARROW .)
    MINUS           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    CONCAT          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    AND             reduce using rule 67 (dereferenced_reference -> location ARROW .)
    OR              reduce using rule 67 (dereferenced_reference -> location ARROW .)
    EQUALS          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    DIF             reduce using rule 67 (dereferenced_reference -> location ARROW .)
    GTR             reduce using rule 67 (dereferenced_reference -> location ARROW .)
    GEQ             reduce using rule 67 (dereferenced_reference -> location ARROW .)
    LSS             reduce using rule 67 (dereferenced_reference -> location ARROW .)
    LEQ             reduce using rule 67 (dereferenced_reference -> location ARROW .)
    IN              reduce using rule 67 (dereferenced_reference -> location ARROW .)
    SEMICOL         reduce using rule 67 (dereferenced_reference -> location ARROW .)
    THEN            reduce using rule 67 (dereferenced_reference -> location ARROW .)
    RBRACK          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    COMMA           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    COLON           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    RPAREN          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    DOWN            reduce using rule 67 (dereferenced_reference -> location ARROW .)
    BY              reduce using rule 67 (dereferenced_reference -> location ARROW .)
    TO              reduce using rule 67 (dereferenced_reference -> location ARROW .)
    ELSE            reduce using rule 67 (dereferenced_reference -> location ARROW .)
    ELSIF           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    FI              reduce using rule 67 (dereferenced_reference -> location ARROW .)
    WHILE           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    LBRACK          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    ASSIGN          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PLUSASSIGN      reduce using rule 67 (dereferenced_reference -> location ARROW .)
    MINUSASSIGN     reduce using rule 67 (dereferenced_reference -> location ARROW .)
    TIMESASSIGN     reduce using rule 67 (dereferenced_reference -> location ARROW .)
    DIVIDEASSIGN    reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PERCASSIGN      reduce using rule 67 (dereferenced_reference -> location ARROW .)
    CONCATASSIGN    reduce using rule 67 (dereferenced_reference -> location ARROW .)


state 106

    (152) assigning_operator -> PLUSASSIGN .

    IF              reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    MINUS           reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    NOT             reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    ARROW           reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    LPAREN          reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    ID              reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    ICONST          reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    FALSE           reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    TRUE            reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    CCONST          reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    NULL            reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    SCONST          reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    NUM             reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    PRED            reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    SUCC            reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    UPPER           reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    LOWER           reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    LENGTH          reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    READ            reduce using rule 152 (assigning_operator -> PLUSASSIGN .)
    PRINT           reduce using rule 152 (assigning_operator -> PLUSASSIGN .)


state 107

    (155) assigning_operator -> DIVIDEASSIGN .

    IF              reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    MINUS           reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    NOT             reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    ARROW           reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    LPAREN          reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    ID              reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    ICONST          reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    FALSE           reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    TRUE            reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    CCONST          reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    NULL            reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    SCONST          reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    NUM             reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    PRED            reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    SUCC            reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    UPPER           reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    LOWER           reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    LENGTH          reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    READ            reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)
    PRINT           reduce using rule 155 (assigning_operator -> DIVIDEASSIGN .)


state 108

    (190) procedure_call -> procedure_name LPAREN . parameter_list RPAREN
    (191) procedure_call -> procedure_name LPAREN . RPAREN
    (192) parameter_list -> . parameter_list COMMA parameter
    (193) parameter_list -> . parameter
    (194) parameter -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    RPAREN          shift and go to state 171
    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 169
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    parameter_list                 shift and go to state 170
    location_name                  shift and go to state 35
    parameter                      shift and go to state 172
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 109

    (26) newmode_list -> mode_definition .

    SEMICOL         reduce using rule 26 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 26 (newmode_list -> mode_definition .)


state 110

    (27) mode_definition -> identifier_list . ASSIGN mode
    (57) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 173
    COMMA           shift and go to state 174


state 111

    (56) identifier_list -> identifier .

    COMMA           reduce using rule 56 (identifier_list -> identifier .)
    REF             reduce using rule 56 (identifier_list -> identifier .)
    ID              reduce using rule 56 (identifier_list -> identifier .)
    INT             reduce using rule 56 (identifier_list -> identifier .)
    BOOL            reduce using rule 56 (identifier_list -> identifier .)
    CHAR            reduce using rule 56 (identifier_list -> identifier .)
    CHARS           reduce using rule 56 (identifier_list -> identifier .)
    ARRAY           reduce using rule 56 (identifier_list -> identifier .)
    ASSIGN          reduce using rule 56 (identifier_list -> identifier .)


state 112

    (11) newmode_statement -> TYPE newmode_list . SEMICOL
    (25) newmode_list -> newmode_list . COMMA mode_definition

    SEMICOL         shift and go to state 175
    COMMA           shift and go to state 176


state 113

    (102) boolean_expression -> expression .

    THEN            reduce using rule 102 (boolean_expression -> expression .)
    SEMICOL         reduce using rule 102 (boolean_expression -> expression .)


state 114

    (158) if_action -> IF boolean_expression . then_clause else_clause FI
    (159) if_action -> IF boolean_expression . then_clause FI
    (160) then_clause -> . THEN action_statement_list
    (161) then_clause -> . THEN empty

    THEN            shift and go to state 178

    then_clause                    shift and go to state 177

state 115

    (9) declaration_statement -> DCL declaration_list . SEMICOL
    (15) declaration_list -> declaration_list . COMMA declaration

    SEMICOL         shift and go to state 179
    COMMA           shift and go to state 180


state 116

    (17) declaration -> identifier_list . mode initialization
    (18) declaration -> identifier_list . mode
    (57) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    COMMA           shift and go to state 174
    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    reference_mode                 shift and go to state 189
    array_mode                     shift and go to state 182
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    discrete_mode                  shift and go to state 194
    mode_name                      shift and go to state 195
    mode                           shift and go to state 193
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    string_mode                    shift and go to state 185
    discrete_range_mode            shift and go to state 186
    character_mode                 shift and go to state 188

state 117

    (16) declaration_list -> declaration .

    SEMICOL         reduce using rule 16 (declaration_list -> declaration .)
    COMMA           reduce using rule 16 (declaration_list -> declaration .)


state 118

    (21) synonym_list -> synonym_definition .

    SEMICOL         reduce using rule 21 (synonym_list -> synonym_definition .)
    COMMA           reduce using rule 21 (synonym_list -> synonym_definition .)


state 119

    (10) synonym_statement -> SYN synonym_list . SEMICOL
    (20) synonym_list -> synonym_list . COMMA synonym_definition

    SEMICOL         shift and go to state 199
    COMMA           shift and go to state 200


state 120

    (22) synonym_definition -> identifier_list . mode ASSIGN constant_expression
    (23) synonym_definition -> identifier_list . ASSIGN constant_expression
    (57) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    ASSIGN          shift and go to state 201
    COMMA           shift and go to state 174
    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    reference_mode                 shift and go to state 189
    array_mode                     shift and go to state 182
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    discrete_mode                  shift and go to state 194
    mode_name                      shift and go to state 195
    mode                           shift and go to state 202
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    string_mode                    shift and go to state 185
    discrete_range_mode            shift and go to state 186
    character_mode                 shift and go to state 188

state 121

    (68) string_element -> identifier LBRACK . start_element RBRACK
    (70) string_slice -> identifier LBRACK . left_element COLON right_element RBRACK
    (69) start_element -> . integer_expression
    (71) left_element -> . integer_expression
    (101) integer_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    integer_expression             shift and go to state 203
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    start_element                  shift and go to state 204
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    left_element                   shift and go to state 205
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    expression                     shift and go to state 206
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    location                       shift and go to state 87
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    character_literal              shift and go to state 69
    boolean_literal                shift and go to state 88

state 122

    (201) builtin_call -> builtin_name LPAREN . parameter_list RPAREN
    (202) builtin_call -> builtin_name LPAREN . RPAREN
    (192) parameter_list -> . parameter_list COMMA parameter
    (193) parameter_list -> . parameter
    (194) parameter -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    RPAREN          shift and go to state 208
    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 169
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    parameter_list                 shift and go to state 207
    location_name                  shift and go to state 35
    parameter                      shift and go to state 172
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 123

    (96) expression_list -> expression .
    (43) lower_bound -> expression .

    RBRACK          reduce using rule 96 (expression_list -> expression .)
    COMMA           reduce using rule 96 (expression_list -> expression .)
    COLON           reduce using rule 43 (lower_bound -> expression .)


state 124

    (74) array_slice -> array_location LBRACK lower_bound . COLON upper_bound RBRACK

    COLON           shift and go to state 209


state 125

    (73) array_element -> array_location LBRACK expression_list . RBRACK
    (95) expression_list -> expression_list . COMMA expression

    RBRACK          shift and go to state 211
    COMMA           shift and go to state 210


state 126

    (13) action_statement -> label_id COLON . action SEMICOL
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (58) identifier -> . ID
    (75) array_location -> . location

    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10
    ID              shift and go to state 38

    action                         shift and go to state 167
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    dereferenced_reference         shift and go to state 11
    string_slice                   shift and go to state 22
    assignment_action              shift and go to state 43
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    procedure_call                 shift and go to state 12
    exit_action                    shift and go to state 46
    identifier                     shift and go to state 91
    builtin_name                   shift and go to state 47

state 127

    (174) iteration -> range_enumeration .

    WHILE           reduce using rule 174 (iteration -> range_enumeration .)
    SEMICOL         reduce using rule 174 (iteration -> range_enumeration .)


state 128

    (173) for_control -> FOR iteration .

    WHILE           reduce using rule 173 (for_control -> FOR iteration .)
    SEMICOL         reduce using rule 173 (for_control -> FOR iteration .)


state 129

    (175) iteration -> step_enumeration .

    WHILE           reduce using rule 175 (iteration -> step_enumeration .)
    SEMICOL         reduce using rule 175 (iteration -> step_enumeration .)


state 130

    (185) range_enumeration -> loop_counter . DOWN IN discrete_mode
    (186) range_enumeration -> loop_counter . IN discrete_mode
    (176) step_enumeration -> loop_counter . ASSIGN start_value step_value DOWN end_value
    (177) step_enumeration -> loop_counter . ASSIGN start_value step_value end_value
    (178) step_enumeration -> loop_counter . ASSIGN start_value DOWN end_value
    (179) step_enumeration -> loop_counter . ASSIGN start_value end_value

    DOWN            shift and go to state 214
    IN              shift and go to state 213
    ASSIGN          shift and go to state 212


state 131

    (180) loop_counter -> identifier .

    DOWN            reduce using rule 180 (loop_counter -> identifier .)
    IN              reduce using rule 180 (loop_counter -> identifier .)
    ASSIGN          reduce using rule 180 (loop_counter -> identifier .)


state 132

    (168) do_action -> DO action_statement_list OD .

    SEMICOL         reduce using rule 168 (do_action -> DO action_statement_list OD .)


state 133

    (139) action_statement_list -> action_statement_list action_statement .

    OD              reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    ID              reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    EXIT            reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    RETURN          reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    RESULT          reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    IF              reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    DO              reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    NUM             reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    PRED            reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    SUCC            reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    UPPER           reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    LOWER           reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    LENGTH          reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    READ            reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    PRINT           reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    FI              reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    ELSE            reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)
    ELSIF           reduce using rule 139 (action_statement_list -> action_statement_list action_statement .)


state 134

    (187) while_control -> WHILE boolean_expression .

    SEMICOL         reduce using rule 187 (while_control -> WHILE boolean_expression .)


state 135

    (170) control_part -> for_control while_control .

    SEMICOL         reduce using rule 170 (control_part -> for_control while_control .)


state 136

    (166) do_action -> DO control_part SEMICOL . action_statement_list OD
    (167) do_action -> DO control_part SEMICOL . OD
    (139) action_statement_list -> . action_statement_list action_statement
    (140) action_statement_list -> . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    OD              shift and go to state 216
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    label_id                       shift and go to state 50
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    action_statement_list          shift and go to state 215
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    string_slice                   shift and go to state 22
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    assignment_action              shift and go to state 43
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 58

state 137

    (131) arithmetic_multiplicative_operator -> PERC .

    MINUS           reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    NOT             reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    ARROW           reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    LPAREN          reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    ID              reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    ICONST          reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    FALSE           reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    TRUE            reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    CCONST          reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    NULL            reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    SCONST          reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    NUM             reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    PRED            reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    SUCC            reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    UPPER           reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    LOWER           reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    LENGTH          reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    READ            reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)
    PRINT           reduce using rule 131 (arithmetic_multiplicative_operator -> PERC .)


state 138

    (130) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    ARROW           reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    LPAREN          reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    ID              reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    FALSE           reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    TRUE            reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    CCONST          reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    NULL            reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    SCONST          reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    NUM             reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    PRED            reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    SUCC            reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    UPPER           reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    LOWER           reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    LENGTH          reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    READ            reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)
    PRINT           reduce using rule 130 (arithmetic_multiplicative_operator -> DIVIDE .)


state 139

    (128) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    literal                        shift and go to state 60
    array_element                  shift and go to state 26
    operand4                       shift and go to state 62
    array_primitive_value          shift and go to state 77
    parenthesized_expression       shift and go to state 63
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    empty_literal                  shift and go to state 71
    procedure_name                 shift and go to state 31
    identifier                     shift and go to state 91
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    value_array_element            shift and go to state 86
    operand3                       shift and go to state 217
    boolean_literal                shift and go to state 88
    location                       shift and go to state 87
    string_slice                   shift and go to state 22
    character_literal              shift and go to state 69
    primitive_value                shift and go to state 92

state 140

    (129) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    ARROW           reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    LPAREN          reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    ID              reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    FALSE           reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    TRUE            reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    CCONST          reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    NULL            reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    SCONST          reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    NUM             reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    PRED            reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    SUCC            reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    UPPER           reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    LOWER           reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    LENGTH          reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    READ            reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)
    PRINT           reduce using rule 129 (arithmetic_multiplicative_operator -> TIMES .)


state 141

    (117) relational_operator -> LSS .

    MINUS           reduce using rule 117 (relational_operator -> LSS .)
    NOT             reduce using rule 117 (relational_operator -> LSS .)
    ARROW           reduce using rule 117 (relational_operator -> LSS .)
    LPAREN          reduce using rule 117 (relational_operator -> LSS .)
    ID              reduce using rule 117 (relational_operator -> LSS .)
    ICONST          reduce using rule 117 (relational_operator -> LSS .)
    FALSE           reduce using rule 117 (relational_operator -> LSS .)
    TRUE            reduce using rule 117 (relational_operator -> LSS .)
    CCONST          reduce using rule 117 (relational_operator -> LSS .)
    NULL            reduce using rule 117 (relational_operator -> LSS .)
    SCONST          reduce using rule 117 (relational_operator -> LSS .)
    NUM             reduce using rule 117 (relational_operator -> LSS .)
    PRED            reduce using rule 117 (relational_operator -> LSS .)
    SUCC            reduce using rule 117 (relational_operator -> LSS .)
    UPPER           reduce using rule 117 (relational_operator -> LSS .)
    LOWER           reduce using rule 117 (relational_operator -> LSS .)
    LENGTH          reduce using rule 117 (relational_operator -> LSS .)
    READ            reduce using rule 117 (relational_operator -> LSS .)
    PRINT           reduce using rule 117 (relational_operator -> LSS .)


state 142

    (110) operator1 -> membership_operator .

    MINUS           reduce using rule 110 (operator1 -> membership_operator .)
    NOT             reduce using rule 110 (operator1 -> membership_operator .)
    ARROW           reduce using rule 110 (operator1 -> membership_operator .)
    LPAREN          reduce using rule 110 (operator1 -> membership_operator .)
    ID              reduce using rule 110 (operator1 -> membership_operator .)
    ICONST          reduce using rule 110 (operator1 -> membership_operator .)
    FALSE           reduce using rule 110 (operator1 -> membership_operator .)
    TRUE            reduce using rule 110 (operator1 -> membership_operator .)
    CCONST          reduce using rule 110 (operator1 -> membership_operator .)
    NULL            reduce using rule 110 (operator1 -> membership_operator .)
    SCONST          reduce using rule 110 (operator1 -> membership_operator .)
    NUM             reduce using rule 110 (operator1 -> membership_operator .)
    PRED            reduce using rule 110 (operator1 -> membership_operator .)
    SUCC            reduce using rule 110 (operator1 -> membership_operator .)
    UPPER           reduce using rule 110 (operator1 -> membership_operator .)
    LOWER           reduce using rule 110 (operator1 -> membership_operator .)
    LENGTH          reduce using rule 110 (operator1 -> membership_operator .)
    READ            reduce using rule 110 (operator1 -> membership_operator .)
    PRINT           reduce using rule 110 (operator1 -> membership_operator .)


state 143

    (113) relational_operator -> EQUALS .

    MINUS           reduce using rule 113 (relational_operator -> EQUALS .)
    NOT             reduce using rule 113 (relational_operator -> EQUALS .)
    ARROW           reduce using rule 113 (relational_operator -> EQUALS .)
    LPAREN          reduce using rule 113 (relational_operator -> EQUALS .)
    ID              reduce using rule 113 (relational_operator -> EQUALS .)
    ICONST          reduce using rule 113 (relational_operator -> EQUALS .)
    FALSE           reduce using rule 113 (relational_operator -> EQUALS .)
    TRUE            reduce using rule 113 (relational_operator -> EQUALS .)
    CCONST          reduce using rule 113 (relational_operator -> EQUALS .)
    NULL            reduce using rule 113 (relational_operator -> EQUALS .)
    SCONST          reduce using rule 113 (relational_operator -> EQUALS .)
    NUM             reduce using rule 113 (relational_operator -> EQUALS .)
    PRED            reduce using rule 113 (relational_operator -> EQUALS .)
    SUCC            reduce using rule 113 (relational_operator -> EQUALS .)
    UPPER           reduce using rule 113 (relational_operator -> EQUALS .)
    LOWER           reduce using rule 113 (relational_operator -> EQUALS .)
    LENGTH          reduce using rule 113 (relational_operator -> EQUALS .)
    READ            reduce using rule 113 (relational_operator -> EQUALS .)
    PRINT           reduce using rule 113 (relational_operator -> EQUALS .)


state 144

    (115) relational_operator -> GTR .

    MINUS           reduce using rule 115 (relational_operator -> GTR .)
    NOT             reduce using rule 115 (relational_operator -> GTR .)
    ARROW           reduce using rule 115 (relational_operator -> GTR .)
    LPAREN          reduce using rule 115 (relational_operator -> GTR .)
    ID              reduce using rule 115 (relational_operator -> GTR .)
    ICONST          reduce using rule 115 (relational_operator -> GTR .)
    FALSE           reduce using rule 115 (relational_operator -> GTR .)
    TRUE            reduce using rule 115 (relational_operator -> GTR .)
    CCONST          reduce using rule 115 (relational_operator -> GTR .)
    NULL            reduce using rule 115 (relational_operator -> GTR .)
    SCONST          reduce using rule 115 (relational_operator -> GTR .)
    NUM             reduce using rule 115 (relational_operator -> GTR .)
    PRED            reduce using rule 115 (relational_operator -> GTR .)
    SUCC            reduce using rule 115 (relational_operator -> GTR .)
    UPPER           reduce using rule 115 (relational_operator -> GTR .)
    LOWER           reduce using rule 115 (relational_operator -> GTR .)
    LENGTH          reduce using rule 115 (relational_operator -> GTR .)
    READ            reduce using rule 115 (relational_operator -> GTR .)
    PRINT           reduce using rule 115 (relational_operator -> GTR .)


state 145

    (119) membership_operator -> IN .

    MINUS           reduce using rule 119 (membership_operator -> IN .)
    NOT             reduce using rule 119 (membership_operator -> IN .)
    ARROW           reduce using rule 119 (membership_operator -> IN .)
    LPAREN          reduce using rule 119 (membership_operator -> IN .)
    ID              reduce using rule 119 (membership_operator -> IN .)
    ICONST          reduce using rule 119 (membership_operator -> IN .)
    FALSE           reduce using rule 119 (membership_operator -> IN .)
    TRUE            reduce using rule 119 (membership_operator -> IN .)
    CCONST          reduce using rule 119 (membership_operator -> IN .)
    NULL            reduce using rule 119 (membership_operator -> IN .)
    SCONST          reduce using rule 119 (membership_operator -> IN .)
    NUM             reduce using rule 119 (membership_operator -> IN .)
    PRED            reduce using rule 119 (membership_operator -> IN .)
    SUCC            reduce using rule 119 (membership_operator -> IN .)
    UPPER           reduce using rule 119 (membership_operator -> IN .)
    LOWER           reduce using rule 119 (membership_operator -> IN .)
    LENGTH          reduce using rule 119 (membership_operator -> IN .)
    READ            reduce using rule 119 (membership_operator -> IN .)
    PRINT           reduce using rule 119 (membership_operator -> IN .)


state 146

    (112) relational_operator -> OR .

    MINUS           reduce using rule 112 (relational_operator -> OR .)
    NOT             reduce using rule 112 (relational_operator -> OR .)
    ARROW           reduce using rule 112 (relational_operator -> OR .)
    LPAREN          reduce using rule 112 (relational_operator -> OR .)
    ID              reduce using rule 112 (relational_operator -> OR .)
    ICONST          reduce using rule 112 (relational_operator -> OR .)
    FALSE           reduce using rule 112 (relational_operator -> OR .)
    TRUE            reduce using rule 112 (relational_operator -> OR .)
    CCONST          reduce using rule 112 (relational_operator -> OR .)
    NULL            reduce using rule 112 (relational_operator -> OR .)
    SCONST          reduce using rule 112 (relational_operator -> OR .)
    NUM             reduce using rule 112 (relational_operator -> OR .)
    PRED            reduce using rule 112 (relational_operator -> OR .)
    SUCC            reduce using rule 112 (relational_operator -> OR .)
    UPPER           reduce using rule 112 (relational_operator -> OR .)
    LOWER           reduce using rule 112 (relational_operator -> OR .)
    LENGTH          reduce using rule 112 (relational_operator -> OR .)
    READ            reduce using rule 112 (relational_operator -> OR .)
    PRINT           reduce using rule 112 (relational_operator -> OR .)


state 147

    (111) relational_operator -> AND .

    MINUS           reduce using rule 111 (relational_operator -> AND .)
    NOT             reduce using rule 111 (relational_operator -> AND .)
    ARROW           reduce using rule 111 (relational_operator -> AND .)
    LPAREN          reduce using rule 111 (relational_operator -> AND .)
    ID              reduce using rule 111 (relational_operator -> AND .)
    ICONST          reduce using rule 111 (relational_operator -> AND .)
    FALSE           reduce using rule 111 (relational_operator -> AND .)
    TRUE            reduce using rule 111 (relational_operator -> AND .)
    CCONST          reduce using rule 111 (relational_operator -> AND .)
    NULL            reduce using rule 111 (relational_operator -> AND .)
    SCONST          reduce using rule 111 (relational_operator -> AND .)
    NUM             reduce using rule 111 (relational_operator -> AND .)
    PRED            reduce using rule 111 (relational_operator -> AND .)
    SUCC            reduce using rule 111 (relational_operator -> AND .)
    UPPER           reduce using rule 111 (relational_operator -> AND .)
    LOWER           reduce using rule 111 (relational_operator -> AND .)
    LENGTH          reduce using rule 111 (relational_operator -> AND .)
    READ            reduce using rule 111 (relational_operator -> AND .)
    PRINT           reduce using rule 111 (relational_operator -> AND .)


state 148

    (114) relational_operator -> DIF .

    MINUS           reduce using rule 114 (relational_operator -> DIF .)
    NOT             reduce using rule 114 (relational_operator -> DIF .)
    ARROW           reduce using rule 114 (relational_operator -> DIF .)
    LPAREN          reduce using rule 114 (relational_operator -> DIF .)
    ID              reduce using rule 114 (relational_operator -> DIF .)
    ICONST          reduce using rule 114 (relational_operator -> DIF .)
    FALSE           reduce using rule 114 (relational_operator -> DIF .)
    TRUE            reduce using rule 114 (relational_operator -> DIF .)
    CCONST          reduce using rule 114 (relational_operator -> DIF .)
    NULL            reduce using rule 114 (relational_operator -> DIF .)
    SCONST          reduce using rule 114 (relational_operator -> DIF .)
    NUM             reduce using rule 114 (relational_operator -> DIF .)
    PRED            reduce using rule 114 (relational_operator -> DIF .)
    SUCC            reduce using rule 114 (relational_operator -> DIF .)
    UPPER           reduce using rule 114 (relational_operator -> DIF .)
    LOWER           reduce using rule 114 (relational_operator -> DIF .)
    LENGTH          reduce using rule 114 (relational_operator -> DIF .)
    READ            reduce using rule 114 (relational_operator -> DIF .)
    PRINT           reduce using rule 114 (relational_operator -> DIF .)


state 149

    (108) operand0 -> operand0 operator1 . operand1
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    literal                        shift and go to state 60
    array_element                  shift and go to state 26
    operand4                       shift and go to state 62
    array_primitive_value          shift and go to state 77
    parenthesized_expression       shift and go to state 63
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    operand2                       shift and go to state 64
    empty_literal                  shift and go to state 71
    procedure_name                 shift and go to state 31
    identifier                     shift and go to state 91
    operand3                       shift and go to state 66
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    value_array_element            shift and go to state 86
    location                       shift and go to state 87
    referenced_location            shift and go to state 84
    boolean_literal                shift and go to state 88
    operand1                       shift and go to state 218
    string_slice                   shift and go to state 22
    array_location                 shift and go to state 1
    character_literal              shift and go to state 69
    primitive_value                shift and go to state 92

state 150

    (118) relational_operator -> LEQ .

    MINUS           reduce using rule 118 (relational_operator -> LEQ .)
    NOT             reduce using rule 118 (relational_operator -> LEQ .)
    ARROW           reduce using rule 118 (relational_operator -> LEQ .)
    LPAREN          reduce using rule 118 (relational_operator -> LEQ .)
    ID              reduce using rule 118 (relational_operator -> LEQ .)
    ICONST          reduce using rule 118 (relational_operator -> LEQ .)
    FALSE           reduce using rule 118 (relational_operator -> LEQ .)
    TRUE            reduce using rule 118 (relational_operator -> LEQ .)
    CCONST          reduce using rule 118 (relational_operator -> LEQ .)
    NULL            reduce using rule 118 (relational_operator -> LEQ .)
    SCONST          reduce using rule 118 (relational_operator -> LEQ .)
    NUM             reduce using rule 118 (relational_operator -> LEQ .)
    PRED            reduce using rule 118 (relational_operator -> LEQ .)
    SUCC            reduce using rule 118 (relational_operator -> LEQ .)
    UPPER           reduce using rule 118 (relational_operator -> LEQ .)
    LOWER           reduce using rule 118 (relational_operator -> LEQ .)
    LENGTH          reduce using rule 118 (relational_operator -> LEQ .)
    READ            reduce using rule 118 (relational_operator -> LEQ .)
    PRINT           reduce using rule 118 (relational_operator -> LEQ .)


state 151

    (116) relational_operator -> GEQ .

    MINUS           reduce using rule 116 (relational_operator -> GEQ .)
    NOT             reduce using rule 116 (relational_operator -> GEQ .)
    ARROW           reduce using rule 116 (relational_operator -> GEQ .)
    LPAREN          reduce using rule 116 (relational_operator -> GEQ .)
    ID              reduce using rule 116 (relational_operator -> GEQ .)
    ICONST          reduce using rule 116 (relational_operator -> GEQ .)
    FALSE           reduce using rule 116 (relational_operator -> GEQ .)
    TRUE            reduce using rule 116 (relational_operator -> GEQ .)
    CCONST          reduce using rule 116 (relational_operator -> GEQ .)
    NULL            reduce using rule 116 (relational_operator -> GEQ .)
    SCONST          reduce using rule 116 (relational_operator -> GEQ .)
    NUM             reduce using rule 116 (relational_operator -> GEQ .)
    PRED            reduce using rule 116 (relational_operator -> GEQ .)
    SUCC            reduce using rule 116 (relational_operator -> GEQ .)
    UPPER           reduce using rule 116 (relational_operator -> GEQ .)
    LOWER           reduce using rule 116 (relational_operator -> GEQ .)
    LENGTH          reduce using rule 116 (relational_operator -> GEQ .)
    READ            reduce using rule 116 (relational_operator -> GEQ .)
    PRINT           reduce using rule 116 (relational_operator -> GEQ .)


state 152

    (109) operator1 -> relational_operator .

    MINUS           reduce using rule 109 (operator1 -> relational_operator .)
    NOT             reduce using rule 109 (operator1 -> relational_operator .)
    ARROW           reduce using rule 109 (operator1 -> relational_operator .)
    LPAREN          reduce using rule 109 (operator1 -> relational_operator .)
    ID              reduce using rule 109 (operator1 -> relational_operator .)
    ICONST          reduce using rule 109 (operator1 -> relational_operator .)
    FALSE           reduce using rule 109 (operator1 -> relational_operator .)
    TRUE            reduce using rule 109 (operator1 -> relational_operator .)
    CCONST          reduce using rule 109 (operator1 -> relational_operator .)
    NULL            reduce using rule 109 (operator1 -> relational_operator .)
    SCONST          reduce using rule 109 (operator1 -> relational_operator .)
    NUM             reduce using rule 109 (operator1 -> relational_operator .)
    PRED            reduce using rule 109 (operator1 -> relational_operator .)
    SUCC            reduce using rule 109 (operator1 -> relational_operator .)
    UPPER           reduce using rule 109 (operator1 -> relational_operator .)
    LOWER           reduce using rule 109 (operator1 -> relational_operator .)
    LENGTH          reduce using rule 109 (operator1 -> relational_operator .)
    READ            reduce using rule 109 (operator1 -> relational_operator .)
    PRINT           reduce using rule 109 (operator1 -> relational_operator .)


state 153

    (133) operand3 -> NOT operand4 .

    TIMES           reduce using rule 133 (operand3 -> NOT operand4 .)
    DIVIDE          reduce using rule 133 (operand3 -> NOT operand4 .)
    PERC            reduce using rule 133 (operand3 -> NOT operand4 .)
    PLUS            reduce using rule 133 (operand3 -> NOT operand4 .)
    MINUS           reduce using rule 133 (operand3 -> NOT operand4 .)
    CONCAT          reduce using rule 133 (operand3 -> NOT operand4 .)
    AND             reduce using rule 133 (operand3 -> NOT operand4 .)
    OR              reduce using rule 133 (operand3 -> NOT operand4 .)
    EQUALS          reduce using rule 133 (operand3 -> NOT operand4 .)
    DIF             reduce using rule 133 (operand3 -> NOT operand4 .)
    GTR             reduce using rule 133 (operand3 -> NOT operand4 .)
    GEQ             reduce using rule 133 (operand3 -> NOT operand4 .)
    LSS             reduce using rule 133 (operand3 -> NOT operand4 .)
    LEQ             reduce using rule 133 (operand3 -> NOT operand4 .)
    IN              reduce using rule 133 (operand3 -> NOT operand4 .)
    SEMICOL         reduce using rule 133 (operand3 -> NOT operand4 .)
    COMMA           reduce using rule 133 (operand3 -> NOT operand4 .)
    RBRACK          reduce using rule 133 (operand3 -> NOT operand4 .)
    THEN            reduce using rule 133 (operand3 -> NOT operand4 .)
    COLON           reduce using rule 133 (operand3 -> NOT operand4 .)
    RPAREN          reduce using rule 133 (operand3 -> NOT operand4 .)
    DOWN            reduce using rule 133 (operand3 -> NOT operand4 .)
    BY              reduce using rule 133 (operand3 -> NOT operand4 .)
    TO              reduce using rule 133 (operand3 -> NOT operand4 .)
    ELSE            reduce using rule 133 (operand3 -> NOT operand4 .)
    ELSIF           reduce using rule 133 (operand3 -> NOT operand4 .)
    FI              reduce using rule 133 (operand3 -> NOT operand4 .)
    WHILE           reduce using rule 133 (operand3 -> NOT operand4 .)


state 154

    (94) parenthesized_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 219


state 155

    (91) value_array_element -> array_primitive_value LBRACK . expression_list RBRACK
    (92) value_array_slice -> array_primitive_value LBRACK . lower_bound COLON upper_bound RBRACK
    (95) expression_list -> . expression_list COMMA expression
    (96) expression_list -> . expression
    (43) lower_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 123
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    lower_bound                    shift and go to state 220
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    expression_list                shift and go to state 221
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 156

    (99) conditional_expression -> IF boolean_expression . then_expression else_expression FI
    (100) conditional_expression -> IF boolean_expression . then_expression elsif_expression else_expression FI
    (103) then_expression -> . THEN expression

    THEN            shift and go to state 222

    then_expression                shift and go to state 223

state 157

    (132) operand3 -> MINUS operand4 .

    TIMES           reduce using rule 132 (operand3 -> MINUS operand4 .)
    DIVIDE          reduce using rule 132 (operand3 -> MINUS operand4 .)
    PERC            reduce using rule 132 (operand3 -> MINUS operand4 .)
    PLUS            reduce using rule 132 (operand3 -> MINUS operand4 .)
    MINUS           reduce using rule 132 (operand3 -> MINUS operand4 .)
    CONCAT          reduce using rule 132 (operand3 -> MINUS operand4 .)
    AND             reduce using rule 132 (operand3 -> MINUS operand4 .)
    OR              reduce using rule 132 (operand3 -> MINUS operand4 .)
    EQUALS          reduce using rule 132 (operand3 -> MINUS operand4 .)
    DIF             reduce using rule 132 (operand3 -> MINUS operand4 .)
    GTR             reduce using rule 132 (operand3 -> MINUS operand4 .)
    GEQ             reduce using rule 132 (operand3 -> MINUS operand4 .)
    LSS             reduce using rule 132 (operand3 -> MINUS operand4 .)
    LEQ             reduce using rule 132 (operand3 -> MINUS operand4 .)
    IN              reduce using rule 132 (operand3 -> MINUS operand4 .)
    SEMICOL         reduce using rule 132 (operand3 -> MINUS operand4 .)
    COMMA           reduce using rule 132 (operand3 -> MINUS operand4 .)
    RBRACK          reduce using rule 132 (operand3 -> MINUS operand4 .)
    THEN            reduce using rule 132 (operand3 -> MINUS operand4 .)
    COLON           reduce using rule 132 (operand3 -> MINUS operand4 .)
    RPAREN          reduce using rule 132 (operand3 -> MINUS operand4 .)
    DOWN            reduce using rule 132 (operand3 -> MINUS operand4 .)
    BY              reduce using rule 132 (operand3 -> MINUS operand4 .)
    TO              reduce using rule 132 (operand3 -> MINUS operand4 .)
    ELSE            reduce using rule 132 (operand3 -> MINUS operand4 .)
    ELSIF           reduce using rule 132 (operand3 -> MINUS operand4 .)
    FI              reduce using rule 132 (operand3 -> MINUS operand4 .)
    WHILE           reduce using rule 132 (operand3 -> MINUS operand4 .)


state 158

    (138) referenced_location -> ARROW location .
    (67) dereferenced_reference -> location . ARROW
    (75) array_location -> location .

    TIMES           reduce using rule 138 (referenced_location -> ARROW location .)
    DIVIDE          reduce using rule 138 (referenced_location -> ARROW location .)
    PERC            reduce using rule 138 (referenced_location -> ARROW location .)
    PLUS            reduce using rule 138 (referenced_location -> ARROW location .)
    MINUS           reduce using rule 138 (referenced_location -> ARROW location .)
    CONCAT          reduce using rule 138 (referenced_location -> ARROW location .)
    AND             reduce using rule 138 (referenced_location -> ARROW location .)
    OR              reduce using rule 138 (referenced_location -> ARROW location .)
    EQUALS          reduce using rule 138 (referenced_location -> ARROW location .)
    DIF             reduce using rule 138 (referenced_location -> ARROW location .)
    GTR             reduce using rule 138 (referenced_location -> ARROW location .)
    GEQ             reduce using rule 138 (referenced_location -> ARROW location .)
    LSS             reduce using rule 138 (referenced_location -> ARROW location .)
    LEQ             reduce using rule 138 (referenced_location -> ARROW location .)
    IN              reduce using rule 138 (referenced_location -> ARROW location .)
    SEMICOL         reduce using rule 138 (referenced_location -> ARROW location .)
    ELSE            reduce using rule 138 (referenced_location -> ARROW location .)
    ELSIF           reduce using rule 138 (referenced_location -> ARROW location .)
    COMMA           reduce using rule 138 (referenced_location -> ARROW location .)
    THEN            reduce using rule 138 (referenced_location -> ARROW location .)
    RBRACK          reduce using rule 138 (referenced_location -> ARROW location .)
    COLON           reduce using rule 138 (referenced_location -> ARROW location .)
    RPAREN          reduce using rule 138 (referenced_location -> ARROW location .)
    DOWN            reduce using rule 138 (referenced_location -> ARROW location .)
    BY              reduce using rule 138 (referenced_location -> ARROW location .)
    TO              reduce using rule 138 (referenced_location -> ARROW location .)
    FI              reduce using rule 138 (referenced_location -> ARROW location .)
    WHILE           reduce using rule 138 (referenced_location -> ARROW location .)
    ARROW           shift and go to state 105
    LBRACK          reduce using rule 75 (array_location -> location .)


state 159

    (125) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    ARROW           reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    LPAREN          reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    ID              reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    FALSE           reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    TRUE            reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    CCONST          reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    NULL            reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    SCONST          reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    NUM             reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    PRED            reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    SUCC            reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    UPPER           reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    LOWER           reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    LENGTH          reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    READ            reduce using rule 125 (arithmetic_additive_operator -> MINUS .)
    PRINT           reduce using rule 125 (arithmetic_additive_operator -> MINUS .)


state 160

    (122) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    ARROW           reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    LPAREN          reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    ID              reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    FALSE           reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    TRUE            reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    CCONST          reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    NULL            reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    SCONST          reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    NUM             reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    PRED            reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    SUCC            reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    UPPER           reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    LOWER           reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    LENGTH          reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    READ            reduce using rule 122 (operator2 -> arithmetic_additive_operator .)
    PRINT           reduce using rule 122 (operator2 -> arithmetic_additive_operator .)


state 161

    (121) operand1 -> operand1 operator2 . operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    literal                        shift and go to state 60
    array_element                  shift and go to state 26
    operand4                       shift and go to state 62
    array_primitive_value          shift and go to state 77
    parenthesized_expression       shift and go to state 63
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    empty_literal                  shift and go to state 71
    procedure_name                 shift and go to state 31
    identifier                     shift and go to state 91
    operand3                       shift and go to state 66
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    value_array_element            shift and go to state 86
    location                       shift and go to state 87
    boolean_literal                shift and go to state 88
    string_slice                   shift and go to state 22
    operand2                       shift and go to state 224
    character_literal              shift and go to state 69
    primitive_value                shift and go to state 92

state 162

    (126) string_concatenation_operator -> CONCAT .

    MINUS           reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    NOT             reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    ARROW           reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    LPAREN          reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    ID              reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    ICONST          reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    FALSE           reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    TRUE            reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    CCONST          reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    NULL            reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    SCONST          reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    NUM             reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    PRED            reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    SUCC            reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    UPPER           reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    LOWER           reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    LENGTH          reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    READ            reduce using rule 126 (string_concatenation_operator -> CONCAT .)
    PRINT           reduce using rule 126 (string_concatenation_operator -> CONCAT .)


state 163

    (123) operator2 -> string_concatenation_operator .

    MINUS           reduce using rule 123 (operator2 -> string_concatenation_operator .)
    NOT             reduce using rule 123 (operator2 -> string_concatenation_operator .)
    ARROW           reduce using rule 123 (operator2 -> string_concatenation_operator .)
    LPAREN          reduce using rule 123 (operator2 -> string_concatenation_operator .)
    ID              reduce using rule 123 (operator2 -> string_concatenation_operator .)
    ICONST          reduce using rule 123 (operator2 -> string_concatenation_operator .)
    FALSE           reduce using rule 123 (operator2 -> string_concatenation_operator .)
    TRUE            reduce using rule 123 (operator2 -> string_concatenation_operator .)
    CCONST          reduce using rule 123 (operator2 -> string_concatenation_operator .)
    NULL            reduce using rule 123 (operator2 -> string_concatenation_operator .)
    SCONST          reduce using rule 123 (operator2 -> string_concatenation_operator .)
    NUM             reduce using rule 123 (operator2 -> string_concatenation_operator .)
    PRED            reduce using rule 123 (operator2 -> string_concatenation_operator .)
    SUCC            reduce using rule 123 (operator2 -> string_concatenation_operator .)
    UPPER           reduce using rule 123 (operator2 -> string_concatenation_operator .)
    LOWER           reduce using rule 123 (operator2 -> string_concatenation_operator .)
    LENGTH          reduce using rule 123 (operator2 -> string_concatenation_operator .)
    READ            reduce using rule 123 (operator2 -> string_concatenation_operator .)
    PRINT           reduce using rule 123 (operator2 -> string_concatenation_operator .)


state 164

    (124) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    ARROW           reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    LPAREN          reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    ID              reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    FALSE           reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    TRUE            reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    CCONST          reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    NULL            reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    SCONST          reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    NUM             reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    PRED            reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    SUCC            reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    UPPER           reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    LOWER           reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    LENGTH          reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    READ            reduce using rule 124 (arithmetic_additive_operator -> PLUS .)
    PRINT           reduce using rule 124 (arithmetic_additive_operator -> PLUS .)


state 165

    (12) procedure_statement -> label_id COLON procedure_definition . SEMICOL

    SEMICOL         shift and go to state 225


state 166

    (211) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (212) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (213) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (214) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL statement_list END
    (215) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL END
    (216) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL END
    (217) procedure_definition -> PROC . LPAREN RPAREN SEMICOL statement_list END
    (218) procedure_definition -> PROC . LPAREN RPAREN SEMICOL END

    LPAREN          shift and go to state 226


state 167

    (13) action_statement -> label_id COLON action . SEMICOL

    SEMICOL         shift and go to state 227


state 168

    (150) assignment_action -> location assigning_operator expression .

    SEMICOL         reduce using rule 150 (assignment_action -> location assigning_operator expression .)


state 169

    (194) parameter -> expression .

    RPAREN          reduce using rule 194 (parameter -> expression .)
    COMMA           reduce using rule 194 (parameter -> expression .)


state 170

    (190) procedure_call -> procedure_name LPAREN parameter_list . RPAREN
    (192) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 228
    COMMA           shift and go to state 229


state 171

    (191) procedure_call -> procedure_name LPAREN RPAREN .

    ARROW           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    TIMES           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    DIVIDE          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    PERC            reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    PLUS            reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    MINUS           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    CONCAT          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    AND             reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    OR              reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    EQUALS          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    DIF             reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    GTR             reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    GEQ             reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    LSS             reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    LEQ             reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    IN              reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    RBRACK          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    COMMA           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    RPAREN          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    LBRACK          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    SEMICOL         reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    ASSIGN          reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    PLUSASSIGN      reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    MINUSASSIGN     reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    TIMESASSIGN     reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    DIVIDEASSIGN    reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    PERCASSIGN      reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    CONCATASSIGN    reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    THEN            reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    COLON           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    DOWN            reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    BY              reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    TO              reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    ELSE            reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    ELSIF           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    FI              reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)
    WHILE           reduce using rule 191 (procedure_call -> procedure_name LPAREN RPAREN .)


state 172

    (193) parameter_list -> parameter .

    RPAREN          reduce using rule 193 (parameter_list -> parameter .)
    COMMA           reduce using rule 193 (parameter_list -> parameter .)


state 173

    (27) mode_definition -> identifier_list ASSIGN . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    reference_mode                 shift and go to state 189
    array_mode                     shift and go to state 182
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    discrete_mode                  shift and go to state 194
    mode_name                      shift and go to state 195
    mode                           shift and go to state 230
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    string_mode                    shift and go to state 185
    discrete_range_mode            shift and go to state 186
    character_mode                 shift and go to state 188

state 174

    (57) identifier_list -> identifier_list COMMA . identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    identifier                     shift and go to state 231

state 175

    (11) newmode_statement -> TYPE newmode_list SEMICOL .

    DCL             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SYN             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    TYPE            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    ID              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    EXIT            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    RETURN          reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    RESULT          reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    IF              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    DO              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    NUM             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    PRED            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SUCC            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    UPPER           reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    LOWER           reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    LENGTH          reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    READ            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    PRINT           reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    $end            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    END             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)


state 176

    (25) newmode_list -> newmode_list COMMA . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    identifier                     shift and go to state 111
    identifier_list                shift and go to state 110
    mode_definition                shift and go to state 232

state 177

    (158) if_action -> IF boolean_expression then_clause . else_clause FI
    (159) if_action -> IF boolean_expression then_clause . FI
    (162) else_clause -> . ELSE action_statement_list
    (163) else_clause -> . ELSE empty
    (164) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (165) else_clause -> . ELSIF boolean_expression then_clause

    FI              shift and go to state 233
    ELSE            shift and go to state 236
    ELSIF           shift and go to state 235

    else_clause                    shift and go to state 234

state 178

    (160) then_clause -> THEN . action_statement_list
    (161) then_clause -> THEN . empty
    (139) action_statement_list -> . action_statement_list action_statement
    (140) action_statement_list -> . action_statement
    (228) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    FI              reduce using rule 228 (empty -> .)
    ELSE            reduce using rule 228 (empty -> .)
    ELSIF           reduce using rule 228 (empty -> .)
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 50
    string_slice                   shift and go to state 22
    empty                          shift and go to state 238
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    action_statement_list          shift and go to state 237
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 58

state 179

    (9) declaration_statement -> DCL declaration_list SEMICOL .

    END             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    DCL             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    SYN             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    TYPE            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    ID              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    EXIT            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    RETURN          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    RESULT          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    IF              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    DO              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    NUM             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    PRED            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    SUCC            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    UPPER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    LOWER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    LENGTH          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    READ            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    PRINT           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    $end            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)


state 180

    (15) declaration_list -> declaration_list COMMA . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    identifier                     shift and go to state 111
    identifier_list                shift and go to state 116
    declaration                    shift and go to state 239

state 181

    (48) string_mode -> CHARS . LBRACK string_length RBRACK

    LBRACK          shift and go to state 240


state 182

    (47) composite_mode -> array_mode .

    ASSIGN          reduce using rule 47 (composite_mode -> array_mode .)
    SEMICOL         reduce using rule 47 (composite_mode -> array_mode .)
    COMMA           reduce using rule 47 (composite_mode -> array_mode .)
    LOC             reduce using rule 47 (composite_mode -> array_mode .)
    RPAREN          reduce using rule 47 (composite_mode -> array_mode .)


state 183

    (33) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    SEMICOL         reduce using rule 33 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 33 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 33 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    WHILE           reduce using rule 33 (discrete_mode -> boolean_mode .)
    RBRACK          reduce using rule 33 (discrete_mode -> boolean_mode .)


state 184

    (32) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> integer_mode .)
    SEMICOL         reduce using rule 32 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 32 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    WHILE           reduce using rule 32 (discrete_mode -> integer_mode .)
    RBRACK          reduce using rule 32 (discrete_mode -> integer_mode .)


state 185

    (46) composite_mode -> string_mode .

    ASSIGN          reduce using rule 46 (composite_mode -> string_mode .)
    SEMICOL         reduce using rule 46 (composite_mode -> string_mode .)
    COMMA           reduce using rule 46 (composite_mode -> string_mode .)
    LOC             reduce using rule 46 (composite_mode -> string_mode .)
    RPAREN          reduce using rule 46 (composite_mode -> string_mode .)


state 186

    (35) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    SEMICOL         reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    WHILE           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RBRACK          reduce using rule 35 (discrete_mode -> discrete_range_mode .)


state 187

    (36) integer_mode -> INT .

    LPAREN          reduce using rule 36 (integer_mode -> INT .)
    LOC             reduce using rule 36 (integer_mode -> INT .)
    RPAREN          reduce using rule 36 (integer_mode -> INT .)
    COMMA           reduce using rule 36 (integer_mode -> INT .)
    WHILE           reduce using rule 36 (integer_mode -> INT .)
    SEMICOL         reduce using rule 36 (integer_mode -> INT .)
    RBRACK          reduce using rule 36 (integer_mode -> INT .)
    ASSIGN          reduce using rule 36 (integer_mode -> INT .)


state 188

    (34) discrete_mode -> character_mode .

    LPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 34 (discrete_mode -> character_mode .)
    SEMICOL         reduce using rule 34 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 34 (discrete_mode -> character_mode .)
    LOC             reduce using rule 34 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    WHILE           reduce using rule 34 (discrete_mode -> character_mode .)
    RBRACK          reduce using rule 34 (discrete_mode -> character_mode .)


state 189

    (30) mode -> reference_mode .

    ASSIGN          reduce using rule 30 (mode -> reference_mode .)
    SEMICOL         reduce using rule 30 (mode -> reference_mode .)
    COMMA           reduce using rule 30 (mode -> reference_mode .)
    RPAREN          reduce using rule 30 (mode -> reference_mode .)
    LOC             reduce using rule 30 (mode -> reference_mode .)


state 190

    (50) array_mode -> ARRAY . LBRACK index_mode_list RBRACK element_mode

    LBRACK          shift and go to state 241


state 191

    (37) boolean_mode -> BOOL .

    LPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    LOC             reduce using rule 37 (boolean_mode -> BOOL .)
    WHILE           reduce using rule 37 (boolean_mode -> BOOL .)
    SEMICOL         reduce using rule 37 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 37 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 37 (boolean_mode -> BOOL .)
    RBRACK          reduce using rule 37 (boolean_mode -> BOOL .)


state 192

    (38) character_mode -> CHAR .

    LPAREN          reduce using rule 38 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 38 (character_mode -> CHAR .)
    RBRACK          reduce using rule 38 (character_mode -> CHAR .)
    COMMA           reduce using rule 38 (character_mode -> CHAR .)
    SEMICOL         reduce using rule 38 (character_mode -> CHAR .)
    LOC             reduce using rule 38 (character_mode -> CHAR .)
    RPAREN          reduce using rule 38 (character_mode -> CHAR .)
    WHILE           reduce using rule 38 (character_mode -> CHAR .)


state 193

    (17) declaration -> identifier_list mode . initialization
    (18) declaration -> identifier_list mode .
    (19) initialization -> . ASSIGN expression

    SEMICOL         reduce using rule 18 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 18 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 242

    initialization                 shift and go to state 243

state 194

    (29) mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 29 (mode -> discrete_mode .)
    SEMICOL         reduce using rule 29 (mode -> discrete_mode .)
    COMMA           reduce using rule 29 (mode -> discrete_mode .)
    RPAREN          reduce using rule 29 (mode -> discrete_mode .)
    LOC             reduce using rule 29 (mode -> discrete_mode .)
    LPAREN          shift and go to state 244


state 195

    (28) mode -> mode_name .

    ASSIGN          reduce using rule 28 (mode -> mode_name .)
    SEMICOL         reduce using rule 28 (mode -> mode_name .)
    COMMA           reduce using rule 28 (mode -> mode_name .)
    RPAREN          reduce using rule 28 (mode -> mode_name .)
    LOC             reduce using rule 28 (mode -> mode_name .)


state 196

    (31) mode -> composite_mode .

    ASSIGN          reduce using rule 31 (mode -> composite_mode .)
    SEMICOL         reduce using rule 31 (mode -> composite_mode .)
    COMMA           reduce using rule 31 (mode -> composite_mode .)
    RPAREN          reduce using rule 31 (mode -> composite_mode .)
    LOC             reduce using rule 31 (mode -> composite_mode .)


state 197

    (41) mode_name -> identifier .
    (39) discrete_range_mode -> identifier . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 41 (mode_name -> identifier .)
    SEMICOL         reduce using rule 41 (mode_name -> identifier .)
    COMMA           reduce using rule 41 (mode_name -> identifier .)
    LOC             reduce using rule 41 (mode_name -> identifier .)
    RPAREN          reduce using rule 41 (mode_name -> identifier .)
    LPAREN          shift and go to state 245


state 198

    (45) reference_mode -> REF . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    reference_mode                 shift and go to state 189
    array_mode                     shift and go to state 182
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    discrete_mode                  shift and go to state 194
    mode_name                      shift and go to state 195
    mode                           shift and go to state 246
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    string_mode                    shift and go to state 185
    discrete_range_mode            shift and go to state 186
    character_mode                 shift and go to state 188

state 199

    (10) synonym_statement -> SYN synonym_list SEMICOL .

    END             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    DCL             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    SYN             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    TYPE            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    ID              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    EXIT            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    RETURN          reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    RESULT          reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    IF              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    DO              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    NUM             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    PRED            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    SUCC            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    UPPER           reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    LOWER           reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    LENGTH          reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    READ            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    PRINT           reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    $end            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)


state 200

    (20) synonym_list -> synonym_list COMMA . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    synonym_definition             shift and go to state 247
    identifier                     shift and go to state 111
    identifier_list                shift and go to state 120

state 201

    (23) synonym_definition -> identifier_list ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 248
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    constant_expression            shift and go to state 249
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 202

    (22) synonym_definition -> identifier_list mode . ASSIGN constant_expression

    ASSIGN          shift and go to state 250


state 203

    (69) start_element -> integer_expression .
    (71) left_element -> integer_expression .

    RBRACK          reduce using rule 69 (start_element -> integer_expression .)
    COLON           reduce using rule 71 (left_element -> integer_expression .)


state 204

    (68) string_element -> identifier LBRACK start_element . RBRACK

    RBRACK          shift and go to state 251


state 205

    (70) string_slice -> identifier LBRACK left_element . COLON right_element RBRACK

    COLON           shift and go to state 252


state 206

    (101) integer_expression -> expression .

    RBRACK          reduce using rule 101 (integer_expression -> expression .)
    COLON           reduce using rule 101 (integer_expression -> expression .)
    DOWN            reduce using rule 101 (integer_expression -> expression .)
    TO              reduce using rule 101 (integer_expression -> expression .)


state 207

    (201) builtin_call -> builtin_name LPAREN parameter_list . RPAREN
    (192) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 253
    COMMA           shift and go to state 229


state 208

    (202) builtin_call -> builtin_name LPAREN RPAREN .

    ARROW           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    TIMES           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVIDE          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    PERC            reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    PLUS            reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    MINUS           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    CONCAT          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    AND             reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    OR              reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    EQUALS          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIF             reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    GTR             reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    GEQ             reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    LSS             reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    LEQ             reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    IN              reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    RBRACK          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    LBRACK          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    SEMICOL         reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    ASSIGN          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    PLUSASSIGN      reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    MINUSASSIGN     reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    TIMESASSIGN     reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVIDEASSIGN    reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    PERCASSIGN      reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    CONCATASSIGN    reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    THEN            reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    COMMA           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    COLON           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    RPAREN          reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    DOWN            reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    BY              reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    TO              reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSE            reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSIF           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    FI              reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)
    WHILE           reduce using rule 202 (builtin_call -> builtin_name LPAREN RPAREN .)


state 209

    (74) array_slice -> array_location LBRACK lower_bound COLON . upper_bound RBRACK
    (44) upper_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 254
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    upper_bound                    shift and go to state 255
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 210

    (95) expression_list -> expression_list COMMA . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 256
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 211

    (73) array_element -> array_location LBRACK expression_list RBRACK .

    ARROW           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    TIMES           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIVIDE          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    PERC            reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    PLUS            reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    MINUS           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    CONCAT          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    AND             reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    OR              reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    EQUALS          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIF             reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    GTR             reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    GEQ             reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    LSS             reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    LEQ             reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    IN              reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    COLON           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    LBRACK          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    RPAREN          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    COMMA           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    ASSIGN          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    PLUSASSIGN      reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    MINUSASSIGN     reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    TIMESASSIGN     reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIVIDEASSIGN    reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    PERCASSIGN      reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    CONCATASSIGN    reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    THEN            reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    SEMICOL         reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    RBRACK          reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    WHILE           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    DOWN            reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    BY              reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    TO              reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    ELSE            reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    ELSIF           reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)
    FI              reduce using rule 73 (array_element -> array_location LBRACK expression_list RBRACK .)


state 212

    (176) step_enumeration -> loop_counter ASSIGN . start_value step_value DOWN end_value
    (177) step_enumeration -> loop_counter ASSIGN . start_value step_value end_value
    (178) step_enumeration -> loop_counter ASSIGN . start_value DOWN end_value
    (179) step_enumeration -> loop_counter ASSIGN . start_value end_value
    (181) start_value -> . discrete_expression
    (184) discrete_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 257
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    discrete_expression            shift and go to state 258
    start_value                    shift and go to state 259
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    empty_literal                  shift and go to state 71
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    referenced_location            shift and go to state 84
    value_array_element            shift and go to state 86
    location                       shift and go to state 87
    boolean_literal                shift and go to state 88
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    primitive_value                shift and go to state 92

state 213

    (186) range_enumeration -> loop_counter IN . discrete_mode
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (58) identifier -> . ID

    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    ID              shift and go to state 38

    discrete_mode                  shift and go to state 260
    discrete_range_mode            shift and go to state 186
    identifier                     shift and go to state 261
    integer_mode                   shift and go to state 184
    boolean_mode                   shift and go to state 183
    character_mode                 shift and go to state 188

state 214

    (185) range_enumeration -> loop_counter DOWN . IN discrete_mode

    IN              shift and go to state 262


state 215

    (166) do_action -> DO control_part SEMICOL action_statement_list . OD
    (139) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    OD              shift and go to state 263
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    label_id                       shift and go to state 50
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    string_slice                   shift and go to state 22
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    assignment_action              shift and go to state 43
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 133

state 216

    (167) do_action -> DO control_part SEMICOL OD .

    SEMICOL         reduce using rule 167 (do_action -> DO control_part SEMICOL OD .)


state 217

    (128) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PERC            reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    CONCAT          reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUALS          reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIF             reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GTR             reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GEQ             reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LSS             reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LEQ             reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACK          reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    THEN            reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    WHILE           reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMICOL         reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    FI              reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DOWN            reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    BY              reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    TO              reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSE            reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSIF           reduce using rule 128 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 218

    (108) operand0 -> operand0 operator1 operand1 .
    (121) operand1 -> operand1 . operator2 operand2
    (122) operator2 -> . arithmetic_additive_operator
    (123) operator2 -> . string_concatenation_operator
    (124) arithmetic_additive_operator -> . PLUS
    (125) arithmetic_additive_operator -> . MINUS
    (126) string_concatenation_operator -> . CONCAT

    AND             reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    EQUALS          reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    DIF             reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    GTR             reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    GEQ             reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    LSS             reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    LEQ             reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    DOWN            reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    TO              reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    SEMICOL         reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    FI              reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    THEN            reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    RBRACK          reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    WHILE           reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    ELSE            reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    ELSIF           reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    BY              reduce using rule 108 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 164
    MINUS           shift and go to state 159
    CONCAT          shift and go to state 162

    arithmetic_additive_operator   shift and go to state 160
    operator2                      shift and go to state 161
    string_concatenation_operator  shift and go to state 163

state 219

    (94) parenthesized_expression -> LPAREN expression RPAREN .

    TIMES           reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    PERC            reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    CONCAT          reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIF             reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    GTR             reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    LSS             reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    LBRACK          reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    DOWN            reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    BY              reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSIF           reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 94 (parenthesized_expression -> LPAREN expression RPAREN .)


state 220

    (92) value_array_slice -> array_primitive_value LBRACK lower_bound . COLON upper_bound RBRACK

    COLON           shift and go to state 264


state 221

    (91) value_array_element -> array_primitive_value LBRACK expression_list . RBRACK
    (95) expression_list -> expression_list . COMMA expression

    RBRACK          shift and go to state 265
    COMMA           shift and go to state 210


state 222

    (103) then_expression -> THEN . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 266
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 223

    (99) conditional_expression -> IF boolean_expression then_expression . else_expression FI
    (100) conditional_expression -> IF boolean_expression then_expression . elsif_expression else_expression FI
    (104) else_expression -> . ELSE expression
    (105) elsif_expression -> . elsif_expression ELSIF boolean_expression then_expression
    (106) elsif_expression -> . ELSIF boolean_expression then_expression

    ELSE            shift and go to state 270
    ELSIF           shift and go to state 268

    elsif_expression               shift and go to state 269
    else_expression                shift and go to state 267

state 224

    (121) operand1 -> operand1 operator2 operand2 .
    (128) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (129) arithmetic_multiplicative_operator -> . TIMES
    (130) arithmetic_multiplicative_operator -> . DIVIDE
    (131) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    CONCAT          reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    EQUALS          reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    DIF             reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    GTR             reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    GEQ             reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    LSS             reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    LEQ             reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    ELSE            reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    ELSIF           reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    RBRACK          reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    THEN            reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    SEMICOL         reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    WHILE           reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    DOWN            reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    BY              reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    TO              reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    FI              reduce using rule 121 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 140
    DIVIDE          shift and go to state 138
    PERC            shift and go to state 137

    arithmetic_multiplicative_operator shift and go to state 139

state 225

    (12) procedure_statement -> label_id COLON procedure_definition SEMICOL .

    END             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    DCL             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SYN             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    TYPE            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    ID              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    EXIT            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    RETURN          reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    RESULT          reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    IF              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    DO              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    NUM             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    PRED            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SUCC            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    UPPER           reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    LOWER           reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    LENGTH          reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    READ            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    PRINT           reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    $end            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)


state 226

    (211) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (212) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL END
    (213) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL statement_list END
    (214) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL statement_list END
    (215) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL END
    (216) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL END
    (217) procedure_definition -> PROC LPAREN . RPAREN SEMICOL statement_list END
    (218) procedure_definition -> PROC LPAREN . RPAREN SEMICOL END
    (219) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (220) formal_parameter_list -> . formal_parameter
    (221) formal_parameter -> . identifier_list parameter_spec
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    RPAREN          shift and go to state 271
    ID              shift and go to state 38

    formal_parameter_list          shift and go to state 273
    formal_parameter               shift and go to state 274
    identifier                     shift and go to state 111
    identifier_list                shift and go to state 272

state 227

    (13) action_statement -> label_id COLON action SEMICOL .

    ID              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    EXIT            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    RETURN          reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    RESULT          reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    IF              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    DO              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    NUM             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    PRED            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    SUCC            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    UPPER           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    LOWER           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    LENGTH          reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    READ            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    PRINT           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    FI              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    DCL             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    SYN             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    TYPE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    $end            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    END             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    OD              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSIF           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)


state 228

    (190) procedure_call -> procedure_name LPAREN parameter_list RPAREN .

    ARROW           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PERC            reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    CONCAT          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    AND             reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    OR              reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    EQUALS          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DIF             reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    GTR             reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    GEQ             reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    LSS             reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    LEQ             reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    IN              reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    RBRACK          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    LBRACK          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    SEMICOL         reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PLUSASSIGN      reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    MINUSASSIGN     reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    TIMESASSIGN     reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DIVIDEASSIGN    reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    PERCASSIGN      reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    CONCATASSIGN    reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    BY              reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    TO              reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    FI              reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 190 (procedure_call -> procedure_name LPAREN parameter_list RPAREN .)


state 229

    (192) parameter_list -> parameter_list COMMA . parameter
    (194) parameter -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 169
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    parameter                      shift and go to state 275
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 230

    (27) mode_definition -> identifier_list ASSIGN mode .

    SEMICOL         reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)


state 231

    (57) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)
    ASSIGN          reduce using rule 57 (identifier_list -> identifier_list COMMA identifier .)


state 232

    (25) newmode_list -> newmode_list COMMA mode_definition .

    SEMICOL         reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)


state 233

    (159) if_action -> IF boolean_expression then_clause FI .

    SEMICOL         reduce using rule 159 (if_action -> IF boolean_expression then_clause FI .)


state 234

    (158) if_action -> IF boolean_expression then_clause else_clause . FI

    FI              shift and go to state 276


state 235

    (164) else_clause -> ELSIF . boolean_expression then_clause else_clause
    (165) else_clause -> ELSIF . boolean_expression then_clause
    (102) boolean_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 113
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    boolean_expression             shift and go to state 277
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand4                       shift and go to state 62
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    operand0                       shift and go to state 70
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    referenced_location            shift and go to state 84
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 236

    (162) else_clause -> ELSE . action_statement_list
    (163) else_clause -> ELSE . empty
    (139) action_statement_list -> . action_statement_list action_statement
    (140) action_statement_list -> . action_statement
    (228) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    FI              reduce using rule 228 (empty -> .)
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 50
    string_slice                   shift and go to state 22
    empty                          shift and go to state 279
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    action_statement_list          shift and go to state 278
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 58

state 237

    (160) then_clause -> THEN action_statement_list .
    (139) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    FI              reduce using rule 160 (then_clause -> THEN action_statement_list .)
    ELSE            reduce using rule 160 (then_clause -> THEN action_statement_list .)
    ELSIF           reduce using rule 160 (then_clause -> THEN action_statement_list .)
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 50
    string_slice                   shift and go to state 22
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 133

state 238

    (161) then_clause -> THEN empty .

    FI              reduce using rule 161 (then_clause -> THEN empty .)
    ELSE            reduce using rule 161 (then_clause -> THEN empty .)
    ELSIF           reduce using rule 161 (then_clause -> THEN empty .)


state 239

    (15) declaration_list -> declaration_list COMMA declaration .

    SEMICOL         reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)


state 240

    (48) string_mode -> CHARS LBRACK . string_length RBRACK
    (49) string_length -> . integer_literal
    (85) integer_literal -> . ICONST

    ICONST          shift and go to state 65

    integer_literal                shift and go to state 280
    string_length                  shift and go to state 281

state 241

    (50) array_mode -> ARRAY LBRACK . index_mode_list RBRACK element_mode
    (51) index_mode_list -> . index_mode_list COMMA index_mode
    (52) index_mode_list -> . index_mode
    (53) index_mode -> . discrete_mode
    (54) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (42) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (43) lower_bound -> . expression
    (58) identifier -> . ID
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    ID              shift and go to state 38
    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    index_mode_list                shift and go to state 282
    literal                        shift and go to state 60
    expression                     shift and go to state 283
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    boolean_mode                   shift and go to state 183
    operand2                       shift and go to state 64
    literal_range                  shift and go to state 286
    discrete_range_mode            shift and go to state 186
    string_element                 shift and go to state 9
    character_mode                 shift and go to state 188
    integer_mode                   shift and go to state 184
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    operand3                       shift and go to state 66
    operand0                       shift and go to state 70
    location                       shift and go to state 87
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    lower_bound                    shift and go to state 284
    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    array_location                 shift and go to state 1
    empty_literal                  shift and go to state 71
    discrete_mode                  shift and go to state 287
    referenced_location            shift and go to state 84
    boolean_literal                shift and go to state 88
    operand1                       shift and go to state 90
    identifier                     shift and go to state 288
    index_mode                     shift and go to state 285
    primitive_value                shift and go to state 92

state 242

    (19) initialization -> ASSIGN . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 289
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 243

    (17) declaration -> identifier_list mode initialization .

    SEMICOL         reduce using rule 17 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 17 (declaration -> identifier_list mode initialization .)


state 244

    (40) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (42) literal_range -> . lower_bound COLON upper_bound
    (43) lower_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 283
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    literal_range                  shift and go to state 290
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    lower_bound                    shift and go to state 284
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 245

    (39) discrete_range_mode -> identifier LPAREN . literal_range RPAREN
    (42) literal_range -> . lower_bound COLON upper_bound
    (43) lower_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 283
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    literal_range                  shift and go to state 291
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    lower_bound                    shift and go to state 284
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 246

    (45) reference_mode -> REF mode .

    RPAREN          reduce using rule 45 (reference_mode -> REF mode .)
    LOC             reduce using rule 45 (reference_mode -> REF mode .)
    SEMICOL         reduce using rule 45 (reference_mode -> REF mode .)
    COMMA           reduce using rule 45 (reference_mode -> REF mode .)
    ASSIGN          reduce using rule 45 (reference_mode -> REF mode .)


state 247

    (20) synonym_list -> synonym_list COMMA synonym_definition .

    SEMICOL         reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)
    COMMA           reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)


state 248

    (24) constant_expression -> expression .

    SEMICOL         reduce using rule 24 (constant_expression -> expression .)
    COMMA           reduce using rule 24 (constant_expression -> expression .)


state 249

    (23) synonym_definition -> identifier_list ASSIGN constant_expression .

    SEMICOL         reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)
    COMMA           reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)


state 250

    (22) synonym_definition -> identifier_list mode ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 248
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    constant_expression            shift and go to state 292
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 251

    (68) string_element -> identifier LBRACK start_element RBRACK .

    ARROW           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    TIMES           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    DIVIDE          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    PERC            reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    PLUS            reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    MINUS           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    CONCAT          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    AND             reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    OR              reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    EQUALS          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    DIF             reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    GTR             reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    GEQ             reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    LSS             reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    LEQ             reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    IN              reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    ELSE            reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    ELSIF           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    LBRACK          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    ASSIGN          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    PLUSASSIGN      reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    MINUSASSIGN     reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    TIMESASSIGN     reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    PERCASSIGN      reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    CONCATASSIGN    reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    THEN            reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    RPAREN          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    COMMA           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    SEMICOL         reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    RBRACK          reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    COLON           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    DOWN            reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    BY              reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    TO              reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    FI              reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)
    WHILE           reduce using rule 68 (string_element -> identifier LBRACK start_element RBRACK .)


state 252

    (70) string_slice -> identifier LBRACK left_element COLON . right_element RBRACK
    (72) right_element -> . integer_expression
    (101) integer_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 206
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    integer_expression             shift and go to state 293
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    location                       shift and go to state 87
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    right_element                  shift and go to state 294
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    character_literal              shift and go to state 69
    boolean_literal                shift and go to state 88

state 253

    (201) builtin_call -> builtin_name LPAREN parameter_list RPAREN .

    ARROW           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PERC            reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    CONCAT          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    AND             reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    OR              reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    EQUALS          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIF             reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GTR             reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GEQ             reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LSS             reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LEQ             reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    IN              reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RBRACK          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LBRACK          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    SEMICOL         reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PLUSASSIGN      reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MINUSASSIGN     reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TIMESASSIGN     reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVIDEASSIGN    reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PERCASSIGN      reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    CONCATASSIGN    reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    BY              reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TO              reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    FI              reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 201 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)


state 254

    (44) upper_bound -> expression .

    RBRACK          reduce using rule 44 (upper_bound -> expression .)
    COMMA           reduce using rule 44 (upper_bound -> expression .)
    RPAREN          reduce using rule 44 (upper_bound -> expression .)


state 255

    (74) array_slice -> array_location LBRACK lower_bound COLON upper_bound . RBRACK

    RBRACK          shift and go to state 295


state 256

    (95) expression_list -> expression_list COMMA expression .

    RBRACK          reduce using rule 95 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 95 (expression_list -> expression_list COMMA expression .)


state 257

    (184) discrete_expression -> expression .

    DOWN            reduce using rule 184 (discrete_expression -> expression .)
    BY              reduce using rule 184 (discrete_expression -> expression .)
    TO              reduce using rule 184 (discrete_expression -> expression .)
    WHILE           reduce using rule 184 (discrete_expression -> expression .)
    SEMICOL         reduce using rule 184 (discrete_expression -> expression .)


state 258

    (181) start_value -> discrete_expression .

    DOWN            reduce using rule 181 (start_value -> discrete_expression .)
    BY              reduce using rule 181 (start_value -> discrete_expression .)
    TO              reduce using rule 181 (start_value -> discrete_expression .)


state 259

    (176) step_enumeration -> loop_counter ASSIGN start_value . step_value DOWN end_value
    (177) step_enumeration -> loop_counter ASSIGN start_value . step_value end_value
    (178) step_enumeration -> loop_counter ASSIGN start_value . DOWN end_value
    (179) step_enumeration -> loop_counter ASSIGN start_value . end_value
    (182) step_value -> . BY integer_expression
    (183) end_value -> . TO discrete_expression

    DOWN            shift and go to state 296
    BY              shift and go to state 299
    TO              shift and go to state 300

    end_value                      shift and go to state 298
    step_value                     shift and go to state 297

state 260

    (186) range_enumeration -> loop_counter IN discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    WHILE           reduce using rule 186 (range_enumeration -> loop_counter IN discrete_mode .)
    SEMICOL         reduce using rule 186 (range_enumeration -> loop_counter IN discrete_mode .)
    LPAREN          shift and go to state 244


state 261

    (39) discrete_range_mode -> identifier . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 245


state 262

    (185) range_enumeration -> loop_counter DOWN IN . discrete_mode
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (58) identifier -> . ID

    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    ID              shift and go to state 38

    discrete_mode                  shift and go to state 301
    discrete_range_mode            shift and go to state 186
    identifier                     shift and go to state 261
    integer_mode                   shift and go to state 184
    boolean_mode                   shift and go to state 183
    character_mode                 shift and go to state 188

state 263

    (166) do_action -> DO control_part SEMICOL action_statement_list OD .

    SEMICOL         reduce using rule 166 (do_action -> DO control_part SEMICOL action_statement_list OD .)


state 264

    (92) value_array_slice -> array_primitive_value LBRACK lower_bound COLON . upper_bound RBRACK
    (44) upper_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 254
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    upper_bound                    shift and go to state 302
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 265

    (91) value_array_element -> array_primitive_value LBRACK expression_list RBRACK .

    TIMES           reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    DIVIDE          reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    PERC            reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    PLUS            reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    MINUS           reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    CONCAT          reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    AND             reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    OR              reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    EQUALS          reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    DIF             reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    GTR             reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    GEQ             reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    LSS             reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    LEQ             reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    IN              reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    DOWN            reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    BY              reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    TO              reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    LBRACK          reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    SEMICOL         reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    COMMA           reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    RPAREN          reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    RBRACK          reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    THEN            reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    COLON           reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    ELSE            reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    ELSIF           reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    FI              reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)
    WHILE           reduce using rule 91 (value_array_element -> array_primitive_value LBRACK expression_list RBRACK .)


state 266

    (103) then_expression -> THEN expression .

    ELSIF           reduce using rule 103 (then_expression -> THEN expression .)
    ELSE            reduce using rule 103 (then_expression -> THEN expression .)


state 267

    (99) conditional_expression -> IF boolean_expression then_expression else_expression . FI

    FI              shift and go to state 303


state 268

    (106) elsif_expression -> ELSIF . boolean_expression then_expression
    (102) boolean_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 113
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    boolean_expression             shift and go to state 304
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 269

    (100) conditional_expression -> IF boolean_expression then_expression elsif_expression . else_expression FI
    (105) elsif_expression -> elsif_expression . ELSIF boolean_expression then_expression
    (104) else_expression -> . ELSE expression

    ELSIF           shift and go to state 306
    ELSE            shift and go to state 270

    else_expression                shift and go to state 305

state 270

    (104) else_expression -> ELSE . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 307
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 271

    (214) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL statement_list END
    (216) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL END
    (217) procedure_definition -> PROC LPAREN RPAREN . SEMICOL statement_list END
    (218) procedure_definition -> PROC LPAREN RPAREN . SEMICOL END
    (225) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (226) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 310
    RETURNS         shift and go to state 309

    result_spec                    shift and go to state 308

state 272

    (221) formal_parameter -> identifier_list . parameter_spec
    (57) identifier_list -> identifier_list . COMMA identifier
    (222) parameter_spec -> . mode parameter_attribute
    (223) parameter_spec -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    COMMA           shift and go to state 174
    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    reference_mode                 shift and go to state 189
    array_mode                     shift and go to state 182
    discrete_mode                  shift and go to state 194
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    parameter_spec                 shift and go to state 311
    mode_name                      shift and go to state 195
    mode                           shift and go to state 312
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    discrete_range_mode            shift and go to state 186
    string_mode                    shift and go to state 185
    character_mode                 shift and go to state 188

state 273

    (211) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL statement_list END
    (212) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL END
    (213) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL statement_list END
    (215) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL END
    (219) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 313
    COMMA           shift and go to state 314


state 274

    (220) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 220 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 220 (formal_parameter_list -> formal_parameter .)


state 275

    (192) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 192 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 192 (parameter_list -> parameter_list COMMA parameter .)


state 276

    (158) if_action -> IF boolean_expression then_clause else_clause FI .

    SEMICOL         reduce using rule 158 (if_action -> IF boolean_expression then_clause else_clause FI .)


state 277

    (164) else_clause -> ELSIF boolean_expression . then_clause else_clause
    (165) else_clause -> ELSIF boolean_expression . then_clause
    (160) then_clause -> . THEN action_statement_list
    (161) then_clause -> . THEN empty

    THEN            shift and go to state 178

    then_clause                    shift and go to state 315

state 278

    (162) else_clause -> ELSE action_statement_list .
    (139) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    FI              reduce using rule 162 (else_clause -> ELSE action_statement_list .)
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    action                         shift and go to state 25
    array_element                  shift and go to state 26
    bracketed_action               shift and go to state 19
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    dereferenced_reference         shift and go to state 11
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 50
    string_slice                   shift and go to state 22
    string_element                 shift and go to state 9
    builtin_call                   shift and go to state 36
    location_name                  shift and go to state 35
    result_action                  shift and go to state 33
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    array_location                 shift and go to state 1
    do_action                      shift and go to state 16
    if_action                      shift and go to state 41
    return_action                  shift and go to state 17
    location                       shift and go to state 30
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 133

state 279

    (163) else_clause -> ELSE empty .

    FI              reduce using rule 163 (else_clause -> ELSE empty .)


state 280

    (49) string_length -> integer_literal .

    RBRACK          reduce using rule 49 (string_length -> integer_literal .)


state 281

    (48) string_mode -> CHARS LBRACK string_length . RBRACK

    RBRACK          shift and go to state 316


state 282

    (50) array_mode -> ARRAY LBRACK index_mode_list . RBRACK element_mode
    (51) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACK          shift and go to state 317
    COMMA           shift and go to state 318


state 283

    (43) lower_bound -> expression .

    COLON           reduce using rule 43 (lower_bound -> expression .)


state 284

    (42) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 319


state 285

    (52) index_mode_list -> index_mode .

    RBRACK          reduce using rule 52 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 52 (index_mode_list -> index_mode .)


state 286

    (54) index_mode -> literal_range .

    RBRACK          reduce using rule 54 (index_mode -> literal_range .)
    COMMA           reduce using rule 54 (index_mode -> literal_range .)


state 287

    (53) index_mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACK          reduce using rule 53 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 53 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 244


state 288

    (39) discrete_range_mode -> identifier . LPAREN literal_range RPAREN
    (66) location_name -> identifier .
    (68) string_element -> identifier . LBRACK start_element RBRACK
    (70) string_slice -> identifier . LBRACK left_element COLON right_element RBRACK
    (195) procedure_name -> identifier .

  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 245
    ARROW           reduce using rule 66 (location_name -> identifier .)
    TIMES           reduce using rule 66 (location_name -> identifier .)
    DIVIDE          reduce using rule 66 (location_name -> identifier .)
    PERC            reduce using rule 66 (location_name -> identifier .)
    PLUS            reduce using rule 66 (location_name -> identifier .)
    MINUS           reduce using rule 66 (location_name -> identifier .)
    CONCAT          reduce using rule 66 (location_name -> identifier .)
    AND             reduce using rule 66 (location_name -> identifier .)
    OR              reduce using rule 66 (location_name -> identifier .)
    EQUALS          reduce using rule 66 (location_name -> identifier .)
    DIF             reduce using rule 66 (location_name -> identifier .)
    GTR             reduce using rule 66 (location_name -> identifier .)
    GEQ             reduce using rule 66 (location_name -> identifier .)
    LSS             reduce using rule 66 (location_name -> identifier .)
    LEQ             reduce using rule 66 (location_name -> identifier .)
    IN              reduce using rule 66 (location_name -> identifier .)
    COLON           reduce using rule 66 (location_name -> identifier .)
    LBRACK          shift and go to state 121

  ! LBRACK          [ reduce using rule 66 (location_name -> identifier .) ]
  ! LPAREN          [ reduce using rule 195 (procedure_name -> identifier .) ]


state 289

    (19) initialization -> ASSIGN expression .

    SEMICOL         reduce using rule 19 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 19 (initialization -> ASSIGN expression .)


state 290

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 320


state 291

    (39) discrete_range_mode -> identifier LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 321


state 292

    (22) synonym_definition -> identifier_list mode ASSIGN constant_expression .

    SEMICOL         reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)
    COMMA           reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)


state 293

    (72) right_element -> integer_expression .

    RBRACK          reduce using rule 72 (right_element -> integer_expression .)


state 294

    (70) string_slice -> identifier LBRACK left_element COLON right_element . RBRACK

    RBRACK          shift and go to state 322


state 295

    (74) array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .

    ARROW           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ASSIGN          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUSASSIGN      reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUSASSIGN     reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TIMESASSIGN     reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDEASSIGN    reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PERCASSIGN      reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCATASSIGN    reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LBRACK          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TIMES           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDE          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PERC            reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUS            reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUS           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCAT          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    AND             reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    OR              reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    EQUALS          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIF             reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    GTR             reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    GEQ             reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LSS             reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LEQ             reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    IN              reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    RBRACK          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    COMMA           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    RPAREN          reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    SEMICOL         reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    COLON           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    THEN            reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DOWN            reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    BY              reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TO              reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSE            reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSIF           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    FI              reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    WHILE           reduce using rule 74 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)


state 296

    (178) step_enumeration -> loop_counter ASSIGN start_value DOWN . end_value
    (183) end_value -> . TO discrete_expression

    TO              shift and go to state 300

    end_value                      shift and go to state 323

state 297

    (176) step_enumeration -> loop_counter ASSIGN start_value step_value . DOWN end_value
    (177) step_enumeration -> loop_counter ASSIGN start_value step_value . end_value
    (183) end_value -> . TO discrete_expression

    DOWN            shift and go to state 324
    TO              shift and go to state 300

    end_value                      shift and go to state 325

state 298

    (179) step_enumeration -> loop_counter ASSIGN start_value end_value .

    WHILE           reduce using rule 179 (step_enumeration -> loop_counter ASSIGN start_value end_value .)
    SEMICOL         reduce using rule 179 (step_enumeration -> loop_counter ASSIGN start_value end_value .)


state 299

    (182) step_value -> BY . integer_expression
    (101) integer_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 206
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    integer_expression             shift and go to state 326
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    character_literal              shift and go to state 69
    boolean_literal                shift and go to state 88

state 300

    (183) end_value -> TO . discrete_expression
    (184) discrete_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 257
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    dereferenced_reference         shift and go to state 11
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    discrete_expression            shift and go to state 327
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    character_string_literal       shift and go to state 79
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 301

    (185) range_enumeration -> loop_counter DOWN IN discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    WHILE           reduce using rule 185 (range_enumeration -> loop_counter DOWN IN discrete_mode .)
    SEMICOL         reduce using rule 185 (range_enumeration -> loop_counter DOWN IN discrete_mode .)
    LPAREN          shift and go to state 244


state 302

    (92) value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound . RBRACK

    RBRACK          shift and go to state 328


state 303

    (99) conditional_expression -> IF boolean_expression then_expression else_expression FI .

    RBRACK          reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COMMA           reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    SEMICOL         reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    RPAREN          reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    THEN            reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    FI              reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COLON           reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    DOWN            reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    BY              reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    TO              reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    WHILE           reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSE            reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSIF           reduce using rule 99 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)


state 304

    (106) elsif_expression -> ELSIF boolean_expression . then_expression
    (103) then_expression -> . THEN expression

    THEN            shift and go to state 222

    then_expression                shift and go to state 329

state 305

    (100) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression . FI

    FI              shift and go to state 330


state 306

    (105) elsif_expression -> elsif_expression ELSIF . boolean_expression then_expression
    (102) boolean_expression -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 113
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    boolean_expression             shift and go to state 331
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 307

    (104) else_expression -> ELSE expression .

    FI              reduce using rule 104 (else_expression -> ELSE expression .)


state 308

    (214) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL statement_list END
    (216) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 332


state 309

    (225) result_spec -> RETURNS . LPAREN mode result_attribute RPAREN
    (226) result_spec -> RETURNS . LPAREN mode RPAREN

    LPAREN          shift and go to state 333


state 310

    (217) procedure_definition -> PROC LPAREN RPAREN SEMICOL . statement_list END
    (218) procedure_definition -> PROC LPAREN RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 334
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    statement_list                 shift and go to state 335
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 39
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 311

    (221) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 221 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 221 (formal_parameter -> identifier_list parameter_spec .)


state 312

    (222) parameter_spec -> mode . parameter_attribute
    (223) parameter_spec -> mode .
    (224) parameter_attribute -> . LOC

    RPAREN          reduce using rule 223 (parameter_spec -> mode .)
    COMMA           reduce using rule 223 (parameter_spec -> mode .)
    LOC             shift and go to state 336

    parameter_attribute            shift and go to state 337

state 313

    (211) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL statement_list END
    (212) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL END
    (213) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL statement_list END
    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL END
    (225) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (226) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 338
    RETURNS         shift and go to state 309

    result_spec                    shift and go to state 339

state 314

    (219) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (221) formal_parameter -> . identifier_list parameter_spec
    (56) identifier_list -> . identifier
    (57) identifier_list -> . identifier_list COMMA identifier
    (58) identifier -> . ID

    ID              shift and go to state 38

    identifier_list                shift and go to state 272
    formal_parameter               shift and go to state 340
    identifier                     shift and go to state 111

state 315

    (164) else_clause -> ELSIF boolean_expression then_clause . else_clause
    (165) else_clause -> ELSIF boolean_expression then_clause .
    (162) else_clause -> . ELSE action_statement_list
    (163) else_clause -> . ELSE empty
    (164) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (165) else_clause -> . ELSIF boolean_expression then_clause

    FI              reduce using rule 165 (else_clause -> ELSIF boolean_expression then_clause .)
    ELSE            shift and go to state 236
    ELSIF           shift and go to state 235

    else_clause                    shift and go to state 341

state 316

    (48) string_mode -> CHARS LBRACK string_length RBRACK .

    SEMICOL         reduce using rule 48 (string_mode -> CHARS LBRACK string_length RBRACK .)
    COMMA           reduce using rule 48 (string_mode -> CHARS LBRACK string_length RBRACK .)
    ASSIGN          reduce using rule 48 (string_mode -> CHARS LBRACK string_length RBRACK .)
    LOC             reduce using rule 48 (string_mode -> CHARS LBRACK string_length RBRACK .)
    RPAREN          reduce using rule 48 (string_mode -> CHARS LBRACK string_length RBRACK .)


state 317

    (50) array_mode -> ARRAY LBRACK index_mode_list RBRACK . element_mode
    (55) element_mode -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    element_mode                   shift and go to state 342
    array_mode                     shift and go to state 182
    reference_mode                 shift and go to state 189
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    discrete_mode                  shift and go to state 194
    mode_name                      shift and go to state 195
    mode                           shift and go to state 343
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    string_mode                    shift and go to state 185
    discrete_range_mode            shift and go to state 186
    character_mode                 shift and go to state 188

state 318

    (51) index_mode_list -> index_mode_list COMMA . index_mode
    (53) index_mode -> . discrete_mode
    (54) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (42) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (43) lower_bound -> . expression
    (58) identifier -> . ID
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    ID              shift and go to state 38
    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 283
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    boolean_mode                   shift and go to state 183
    operand2                       shift and go to state 64
    literal_range                  shift and go to state 286
    discrete_range_mode            shift and go to state 186
    string_element                 shift and go to state 9
    character_mode                 shift and go to state 188
    integer_mode                   shift and go to state 184
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    operand3                       shift and go to state 66
    operand0                       shift and go to state 70
    location                       shift and go to state 87
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    lower_bound                    shift and go to state 284
    integer_literal                shift and go to state 74
    character_string_literal       shift and go to state 79
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    procedure_name                 shift and go to state 31
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    array_location                 shift and go to state 1
    empty_literal                  shift and go to state 71
    discrete_mode                  shift and go to state 287
    referenced_location            shift and go to state 84
    boolean_literal                shift and go to state 88
    operand1                       shift and go to state 90
    identifier                     shift and go to state 288
    index_mode                     shift and go to state 344
    primitive_value                shift and go to state 92

state 319

    (42) literal_range -> lower_bound COLON . upper_bound
    (44) upper_bound -> . expression
    (97) expression -> . operand0
    (98) expression -> . conditional_expression
    (107) operand0 -> . operand1
    (108) operand0 -> . operand0 operator1 operand1
    (99) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (100) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (120) operand1 -> . operand2
    (121) operand1 -> . operand1 operator2 operand2
    (127) operand2 -> . operand3
    (128) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (132) operand3 -> . MINUS operand4
    (133) operand3 -> . NOT operand4
    (134) operand3 -> . operand4
    (135) operand4 -> . location
    (136) operand4 -> . referenced_location
    (137) operand4 -> . primitive_value
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (138) referenced_location -> . ARROW location
    (76) primitive_value -> . literal
    (77) primitive_value -> . value_array_element
    (78) primitive_value -> . value_array_slice
    (79) primitive_value -> . parenthesized_expression
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (80) literal -> . integer_literal
    (81) literal -> . boolean_literal
    (82) literal -> . character_literal
    (83) literal -> . empty_literal
    (84) literal -> . character_string_literal
    (91) value_array_element -> . array_primitive_value LBRACK expression_list RBRACK
    (92) value_array_slice -> . array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK
    (94) parenthesized_expression -> . LPAREN expression RPAREN
    (58) identifier -> . ID
    (75) array_location -> . location
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (85) integer_literal -> . ICONST
    (86) boolean_literal -> . FALSE
    (87) boolean_literal -> . TRUE
    (88) character_literal -> . CCONST
    (89) empty_literal -> . NULL
    (90) character_string_literal -> . SCONST
    (93) array_primitive_value -> . primitive_value
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT

    IF              shift and go to state 82
    MINUS           shift and go to state 83
    NOT             shift and go to state 72
    ARROW           shift and go to state 89
    LPAREN          shift and go to state 76
    ID              shift and go to state 38
    ICONST          shift and go to state 65
    FALSE           shift and go to state 78
    TRUE            shift and go to state 59
    CCONST          shift and go to state 81
    NULL            shift and go to state 85
    SCONST          shift and go to state 68
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    literal                        shift and go to state 60
    expression                     shift and go to state 254
    operand4                       shift and go to state 62
    parenthesized_expression       shift and go to state 63
    operand2                       shift and go to state 64
    operand3                       shift and go to state 66
    character_string_literal       shift and go to state 79
    procedure_call                 shift and go to state 12
    call_action                    shift and go to state 67
    array_slice                    shift and go to state 14
    character_literal              shift and go to state 69
    string_element                 shift and go to state 9
    operand0                       shift and go to state 70
    string_slice                   shift and go to state 22
    conditional_expression         shift and go to state 73
    integer_literal                shift and go to state 74
    builtin_name                   shift and go to state 47
    array_element                  shift and go to state 26
    array_primitive_value          shift and go to state 77
    dereferenced_reference         shift and go to state 11
    value_array_slice              shift and go to state 80
    referenced_location            shift and go to state 84
    procedure_name                 shift and go to state 31
    upper_bound                    shift and go to state 345
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    value_array_element            shift and go to state 86
    empty_literal                  shift and go to state 71
    location                       shift and go to state 87
    primitive_value                shift and go to state 92
    operand1                       shift and go to state 90
    identifier                     shift and go to state 91
    array_location                 shift and go to state 1
    boolean_literal                shift and go to state 88

state 320

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    WHILE           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 321

    (39) discrete_range_mode -> identifier LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    LOC             reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    WHILE           reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)


state 322

    (70) string_slice -> identifier LBRACK left_element COLON right_element RBRACK .

    ARROW           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    TIMES           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    DIVIDE          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    PERC            reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    PLUS            reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    MINUS           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    CONCAT          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    AND             reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    OR              reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    EQUALS          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    DIF             reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    GTR             reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    GEQ             reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    LSS             reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    LEQ             reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    IN              reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    COLON           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    LBRACK          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    SEMICOL         reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    THEN            reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    RBRACK          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    COMMA           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    RPAREN          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    DOWN            reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    BY              reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    TO              reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    ELSE            reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    ELSIF           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    FI              reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    WHILE           reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    ASSIGN          reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    PLUSASSIGN      reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    MINUSASSIGN     reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    TIMESASSIGN     reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    PERCASSIGN      reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)
    CONCATASSIGN    reduce using rule 70 (string_slice -> identifier LBRACK left_element COLON right_element RBRACK .)


state 323

    (178) step_enumeration -> loop_counter ASSIGN start_value DOWN end_value .

    WHILE           reduce using rule 178 (step_enumeration -> loop_counter ASSIGN start_value DOWN end_value .)
    SEMICOL         reduce using rule 178 (step_enumeration -> loop_counter ASSIGN start_value DOWN end_value .)


state 324

    (176) step_enumeration -> loop_counter ASSIGN start_value step_value DOWN . end_value
    (183) end_value -> . TO discrete_expression

    TO              shift and go to state 300

    end_value                      shift and go to state 346

state 325

    (177) step_enumeration -> loop_counter ASSIGN start_value step_value end_value .

    WHILE           reduce using rule 177 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)
    SEMICOL         reduce using rule 177 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)


state 326

    (182) step_value -> BY integer_expression .

    DOWN            reduce using rule 182 (step_value -> BY integer_expression .)
    TO              reduce using rule 182 (step_value -> BY integer_expression .)


state 327

    (183) end_value -> TO discrete_expression .

    WHILE           reduce using rule 183 (end_value -> TO discrete_expression .)
    SEMICOL         reduce using rule 183 (end_value -> TO discrete_expression .)


state 328

    (92) value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .

    TIMES           reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDE          reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    PERC            reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUS            reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUS           reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCAT          reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    AND             reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    OR              reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    EQUALS          reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    DIF             reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    GTR             reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    GEQ             reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    LSS             reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    LEQ             reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    IN              reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    RBRACK          reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    COMMA           reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    RPAREN          reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    LBRACK          reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    THEN            reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    COLON           reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    SEMICOL         reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    DOWN            reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    BY              reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    TO              reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSE            reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    ELSIF           reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    FI              reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)
    WHILE           reduce using rule 92 (value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK .)


state 329

    (106) elsif_expression -> ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 106 (elsif_expression -> ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 106 (elsif_expression -> ELSIF boolean_expression then_expression .)


state 330

    (100) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .

    RBRACK          reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COMMA           reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    SEMICOL         reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    RPAREN          reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    THEN            reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    FI              reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COLON           reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    DOWN            reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    BY              reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    TO              reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    WHILE           reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSE            reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSIF           reduce using rule 100 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)


state 331

    (105) elsif_expression -> elsif_expression ELSIF boolean_expression . then_expression
    (103) then_expression -> . THEN expression

    THEN            shift and go to state 222

    then_expression                shift and go to state 347

state 332

    (214) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . statement_list END
    (216) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 348
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    statement_list                 shift and go to state 349
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 39
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 333

    (225) result_spec -> RETURNS LPAREN . mode result_attribute RPAREN
    (226) result_spec -> RETURNS LPAREN . mode RPAREN
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (58) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACK string_length RBRACK
    (50) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode

    REF             shift and go to state 198
    ID              shift and go to state 38
    INT             shift and go to state 187
    BOOL            shift and go to state 191
    CHAR            shift and go to state 192
    CHARS           shift and go to state 181
    ARRAY           shift and go to state 190

    reference_mode                 shift and go to state 189
    array_mode                     shift and go to state 182
    boolean_mode                   shift and go to state 183
    integer_mode                   shift and go to state 184
    discrete_mode                  shift and go to state 194
    mode_name                      shift and go to state 195
    mode                           shift and go to state 350
    composite_mode                 shift and go to state 196
    identifier                     shift and go to state 197
    string_mode                    shift and go to state 185
    discrete_range_mode            shift and go to state 186
    character_mode                 shift and go to state 188

state 334

    (218) procedure_definition -> PROC LPAREN RPAREN SEMICOL END .

    SEMICOL         reduce using rule 218 (procedure_definition -> PROC LPAREN RPAREN SEMICOL END .)


state 335

    (217) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 351
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 94
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 336

    (224) parameter_attribute -> LOC .

    RPAREN          reduce using rule 224 (parameter_attribute -> LOC .)
    COMMA           reduce using rule 224 (parameter_attribute -> LOC .)


state 337

    (222) parameter_spec -> mode parameter_attribute .

    RPAREN          reduce using rule 222 (parameter_spec -> mode parameter_attribute .)
    COMMA           reduce using rule 222 (parameter_spec -> mode parameter_attribute .)


state 338

    (213) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . statement_list END
    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 352
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    statement_list                 shift and go to state 353
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 39
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 339

    (211) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL statement_list END
    (212) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 354


state 340

    (219) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 219 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 219 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 341

    (164) else_clause -> ELSIF boolean_expression then_clause else_clause .

    FI              reduce using rule 164 (else_clause -> ELSIF boolean_expression then_clause else_clause .)


state 342

    (50) array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .

    SEMICOL         reduce using rule 50 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    COMMA           reduce using rule 50 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    RPAREN          reduce using rule 50 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    LOC             reduce using rule 50 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    ASSIGN          reduce using rule 50 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)


state 343

    (55) element_mode -> mode .

    ASSIGN          reduce using rule 55 (element_mode -> mode .)
    SEMICOL         reduce using rule 55 (element_mode -> mode .)
    COMMA           reduce using rule 55 (element_mode -> mode .)
    LOC             reduce using rule 55 (element_mode -> mode .)
    RPAREN          reduce using rule 55 (element_mode -> mode .)


state 344

    (51) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACK          reduce using rule 51 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 51 (index_mode_list -> index_mode_list COMMA index_mode .)


state 345

    (42) literal_range -> lower_bound COLON upper_bound .

    RPAREN          reduce using rule 42 (literal_range -> lower_bound COLON upper_bound .)
    RBRACK          reduce using rule 42 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 42 (literal_range -> lower_bound COLON upper_bound .)


state 346

    (176) step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value .

    WHILE           reduce using rule 176 (step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value .)
    SEMICOL         reduce using rule 176 (step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value .)


state 347

    (105) elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 105 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 105 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)


state 348

    (216) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 216 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .)


state 349

    (214) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 355
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 94
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 350

    (225) result_spec -> RETURNS LPAREN mode . result_attribute RPAREN
    (226) result_spec -> RETURNS LPAREN mode . RPAREN
    (227) result_attribute -> . LOC

    RPAREN          shift and go to state 357
    LOC             shift and go to state 358

    result_attribute               shift and go to state 356

state 351

    (217) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 217 (procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .)


state 352

    (215) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .

    SEMICOL         reduce using rule 215 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .)


state 353

    (213) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 359
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 94
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 354

    (211) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . statement_list END
    (212) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 360
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    statement_list                 shift and go to state 361
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 39
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 355

    (214) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 214 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .)


state 356

    (225) result_spec -> RETURNS LPAREN mode result_attribute . RPAREN

    RPAREN          shift and go to state 362


state 357

    (226) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMICOL         reduce using rule 226 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 358

    (227) result_attribute -> LOC .

    RPAREN          reduce using rule 227 (result_attribute -> LOC .)


state 359

    (213) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 213 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .)


state 360

    (212) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 212 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .)


state 361

    (211) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (141) label_id -> . identifier
    (142) action -> . bracketed_action
    (143) action -> . assignment_action
    (144) action -> . call_action
    (145) action -> . exit_action
    (146) action -> . return_action
    (147) action -> . result_action
    (58) identifier -> . ID
    (148) bracketed_action -> . if_action
    (149) bracketed_action -> . do_action
    (150) assignment_action -> . location assigning_operator expression
    (188) call_action -> . procedure_call
    (189) call_action -> . builtin_call
    (196) exit_action -> . EXIT label_id
    (197) return_action -> . RETURN result
    (198) return_action -> . RETURN
    (199) result_action -> . RESULT result
    (158) if_action -> . IF boolean_expression then_clause else_clause FI
    (159) if_action -> . IF boolean_expression then_clause FI
    (166) do_action -> . DO control_part SEMICOL action_statement_list OD
    (167) do_action -> . DO control_part SEMICOL OD
    (168) do_action -> . DO action_statement_list OD
    (169) do_action -> . DO OD
    (59) location -> . location_name
    (60) location -> . dereferenced_reference
    (61) location -> . string_element
    (62) location -> . string_slice
    (63) location -> . array_element
    (64) location -> . array_slice
    (65) location -> . call_action
    (190) procedure_call -> . procedure_name LPAREN parameter_list RPAREN
    (191) procedure_call -> . procedure_name LPAREN RPAREN
    (201) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (202) builtin_call -> . builtin_name LPAREN RPAREN
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . identifier LBRACK start_element RBRACK
    (70) string_slice -> . identifier LBRACK left_element COLON right_element RBRACK
    (73) array_element -> . array_location LBRACK expression_list RBRACK
    (74) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (195) procedure_name -> . identifier
    (203) builtin_name -> . NUM
    (204) builtin_name -> . PRED
    (205) builtin_name -> . SUCC
    (206) builtin_name -> . UPPER
    (207) builtin_name -> . LOWER
    (208) builtin_name -> . LENGTH
    (209) builtin_name -> . READ
    (210) builtin_name -> . PRINT
    (75) array_location -> . location

    END             shift and go to state 363
    DCL             shift and go to state 37
    SYN             shift and go to state 44
    TYPE            shift and go to state 32
    ID              shift and go to state 38
    EXIT            shift and go to state 29
    RETURN          shift and go to state 24
    RESULT          shift and go to state 5
    IF              shift and go to state 34
    DO              shift and go to state 3
    NUM             shift and go to state 4
    PRED            shift and go to state 20
    SUCC            shift and go to state 6
    UPPER           shift and go to state 18
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 15
    READ            shift and go to state 42
    PRINT           shift and go to state 10

    synonym_statement              shift and go to state 2
    assignment_action              shift and go to state 43
    label_id                       shift and go to state 8
    string_element                 shift and go to state 9
    dereferenced_reference         shift and go to state 11
    call_action                    shift and go to state 13
    array_slice                    shift and go to state 14
    do_action                      shift and go to state 16
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 17
    declaration_statement          shift and go to state 21
    location                       shift and go to state 30
    string_slice                   shift and go to state 22
    result_action                  shift and go to state 33
    action                         shift and go to state 25
    array_element                  shift and go to state 26
    newmode_statement              shift and go to state 28
    procedure_name                 shift and go to state 31
    procedure_call                 shift and go to state 12
    procedure_statement            shift and go to state 27
    location_name                  shift and go to state 35
    builtin_call                   shift and go to state 36
    array_location                 shift and go to state 1
    statement                      shift and go to state 94
    if_action                      shift and go to state 41
    identifier                     shift and go to state 45
    exit_action                    shift and go to state 46
    builtin_name                   shift and go to state 47
    action_statement               shift and go to state 48

state 362

    (225) result_spec -> RETURNS LPAREN mode result_attribute RPAREN .

    SEMICOL         reduce using rule 225 (result_spec -> RETURNS LPAREN mode result_attribute RPAREN .)


state 363

    (211) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 211 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACK in state 45 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 91 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 288 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 288 resolved as shift
