
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A5D5FD74C77B154072A5FC45465ED368'
    
_lr_action_items = {'COMMA':([12,42,43,44,45,50,52,53,54,55,57,58,59,60,65,66,67,79,81,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,102,139,140,142,146,151,152,153,162,164,165,166,167,171,172,173,176,178,179,180,185,187,189,196,203,204,208,209,210,217,220,221,222,223,224,225,],[-59,-16,-57,77,80,-120,-91,-94,-123,-107,-114,127,-21,80,131,80,-26,-36,-48,-47,-41,-33,-32,-31,-18,-30,-28,-35,-38,-29,-37,-34,148,-90,-119,-15,-58,-46,-17,-95,-108,-115,-20,-24,-23,-25,-27,-157,201,80,205,-55,-53,-54,-19,-89,-45,-22,-158,-160,-49,-39,-40,-156,-159,-161,-52,-51,-56,-43,]),'LSS':([50,52,53,54,55,57,102,151,152,153,],[-120,104,-94,-123,-107,-114,-119,-95,-108,-115,]),'LOC':([12,79,81,83,85,86,88,90,92,93,94,95,96,97,98,142,204,208,209,210,223,224,230,],[-59,-36,-48,-47,-41,-33,-32,-31,-30,-28,-35,-38,-29,-37,-34,-46,221,-49,-39,-40,-51,-56,236,]),'ELSIF':([63,125,126,138,158,160,161,194,212,],[-14,154,-165,-13,-141,-142,-125,-124,154,]),'RPAREN':([12,50,52,53,54,55,57,79,81,83,85,86,88,90,92,93,94,95,96,97,98,102,137,142,151,152,153,171,172,184,186,189,203,204,208,209,210,217,220,221,223,224,225,230,235,236,],[-59,-120,-91,-94,-123,-107,-114,-36,-48,-47,-41,-33,-32,-31,-30,-28,-35,-38,-29,-37,-34,-119,170,-46,-95,-108,-115,-157,202,209,210,-45,-158,-160,-49,-39,-40,-156,-159,-161,-51,-56,-43,237,241,-164,]),'THEN':([50,51,52,53,54,55,56,57,102,151,152,153,190,],[-120,-93,-91,-94,-123,-107,126,-114,-119,-95,-108,-115,126,]),'$end':([3,8,16,24,25,26,27,29,63,64,78,128,132,136,138,],[-4,-7,0,-6,-3,-5,-8,-1,-14,-2,-9,-10,-11,-12,-13,]),'GEQ':([50,52,53,54,55,57,102,151,152,153,],[-120,113,-94,-123,-107,-114,-119,-95,-108,-115,]),'LEQ':([50,52,53,54,55,57,102,151,152,153,],[-120,112,-94,-123,-107,-114,-119,-95,-108,-115,]),'COLON':([2,12,15,50,52,53,54,55,57,69,70,71,100,101,102,151,152,153,159,175,177,],[32,-59,-126,-120,-91,-94,-123,-107,-114,-92,-72,135,-44,150,-119,-95,-108,-115,195,-44,207,]),'SEMICOL':([5,12,13,14,22,28,42,44,50,52,53,54,55,57,58,59,61,62,65,67,72,75,76,79,81,83,85,86,88,90,91,92,93,94,95,96,97,98,102,139,142,146,151,152,153,155,162,164,165,166,167,170,185,191,196,198,202,208,209,210,214,218,223,224,227,229,232,234,237,238,240,241,242,],[-129,-59,-127,-128,63,-130,-16,78,-120,-91,-94,-123,-107,-114,128,-21,-126,-147,132,-26,136,138,-131,-36,-48,-47,-41,-33,-32,-31,-18,-30,-28,-35,-38,-29,-37,-34,-119,-15,-46,-17,-95,-108,-115,-140,-20,-24,-23,-25,-27,199,-19,-139,-22,213,219,-49,-39,-40,-155,231,-51,-56,-153,-154,-152,-151,-163,-149,-150,-162,-148,]),'PLUSASSIGN':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[33,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'ARROW':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[35,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'DCL':([0,3,8,24,25,26,27,29,63,64,78,128,132,136,138,199,213,215,219,228,231,233,239,],[6,-4,-7,-6,-3,-5,-8,6,-14,-2,-9,-10,-11,-12,-13,6,6,6,6,6,6,6,6,]),'CONCAT':([50,53,54,55,57,102,151,152,153,],[-120,117,-123,-107,-114,-119,117,-108,-115,]),'PROC':([32,],[73,]),'EQUALS':([50,52,53,54,55,57,102,151,152,153,],[-120,108,-94,-123,-107,-114,-119,-95,-108,-115,]),'OR':([50,52,53,54,55,57,102,151,152,153,],[-120,109,-94,-123,-107,-114,-119,-95,-108,-115,]),'ICONST':([11,31,33,34,36,37,38,39,40,41,46,47,48,49,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,135,141,143,144,145,147,148,150,154,163,205,207,],[54,54,-133,-137,-136,-138,54,-132,-134,-135,54,-121,-122,54,-98,-104,54,-97,-96,-100,-99,-101,-106,-105,-103,-102,-112,-109,-113,-111,-110,54,-118,54,-117,-116,54,54,54,181,54,54,54,54,54,54,54,54,54,]),'CONCATASSIGN':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[37,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'IF':([0,3,8,24,25,26,27,29,32,63,64,78,126,128,132,136,138,157,158,161,192,194,195,199,213,215,219,228,231,233,239,],[11,-4,-7,-6,-3,-5,-8,11,11,-14,-2,-9,11,-10,-11,-12,-13,11,11,-125,11,-124,11,11,11,11,11,11,11,11,11,]),'IN':([50,52,53,54,55,57,102,151,152,153,],[-120,111,-94,-123,-107,-114,-119,-95,-108,-115,]),'END':([3,8,24,25,26,27,63,64,78,128,132,136,138,199,213,215,219,228,231,233,239,],[-4,-7,-6,-3,-5,-8,-14,-2,-9,-10,-11,-12,-13,214,227,229,232,234,238,240,242,]),'LPAREN':([12,73,79,85,86,88,89,94,95,96,97,98,174,180,200,209,210,],[-59,137,-36,-42,-33,-32,144,-35,-38,147,-37,-34,-42,147,216,-39,-40,]),'RETURNS':([170,202,],[200,200,]),'INT':([12,43,45,60,84,133,140,141,173,205,206,216,],[-59,-57,79,79,79,79,-58,79,79,79,79,79,]),'MINUS':([11,31,33,34,36,37,38,39,40,41,46,50,53,54,55,57,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,135,141,144,145,147,148,150,151,152,153,154,163,205,207,],[47,47,-133,-137,-136,-138,47,-132,-134,-135,47,-120,115,-123,-107,-114,-119,-98,-104,47,-97,-96,-100,-99,-101,-106,-105,-103,-102,-112,-109,-113,-111,-110,47,-118,47,-117,-116,47,47,47,47,47,47,47,47,115,-108,-115,47,47,47,47,]),'ID':([0,3,6,8,12,17,19,24,25,26,27,29,30,32,43,45,60,63,64,77,78,80,84,126,127,128,131,132,133,136,137,138,140,141,157,158,161,173,192,194,195,199,201,205,206,213,215,216,219,228,231,233,239,],[12,-4,12,-7,-59,12,12,-6,-3,-5,-8,12,12,12,-57,12,12,-14,-2,12,-9,12,12,12,12,-10,12,-11,12,-12,12,-13,-58,12,12,12,-125,12,12,-124,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'DIVIDE':([50,54,55,57,102,152,153,],[-120,-123,123,-114,-119,123,-115,]),'PERCASSIGN':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[34,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'ELSE':([63,125,126,138,158,160,161,194,212,],[-14,157,-165,-13,-141,-142,-125,-124,157,]),'SYN':([0,3,8,24,25,26,27,29,63,64,78,128,132,136,138,199,213,215,219,228,231,233,239,],[17,-4,-7,-6,-3,-5,-8,17,-14,-2,-9,-10,-11,-12,-13,17,17,17,17,17,17,17,17,]),'MINUSASSIGN':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[40,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'EXIT':([0,3,8,24,25,26,27,29,32,63,64,78,126,128,132,136,138,157,158,161,192,194,195,199,213,215,219,228,231,233,239,],[19,-4,-7,-6,-3,-5,-8,19,19,-14,-2,-9,19,-10,-11,-12,-13,19,19,-125,19,-124,19,19,19,19,19,19,19,19,19,]),'DIVIDEASSIGN':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[36,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'LBRACK':([1,4,7,9,10,12,15,18,20,21,23,35,74,82,87,134,149,197,211,],[31,-71,-60,-64,46,-59,-66,-63,-61,-65,-62,-67,-66,141,143,-68,-74,-70,-75,]),'CHARS':([12,43,45,60,84,133,140,173,206,216,],[-59,-57,87,87,87,87,-58,87,87,87,]),'TIMES':([50,54,55,57,102,152,153,],[-120,-123,124,-114,-119,124,-115,]),'AND':([50,52,53,54,55,57,102,151,152,153,],[-120,103,-94,-123,-107,-114,-119,-95,-108,-115,]),'NOT':([11,31,33,34,36,37,38,39,40,41,46,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,135,141,144,145,147,148,150,154,163,205,207,],[48,48,-133,-137,-136,-138,48,-132,-134,-135,48,-98,-104,48,-97,-96,-100,-99,-101,-106,-105,-103,-102,-112,-109,-113,-111,-110,48,-118,48,-117,-116,48,48,48,48,48,48,48,48,48,48,48,48,]),'REF':([12,43,45,60,84,133,140,173,206,216,],[-59,-57,84,84,84,84,-58,84,84,84,]),'GTR':([50,52,53,54,55,57,102,151,152,153,],[-120,114,-94,-123,-107,-114,-119,-95,-108,-115,]),'FI':([63,125,126,138,156,157,158,160,161,192,193,194,212,226,],[-14,155,-165,-13,191,-165,-141,-142,-125,-143,-144,-124,-146,-145,]),'PLUS':([50,53,54,55,57,102,151,152,153,],[-120,118,-123,-107,-114,-119,118,-108,-115,]),'ARRAY':([12,43,45,60,84,133,140,173,206,216,],[-59,-57,82,82,82,82,-58,82,82,82,]),'CHAR':([12,43,45,60,84,133,140,141,173,205,206,216,],[-59,-57,95,95,95,95,-58,95,95,95,95,95,]),'PERC':([50,54,55,57,102,152,153,],[-120,-123,121,-114,-119,121,-115,]),'ASSIGN':([4,7,9,12,15,18,20,21,23,35,43,60,66,74,79,81,83,85,86,88,90,91,92,93,94,95,96,97,98,129,134,140,142,149,197,208,209,210,211,223,224,],[39,-60,-64,-59,-66,-63,-61,-65,-62,-67,-57,130,133,-66,-36,-48,-47,-41,-33,-32,-31,145,-30,-28,-35,-38,-29,-37,-34,163,-68,-58,-46,-74,-70,-49,-39,-40,-75,-51,-56,]),'RBRACK':([50,52,53,54,55,57,68,69,70,79,86,88,94,95,97,98,99,100,102,151,152,153,168,169,176,178,179,180,181,182,183,187,188,189,209,210,222,225,],[-120,-91,-94,-123,-107,-114,134,-92,-69,-36,-33,-32,-35,-38,-37,-34,149,-90,-119,-95,-108,-115,-73,197,206,-55,-53,-54,-83,-50,208,-89,211,-45,-39,-40,-52,-43,]),'DIF':([50,52,53,54,55,57,102,151,152,153,],[-120,110,-94,-123,-107,-114,-119,-95,-108,-115,]),'BOOL':([12,43,45,60,84,133,140,141,173,205,206,216,],[-59,-57,97,97,97,97,-58,97,97,97,97,97,]),'TIMESASSIGN':([4,7,9,12,15,18,20,21,23,35,74,134,149,197,211,],[41,-60,-64,-59,-66,-63,-61,-65,-62,-67,-66,-68,-74,-70,-75,]),'TYPE':([0,3,8,24,25,26,27,29,63,64,78,128,132,136,138,199,213,215,219,228,231,233,239,],[30,-4,-7,-6,-3,-5,-8,30,-14,-2,-9,-10,-11,-12,-13,30,30,30,30,30,30,30,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'composite_mode':([45,60,84,133,173,206,216,],[90,90,90,90,90,90,90,]),'string_location':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'declaration':([6,77,],[42,139,]),'operator1':([52,],[105,]),'action_statement_list':([126,157,],[158,192,]),'membership_operator':([52,],[106,]),'label_id':([0,19,29,126,157,158,192,199,213,215,219,228,231,233,239,],[2,62,2,159,159,159,159,2,2,2,2,2,2,2,2,]),'result_spec':([170,202,],[198,218,]),'declaration_statement':([0,29,199,213,215,219,228,231,233,239,],[3,3,3,3,3,3,3,3,3,3,]),'integer_literal':([143,],[182,]),'right_element':([135,],[169,]),'string_mode':([45,60,84,133,173,206,216,],[83,83,83,83,83,83,83,]),'mode_definition':([30,131,],[67,166,]),'index_mode_list':([141,],[176,]),'location':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'upper_bound':([150,207,],[188,225,]),'operand2':([11,31,38,46,105,120,130,135,141,144,145,147,148,150,154,163,205,207,],[55,55,55,55,55,152,55,55,55,55,55,55,55,55,55,55,55,55,]),'dereferenced_reference':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'identifier':([0,6,17,19,29,30,32,45,60,77,80,84,126,127,131,133,137,141,157,158,173,192,195,199,201,205,206,213,215,216,219,228,231,233,239,],[15,43,43,61,15,43,74,85,85,43,140,85,15,43,43,85,43,174,15,15,85,15,74,15,43,174,85,15,15,85,15,15,15,15,15,]),'discrete_range_mode':([45,60,84,133,141,173,205,206,216,],[94,94,94,94,94,94,94,94,94,]),'formal_parameter_list':([137,],[172,]),'string_concatenation_operator':([53,151,],[119,119,]),'empty':([126,157,],[160,193,]),'location_name':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'procedure_statement':([0,29,199,213,215,219,228,231,233,239,],[8,8,8,8,8,8,8,8,8,8,]),'array_element':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'discrete_mode_name':([45,60,84,133,141,173,205,206,216,],[89,89,89,89,89,89,89,89,89,]),'result_attribute':([230,],[235,]),'operand1':([11,31,38,46,105,130,135,141,144,145,147,148,150,154,163,205,207,],[53,53,53,53,151,53,53,53,53,53,53,53,53,53,53,53,53,]),'relational_operator':([52,],[107,]),'mode_name':([45,60,84,133,173,206,216,],[93,93,93,93,93,93,93,]),'statement_list':([0,199,213,219,231,],[29,215,228,233,239,]),'integer_expression':([31,135,],[70,168,]),'newmode_list':([30,],[65,]),'synonym_list':([17,],[58,]),'integer_mode':([45,60,84,133,141,173,205,206,216,],[88,88,88,88,88,88,88,88,88,]),'initialization':([91,],[146,]),'index_mode':([141,205,],[179,222,]),'constant_expression':([130,163,],[165,196,]),'literal_range':([141,144,147,205,],[178,184,186,178,]),'operand4':([11,31,38,46,49,105,120,122,130,135,141,144,145,147,148,150,154,163,205,207,],[50,50,50,50,102,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'else_clause':([125,212,],[156,226,]),'identifier_list':([6,17,30,77,127,131,137,201,],[45,60,66,45,60,66,173,173,]),'character_mode':([45,60,84,133,141,173,205,206,216,],[98,98,98,98,98,98,98,98,98,]),'array_mode':([45,60,84,133,173,206,216,],[81,81,81,81,81,81,81,]),'synonym_definition':([17,127,],[59,162,]),'assigning_operator':([4,],[38,]),'then_clause':([56,190,],[125,212,]),'bracketed_action':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment_action':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'program':([0,],[16,]),'declaration_list':([6,],[44,]),'left_element':([31,],[71,]),'parameter_attribute':([204,],[220,]),'string_slice':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_location':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'expression':([11,31,38,46,130,135,141,144,145,147,148,150,154,163,205,207,],[51,69,76,100,164,69,175,175,185,175,187,189,51,164,175,189,]),'lower_bound':([46,141,144,147,205,],[101,177,177,177,177,]),'expression_list':([46,],[99,]),'exit_action':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'boolean_mode':([45,60,84,133,141,173,205,206,216,],[86,86,86,86,86,86,86,86,86,]),'operator2':([53,151,],[120,120,]),'procedure_definition':([32,],[72,]),'mode':([45,60,84,133,173,206,216,],[91,129,142,167,204,224,230,]),'action':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[22,22,75,22,22,22,22,75,22,22,22,22,22,22,22,22,]),'start_element':([31,],[68,]),'string_element':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_slice':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'statement':([0,29,199,213,215,219,228,231,233,239,],[25,64,25,25,64,25,64,25,64,64,]),'arithmetic_additive_operator':([53,151,],[116,116,]),'synonym_statement':([0,29,199,213,215,219,228,231,233,239,],[26,26,26,26,26,26,26,26,26,26,]),'monadic_operator':([11,31,38,46,105,120,122,130,135,141,144,145,147,148,150,154,163,205,207,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'reference_mode':([45,60,84,133,173,206,216,],[92,92,92,92,92,92,92,]),'parameter_spec':([173,],[203,]),'element_mode':([206,],[223,]),'action_statement':([0,29,126,157,158,192,199,213,215,219,228,231,233,239,],[27,27,161,161,194,194,27,27,27,27,27,27,27,27,]),'operand0':([11,31,38,46,130,135,141,144,145,147,148,150,154,163,205,207,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'formal_parameter':([137,201,],[171,217,]),'arithmetic_multiplicative_operator':([55,152,],[122,122,]),'if_action':([0,29,32,126,157,158,192,195,199,213,215,219,228,231,233,239,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'discrete_mode':([45,60,84,133,141,173,205,206,216,],[96,96,96,96,180,96,180,96,96,]),'boolean_expression':([11,154,],[56,190,]),'newmode_statement':([0,29,199,213,215,219,228,231,233,239,],[24,24,24,24,24,24,24,24,24,24,]),'string_length':([143,],[183,]),'operand3':([11,31,38,46,105,120,122,130,135,141,144,145,147,148,150,154,163,205,207,],[57,57,57,57,57,57,153,57,57,57,57,57,57,57,57,57,57,57,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',68),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',69),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',74),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',82),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','parser.py',86),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','parser.py',90),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','parser.py',94),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',100),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',101),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',108),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',109),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',120),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',126),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',127),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',134),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',135),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',146),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',152),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',153),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',160),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',164),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',165),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',166),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',167),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',171),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',172),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',173),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',174),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',178),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',182),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',186),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',191),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',195),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',199),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',203),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',207),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',211),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',215),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','parser.py',219),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','parser.py',220),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','parser.py',224),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',228),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','parser.py',232),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',237),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',244),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',245),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',255),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',256),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',263),
  ('location -> location_name','location',1,'p_location','parser.py',269),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',270),
  ('location -> string_element','location',1,'p_location','parser.py',271),
  ('location -> string_slice','location',1,'p_location','parser.py',272),
  ('location -> array_element','location',1,'p_location','parser.py',273),
  ('location -> array_slice','location',1,'p_location','parser.py',274),
  ('location_name -> identifier','location_name',1,'p_location_name','parser.py',279),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',283),
  ('string_element -> string_location LBRACK start_element RBRACK','string_element',4,'p_string_element','parser.py',287),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',291),
  ('string_slice -> string_location LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','parser.py',295),
  ('string_location -> location','string_location',1,'p_string_location','parser.py',299),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',303),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',307),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','parser.py',311),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','parser.py',315),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',319),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',325),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',332),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',333),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',334),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',335),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',336),
  ('integer_literal -> ICONST','integer_literal',1,'p_intger_literal','parser.py',340),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',344),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',345),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',349),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',353),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','parser.py',357),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',363),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',364),
  ('expression -> operand0','expression',1,'p_expression','parser.py',371),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',383),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',387),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',407),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',411),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',415),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',416),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',420),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',421),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',422),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',423),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',424),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',425),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',426),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',427),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',431),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',435),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',439),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',443),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',444),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',448),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',449),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',453),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',457),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',461),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',465),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',466),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',467),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',471),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',475),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',480),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',481),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',485),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',496),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',497),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',504),
  ('action -> bracketed_action','action',1,'p_action','parser.py',508),
  ('action -> assignment_action','action',1,'p_action','parser.py',509),
  ('action -> exit_action','action',1,'p_action','parser.py',510),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',518),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',523),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',528),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',529),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',530),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',531),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',532),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',533),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',534),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','parser.py',540),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',544),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',548),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','parser.py',552),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',556),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','parser.py',560),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','parser.py',564),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','parser.py',568),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',574),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','parser.py',580),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','parser.py',584),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','parser.py',588),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','parser.py',592),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','parser.py',596),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','parser.py',600),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','parser.py',604),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','parser.py',608),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',612),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',613),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',620),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',624),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',625),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',632),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','parser.py',636),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',640),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',644),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',650),
]
