
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '365FBAC967D3138F605388D4F7CCAB88'
    
_lr_action_items = {'INT':([13,14,15,23,33,51,61,74,119,129,130,146,],[-56,-54,26,26,26,26,-55,26,26,26,26,26,]),'ARRAY':([13,14,15,23,33,51,61,119,129,146,],[-56,-54,43,43,43,43,-55,43,43,43,]),'END':([5,8,10,11,12,22,48,50,56,78,134,143,148,149,153,154,158,161,],[-4,-7,-3,-6,-5,-2,-9,-10,-8,-11,147,152,156,157,159,160,165,166,]),'IN':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,96,-72,-82,-73,-60,-78,]),'AND':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,98,-72,-82,-73,-60,-78,]),'COLON':([3,6,13,63,64,65,70,71,72,83,84,94,125,126,127,],[21,-87,-56,-83,-59,-86,-77,-58,-72,-41,122,-82,-73,-60,-78,]),'DIVIDE':([63,65,70,72,94,125,127,],[-83,-86,-77,109,-82,109,-78,]),'PERC':([63,65,70,72,94,125,127,],[-83,-86,-77,110,-82,110,-78,]),'RBRACK':([26,30,35,36,37,44,45,63,64,65,70,71,72,87,88,89,94,112,113,114,116,123,125,126,127,128,138,139,142,],[-33,-30,-35,-31,-34,-32,-29,-83,-59,-86,-77,-58,-72,-47,-57,124,-82,-50,129,-52,-51,-36,-73,-60,-78,-37,-42,-40,-49,]),'LPAREN':([13,26,27,30,35,36,37,40,42,44,45,53,115,116,123,128,133,],[-56,-33,57,-30,-35,-31,-34,-39,73,-32,-29,79,-39,73,-36,-37,146,]),'MINUS':([41,57,58,63,64,65,70,72,73,74,81,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,122,125,126,127,130,],[69,69,69,-83,92,-86,-77,-72,69,69,69,-75,69,-76,-74,-82,-70,-71,69,-63,-62,-65,-67,-64,-68,-69,-66,-61,-79,69,-80,-81,69,-73,92,-78,69,]),'OR':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,102,-72,-82,-73,-60,-78,]),'GEQ':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,103,-72,-82,-73,-60,-78,]),'TYPE':([0,4,5,8,10,11,12,22,48,50,56,78,134,143,148,149,153,154,158,161,],[2,2,-4,-7,-3,-6,-5,-2,-9,-10,-8,-11,2,2,2,2,2,2,2,2,]),'REF':([13,14,15,23,33,51,61,119,129,146,],[-56,-54,33,33,33,33,-55,33,33,33,]),'SYN':([0,4,5,8,10,11,12,22,48,50,56,78,134,143,148,149,153,154,158,161,],[1,1,-4,-7,-3,-6,-5,-2,-9,-10,-8,-11,1,1,1,1,1,1,1,1,]),'NOT':([41,57,58,73,74,81,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,122,130,],[62,62,62,62,62,62,-75,62,-76,-74,-70,-71,62,-63,-62,-65,-67,-64,-68,-69,-66,-61,-79,62,-80,-81,62,62,]),'PLUS':([63,64,65,70,72,94,125,126,127,],[-83,90,-86,-77,-72,-82,-73,90,-78,]),'LOC':([13,26,28,29,30,32,35,36,37,38,40,42,44,45,46,59,123,124,128,136,140,141,155,],[-56,-33,-27,-44,-30,-25,-35,-31,-34,-28,-38,-26,-32,-29,-45,-43,-36,-46,-37,150,-53,-48,162,]),'CHAR':([13,14,15,23,33,51,61,74,119,129,130,146,],[-56,-54,35,35,35,35,-55,35,35,35,35,35,]),'EQUALS':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,100,-72,-82,-73,-60,-78,]),'BOOL':([13,14,15,23,33,51,61,74,119,129,130,146,],[-56,-54,37,37,37,37,-55,37,37,37,37,37,]),'RPAREN':([13,26,28,29,30,32,35,36,37,38,40,42,44,45,46,59,63,64,65,70,71,72,79,85,94,111,117,120,123,124,125,126,127,128,136,137,138,139,140,141,145,150,151,155,162,163,],[-56,-33,-27,-44,-30,-25,-35,-31,-34,-28,-38,-26,-32,-29,-45,-43,-83,-59,-86,-77,-58,-72,118,123,-82,128,131,-97,-36,-46,-73,-60,-78,-37,-100,-98,-42,-40,-53,-48,-96,-101,-99,164,-104,167,]),'COMMA':([13,14,15,16,17,18,19,20,23,24,25,26,28,29,30,32,35,36,37,38,40,42,44,45,46,54,59,61,63,64,65,67,68,70,71,72,75,76,77,80,82,86,94,112,113,114,116,117,119,120,121,123,124,125,126,127,128,136,137,138,139,140,141,142,145,150,151,],[-56,-54,39,-18,47,49,-23,39,39,55,-13,-33,-27,-44,-30,-25,-35,-31,-34,-28,-38,-26,-32,-29,-45,-15,-43,-55,-83,-59,-86,-21,-20,-77,-58,-72,-17,-22,-24,-14,-12,-19,-82,-50,130,-52,-51,132,39,-97,-16,-36,-46,-73,-60,-78,-37,-100,-98,-42,-40,-53,-48,-49,-96,-101,-99,]),'TIMES':([63,65,70,72,94,125,127,],[-83,-86,-77,107,-82,107,-78,]),'SEMICOL':([13,16,17,18,19,24,25,26,28,29,30,32,35,36,37,38,40,42,44,45,46,52,54,59,63,64,65,67,68,70,71,72,75,76,77,80,82,86,94,118,121,123,124,125,126,127,128,131,135,140,141,144,147,152,156,157,159,160,164,165,166,167,],[-56,-18,48,50,-23,56,-13,-33,-27,-44,-30,-25,-35,-31,-34,-28,-38,-26,-32,-29,-45,78,-15,-43,-83,-59,-86,-21,-20,-77,-58,-72,-17,-22,-24,-14,-12,-19,-82,134,-16,-36,-46,-73,-60,-78,-37,143,149,-53,-48,154,-95,-92,-94,-93,-90,-89,-103,-91,-88,-102,]),'LEQ':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,95,-72,-82,-73,-60,-78,]),'GTR':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,101,-72,-82,-73,-60,-78,]),'$end':([4,5,7,8,10,11,12,22,48,50,56,78,],[-1,-4,0,-7,-3,-6,-5,-2,-9,-10,-8,-11,]),'LBRACK':([34,43,],[60,74,]),'ICONST':([41,57,58,60,62,66,69,73,74,81,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,122,130,],[65,65,65,88,-85,65,-84,65,65,65,-75,65,-76,-74,-70,-71,65,-63,-62,-65,-67,-64,-68,-69,-66,-61,-79,65,-80,-81,65,65,]),'ASSIGN':([13,14,15,20,26,28,29,30,31,32,35,36,37,38,40,42,44,45,46,54,59,61,123,124,128,140,141,],[-56,-54,41,51,-33,-27,-44,-30,58,-25,-35,-31,-34,-28,-38,-26,-32,-29,-45,81,-43,-55,-36,-46,-37,-53,-48,]),'LSS':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,104,-72,-82,-73,-60,-78,]),'ID':([0,1,2,4,5,8,9,10,11,12,13,14,15,22,23,33,39,47,48,49,50,51,55,56,61,74,78,79,119,129,130,132,134,143,146,148,149,153,154,158,161,],[13,13,13,13,-4,-7,13,-3,-6,-5,-56,-54,13,-2,13,13,13,13,-9,13,-10,13,13,-8,-55,13,-11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DCL':([0,4,5,8,10,11,12,22,48,50,56,78,134,143,148,149,153,154,158,161,],[9,9,-4,-7,-3,-6,-5,-2,-9,-10,-8,-11,9,9,9,9,9,9,9,9,]),'RETURNS':([118,131,],[133,133,]),'DIF':([63,64,65,70,71,72,94,125,126,127,],[-83,-59,-86,-77,105,-72,-82,-73,-60,-78,]),'PROC':([21,],[53,]),'CHARS':([13,14,15,23,33,51,61,119,129,146,],[-56,-54,34,34,34,34,-55,34,34,34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formal_parameter_list':([79,],[117,]),'operator2':([64,126,],[91,91,]),'character_mode':([15,23,33,51,74,119,129,130,146,],[36,36,36,36,36,36,36,36,36,]),'statement_list':([0,134,143,149,154,],[4,148,153,158,161,]),'declaration_statement':([0,4,134,143,148,149,153,154,158,161,],[5,5,5,5,5,5,5,5,5,5,]),'synonym_list':([1,],[17,]),'mode':([15,23,33,51,119,129,146,],[31,54,59,77,136,140,155,]),'arithmetic_additive_operator':([64,126,],[93,93,]),'parameter_spec':([119,],[137,]),'lower_bound':([57,73,74,130,],[84,84,84,84,]),'procedure_statement':([0,4,134,143,148,149,153,154,158,161,],[8,8,8,8,8,8,8,8,8,8,]),'newmode_statement':([0,4,134,143,148,149,153,154,158,161,],[11,11,11,11,11,11,11,11,11,11,]),'operand0':([41,57,58,73,74,81,122,130,],[71,71,71,71,71,71,71,71,]),'index_mode':([74,130,],[112,142,]),'operand2':([41,57,58,73,74,81,91,97,122,130,],[72,72,72,72,72,72,125,72,72,72,]),'integer_literal':([60,],[87,]),'mode_name':([15,23,33,51,119,129,146,],[32,32,32,32,32,32,32,]),'string_mode':([15,23,33,51,119,129,146,],[29,29,29,29,29,29,29,]),'operand1':([41,57,58,73,74,81,97,122,130,],[64,64,64,64,64,64,126,64,64,]),'composite_mode':([15,23,33,51,119,129,146,],[38,38,38,38,38,38,38,]),'newmode_list':([2,],[18,]),'procedure_definition':([21,],[52,]),'initialization':([54,],[80,]),'arithmetic_multiplicative_operator':([72,125,],[108,108,]),'index_mode_list':([74,],[113,]),'element_mode':([129,],[141,]),'synonym_definition':([1,47,],[16,75,]),'array_mode':([15,23,33,51,119,129,146,],[46,46,46,46,46,46,46,]),'reference_mode':([15,23,33,51,119,129,146,],[28,28,28,28,28,28,28,]),'parameter_attribute':([136,],[151,]),'boolean_mode':([15,23,33,51,74,119,129,130,146,],[30,30,30,30,30,30,30,30,30,]),'synonym_statement':([0,4,134,143,148,149,153,154,158,161,],[12,12,12,12,12,12,12,12,12,12,]),'string_length':([60,],[89,]),'expression':([41,57,58,73,74,81,122,130,],[67,83,67,83,83,121,138,83,]),'mode_definition':([2,49,],[19,76,]),'program':([0,],[7,]),'declaration_list':([9,],[24,]),'formal_parameter':([79,132,],[120,145,]),'statement':([0,4,134,143,148,149,153,154,158,161,],[10,22,10,10,22,10,22,10,22,22,]),'membership_operator':([71,],[99,]),'identifier_list':([1,2,9,47,49,55,79,132,],[15,20,23,15,20,23,119,119,]),'operand4':([41,57,58,66,73,74,81,91,97,108,122,130,],[63,63,63,94,63,63,63,63,63,63,63,63,]),'relational_operator':([71,],[106,]),'discrete_mode_name':([15,23,33,51,74,119,129,130,146,],[27,27,27,27,27,27,27,27,27,]),'label_id':([0,4,134,143,148,149,153,154,158,161,],[3,3,3,3,3,3,3,3,3,3,]),'discrete_mode':([15,23,33,51,74,119,129,130,146,],[42,42,42,42,116,42,42,116,42,]),'declaration':([9,55,],[25,82,]),'monadic_operator':([41,57,58,73,74,81,91,97,108,122,130,],[66,66,66,66,66,66,66,66,66,66,66,]),'constant_expression':([41,58,],[68,86,]),'upper_bound':([122,],[139,]),'identifier':([0,1,2,4,9,15,23,33,39,47,49,51,55,74,79,119,129,130,132,134,143,146,148,149,153,154,158,161,],[6,14,14,6,14,40,40,40,61,14,14,40,14,115,14,40,40,115,14,6,6,40,6,6,6,6,6,6,]),'operator1':([71,],[97,]),'result_attribute':([155,],[163,]),'discrete_range_mode':([15,23,33,51,74,119,129,130,146,],[44,44,44,44,44,44,44,44,44,]),'operand3':([41,57,58,73,74,81,91,97,108,122,130,],[70,70,70,70,70,70,70,70,127,70,70,]),'result_spec':([118,131,],[135,144,]),'integer_mode':([15,23,33,51,74,119,129,130,146,],[45,45,45,45,45,45,45,45,45,]),'literal_range':([57,73,74,130,],[85,111,114,114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',68),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',74),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',82),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','parser.py',86),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',93),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',100),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',101),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',112),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',118),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',126),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',127),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',138),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',144),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',145),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',152),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',156),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',157),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',158),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',159),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',163),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',164),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',165),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',166),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',170),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',174),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',178),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',182),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',183),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',187),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',191),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',195),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',199),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',203),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',207),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','parser.py',212),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','parser.py',216),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',220),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','parser.py',224),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',228),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',236),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',237),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',241),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',247),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',248),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',255),
  ('integer_literal -> ICONST','integer_literal',1,'p_intger_literal','parser.py',261),
  ('expression -> operand0','expression',1,'p_expression','parser.py',267),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',299),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',303),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',307),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',308),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',312),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',313),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',314),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',315),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',316),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',317),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',318),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',319),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',323),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',327),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',331),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',335),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',340),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',341),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',349),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',353),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',357),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',358),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',359),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',363),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',367),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',372),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',373),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',377),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',388),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','parser.py',394),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','parser.py',398),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','parser.py',402),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','parser.py',406),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','parser.py',410),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','parser.py',414),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','parser.py',418),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','parser.py',422),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',426),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',427),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',434),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',438),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',439),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',446),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','parser.py',450),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',454),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',458),
]
