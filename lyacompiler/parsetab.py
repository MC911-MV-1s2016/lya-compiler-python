
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C0318AF37A79D8D9A816075536410E32'
    
_lr_action_items = {'IN':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,105,-59,-82,-78,-60,-73,]),'DCL':([0,3,5,7,9,10,11,22,29,51,55,58,128,141,144,146,152,154,157,160,],[2,-6,-3,2,-5,-4,-7,-2,-8,-9,-10,-11,2,2,2,2,2,2,2,2,]),'DIF':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,106,-59,-82,-78,-60,-73,]),'END':([3,5,9,10,11,22,29,51,55,58,128,141,144,146,152,154,157,160,],[-6,-3,-5,-4,-7,-2,-8,-9,-10,-11,145,153,156,158,159,161,165,166,]),'PERC':([72,73,74,75,121,135,137,],[102,-83,-86,-77,-82,-78,102,]),'LBRACK':([42,44,],[65,66,]),'EQUALS':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,109,-59,-82,-78,-60,-73,]),'COMMA':([8,15,16,17,18,19,20,21,23,24,25,30,31,32,34,35,36,38,39,40,41,43,45,46,47,48,59,61,63,64,68,72,73,74,75,76,77,78,79,81,82,83,84,86,90,91,93,94,95,100,121,122,123,130,133,134,135,136,137,138,139,142,147,148,149,150,151,],[-56,-54,28,-13,33,50,33,-18,-23,54,33,-38,-26,-28,-15,-45,-33,-30,-35,-44,-27,-29,-34,-32,-25,-31,-12,-55,-14,-43,-17,-72,-83,-86,-77,-21,-58,-20,-59,-22,-24,33,125,-97,-16,-51,-50,132,-52,-19,-82,-98,-100,-37,-46,-36,-78,-60,-73,-101,-99,-96,-40,-42,-53,-48,-49,]),'ICONST':([53,60,62,65,66,67,69,70,71,80,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,129,132,],[74,74,74,74,97,74,74,-84,-85,74,-79,-81,-80,74,-71,-66,74,-70,-65,-63,-67,-62,-64,-61,-68,-69,-76,74,-74,-75,74,74,]),'SYN':([0,3,5,7,9,10,11,22,29,51,55,58,128,141,144,146,152,154,157,160,],[6,-6,-3,6,-5,-4,-7,-2,-8,-9,-10,-11,6,6,6,6,6,6,6,6,]),'LPAREN':([8,26,30,31,36,38,39,43,45,46,48,49,91,92,126,130,134,],[-56,57,-39,60,-33,-30,-35,-29,-34,-32,-31,67,60,-39,143,-37,-36,]),'$end':([3,5,7,9,10,11,13,22,29,51,55,58,],[-6,-3,-1,-5,-4,-7,0,-2,-8,-9,-10,-11,]),'RPAREN':([8,30,31,32,35,36,38,39,40,41,43,45,46,47,48,57,64,72,73,74,75,77,79,84,86,89,99,121,122,123,130,133,134,135,136,137,138,139,142,147,148,149,150,155,163,164,],[-56,-38,-26,-28,-45,-33,-30,-35,-44,-27,-29,-34,-32,-25,-31,85,-43,-72,-83,-86,-77,-58,-59,124,-97,130,134,-82,-98,-100,-37,-46,-36,-78,-60,-73,-101,-99,-96,-40,-42,-53,-48,162,167,-104,]),'TIMES':([72,73,74,75,121,135,137,],[101,-83,-86,-77,-82,-78,101,]),'INT':([8,15,18,20,37,56,61,65,83,131,132,143,],[-56,-54,36,36,36,36,-55,36,36,36,36,36,]),'ID':([0,2,3,5,6,7,8,9,10,11,12,15,18,20,22,28,29,33,37,50,51,54,55,56,57,58,61,65,83,125,128,131,132,141,143,144,146,152,154,157,160,],[8,8,-6,-3,8,8,-56,-5,-4,-7,8,-54,8,8,-2,8,-8,8,8,8,-9,8,-10,8,8,-11,-55,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'PROC':([14,],[26,]),'REF':([8,15,18,20,37,56,61,83,131,143,],[-56,-54,37,37,37,37,-55,37,37,37,]),'OR':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,113,-59,-82,-78,-60,-73,]),'RBRACK':([36,38,39,43,45,46,48,72,73,74,75,77,79,91,93,94,95,96,97,98,121,130,134,135,136,137,147,148,151,],[-33,-30,-35,-29,-34,-32,-31,-72,-83,-86,-77,-58,-59,-51,-50,131,-52,133,-57,-47,-82,-37,-36,-78,-60,-73,-40,-42,-49,]),'GEQ':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,115,-59,-82,-78,-60,-73,]),'LSS':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,116,-59,-82,-78,-60,-73,]),'LEQ':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,108,-59,-82,-78,-60,-73,]),'NOT':([53,60,62,65,67,69,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,129,132,],[71,71,71,71,71,71,-79,-81,-80,71,-71,-66,71,-70,-65,-63,-67,-62,-64,-61,-68,-69,-76,71,-74,-75,71,71,]),'CHAR':([8,15,18,20,37,56,61,65,83,131,132,143,],[-56,-54,39,39,39,39,-55,39,39,39,39,39,]),'ARRAY':([8,15,18,20,37,56,61,83,131,143,],[-56,-54,42,42,42,42,-55,42,42,42,]),'COLON':([1,4,8,72,73,74,75,77,79,87,88,121,135,136,137,],[14,-87,-56,-72,-83,-86,-77,-58,-59,129,-41,-82,-78,-60,-73,]),'GTR':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,111,-59,-82,-78,-60,-73,]),'SEMICOL':([8,16,17,19,21,23,24,27,30,31,32,34,35,36,38,39,40,41,43,45,46,47,48,59,63,64,68,72,73,74,75,76,77,78,79,81,82,85,90,100,121,124,127,130,133,134,135,136,137,140,145,149,150,153,156,158,159,161,162,165,166,167,],[-56,29,-13,51,-18,-23,55,58,-38,-26,-28,-15,-45,-33,-30,-35,-44,-27,-29,-34,-32,-25,-31,-12,-14,-43,-17,-72,-83,-86,-77,-21,-58,-20,-59,-22,-24,128,-16,-19,-82,141,144,-37,-46,-36,-78,-60,-73,152,-95,-53,-48,-92,-93,-94,-89,-90,-103,-91,-88,-102,]),'MINUS':([53,60,62,65,67,69,72,73,74,75,79,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,132,135,136,137,],[70,70,70,70,70,70,-72,-83,-86,-77,117,-79,-81,-80,70,-71,-66,70,-70,-65,-63,-67,-62,-64,-61,-68,-69,-76,70,-74,-75,-82,70,70,-78,117,-73,]),'AND':([72,73,74,75,77,79,121,135,136,137,],[-72,-83,-86,-77,110,-59,-82,-78,-60,-73,]),'CHARS':([8,15,18,20,37,56,61,83,131,143,],[-56,-54,44,44,44,44,-55,44,44,44,]),'BOOL':([8,15,18,20,37,56,61,65,83,131,132,143,],[-56,-54,45,45,45,45,-55,45,45,45,45,45,]),'RETURNS':([85,124,],[126,126,]),'DIVIDE':([72,73,74,75,121,135,137,],[103,-83,-86,-77,-82,-78,103,]),'LOC':([8,30,31,32,35,36,38,39,40,41,43,45,46,47,48,64,123,130,133,134,149,150,155,],[-56,-38,-26,-28,-45,-33,-30,-35,-44,-27,-29,-34,-32,-25,-31,-43,138,-37,-46,-36,-53,-48,164,]),'TYPE':([0,3,5,7,9,10,11,22,29,51,55,58,128,141,144,146,152,154,157,160,],[12,-6,-3,12,-5,-4,-7,-2,-8,-9,-10,-11,12,12,12,12,12,12,12,12,]),'ASSIGN':([8,15,20,25,30,31,32,34,35,36,38,39,40,41,43,45,46,47,48,52,61,64,130,133,134,149,150,],[-56,-54,53,56,-38,-26,-28,62,-45,-33,-30,-35,-44,-27,-29,-34,-32,-25,-31,69,-55,-43,-37,-46,-36,-53,-48,]),'PLUS':([72,73,74,75,79,121,135,136,137,],[-72,-83,-86,-77,120,-82,-78,120,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'discrete_mode':([18,20,37,56,65,83,131,132,143,],[31,31,31,31,91,31,31,91,31,]),'result_attribute':([155,],[163,]),'composite_mode':([18,20,37,56,83,131,143,],[32,32,32,32,32,32,32,]),'arithmetic_multiplicative_operator':([72,137,],[104,104,]),'constant_expression':([53,69,],[78,100,]),'operand1':([53,60,62,65,67,69,107,129,132,],[79,79,79,79,79,79,136,79,79,]),'parameter_attribute':([123,],[139,]),'relational_operator':([77,],[114,]),'lower_bound':([60,65,67,132,],[87,87,87,87,]),'formal_parameter':([57,125,],[86,142,]),'procedure_definition':([14,],[27,]),'label_id':([0,7,128,141,144,146,152,154,157,160,],[1,1,1,1,1,1,1,1,1,1,]),'integer_mode':([18,20,37,56,65,83,131,132,143,],[43,43,43,43,43,43,43,43,43,]),'integer_literal':([66,],[98,]),'arithmetic_additive_operator':([79,136,],[119,119,]),'parameter_spec':([83,],[122,]),'operand4':([53,60,62,65,67,69,80,104,107,118,129,132,],[73,73,73,73,73,73,121,73,73,73,73,73,]),'newmode_list':([12,],[24,]),'statement':([0,7,128,141,144,146,152,154,157,160,],[5,22,5,5,5,22,5,22,22,22,]),'statement_list':([0,128,141,144,152,],[7,146,154,157,160,]),'operand0':([53,60,62,65,67,69,129,132,],[77,77,77,77,77,77,77,77,]),'synonym_list':([6,],[19,]),'mode':([18,20,37,56,83,131,143,],[34,52,64,82,123,149,155,]),'declaration_statement':([0,7,128,141,144,146,152,154,157,160,],[10,10,10,10,10,10,10,10,10,10,]),'discrete_range_mode':([18,20,37,56,65,83,131,132,143,],[46,46,46,46,46,46,46,46,46,]),'procedure_statement':([0,7,128,141,144,146,152,154,157,160,],[11,11,11,11,11,11,11,11,11,11,]),'string_mode':([18,20,37,56,83,131,143,],[40,40,40,40,40,40,40,]),'formal_parameter_list':([57,],[84,]),'monadic_operator':([53,60,62,65,67,69,104,107,118,129,132,],[80,80,80,80,80,80,80,80,80,80,80,]),'identifier':([0,2,6,7,12,18,20,28,33,37,50,54,56,57,65,83,125,128,131,132,141,143,144,146,152,154,157,160,],[4,15,15,4,15,30,30,15,61,30,15,15,30,15,92,30,15,4,30,92,4,30,4,4,4,4,4,4,]),'upper_bound':([129,],[147,]),'mode_definition':([12,54,],[23,81,]),'index_mode':([65,132,],[93,151,]),'operand3':([53,60,62,65,67,69,104,107,118,129,132,],[75,75,75,75,75,75,135,75,75,75,75,]),'synonym_statement':([0,7,128,141,144,146,152,154,157,160,],[9,9,9,9,9,9,9,9,9,9,]),'element_mode':([131,],[150,]),'array_mode':([18,20,37,56,83,131,143,],[35,35,35,35,35,35,35,]),'membership_operator':([77,],[112,]),'boolean_mode':([18,20,37,56,65,83,131,132,143,],[38,38,38,38,38,38,38,38,38,]),'declaration':([2,28,],[17,59,]),'reference_mode':([18,20,37,56,83,131,143,],[41,41,41,41,41,41,41,]),'string_length':([66,],[96,]),'newmode_statement':([0,7,128,141,144,146,152,154,157,160,],[3,3,3,3,3,3,3,3,3,3,]),'operand2':([53,60,62,65,67,69,107,118,129,132,],[72,72,72,72,72,72,72,137,72,72,]),'declaration_list':([2,],[16,]),'result_spec':([85,124,],[127,140,]),'operator2':([79,136,],[118,118,]),'expression':([53,60,62,65,67,69,129,132,],[76,88,90,88,88,76,148,88,]),'identifier_list':([2,6,12,28,50,54,57,125,],[18,20,25,18,20,25,83,83,]),'index_mode_list':([65,],[94,]),'synonym_definition':([6,50,],[21,68,]),'character_mode':([18,20,37,56,65,83,131,132,143,],[48,48,48,48,48,48,48,48,48,]),'initialization':([34,],[63,]),'operator1':([77,],[107,]),'mode_name':([18,20,37,56,83,131,143,],[47,47,47,47,47,47,47,]),'literal_range':([60,65,67,132,],[89,95,99,95,]),'discrete_mode_name':([18,20,37,56,65,83,131,132,143,],[49,49,49,49,49,49,49,49,49,]),'program':([0,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',68),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',74),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',82),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','parser.py',86),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',93),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',100),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',101),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',112),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',118),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',126),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',127),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',138),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',144),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',145),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',152),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',156),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',157),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',158),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',159),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',163),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',164),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',165),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',166),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',170),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',174),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',178),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',182),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',183),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',187),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',191),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',195),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',199),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',203),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',207),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','parser.py',212),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','parser.py',216),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',220),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','parser.py',224),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',228),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',236),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',237),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',241),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',247),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',248),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',255),
  ('integer_literal -> ICONST','integer_literal',1,'p_intger_literal','parser.py',261),
  ('expression -> operand0','expression',1,'p_expression','parser.py',267),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',299),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',303),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',307),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',308),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',312),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',313),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',314),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',315),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',316),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',317),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',318),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',319),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',323),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',327),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',331),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',335),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',340),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',341),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',349),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',353),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',357),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',358),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',359),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',363),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',367),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',372),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',373),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',377),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',388),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','parser.py',394),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','parser.py',398),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','parser.py',402),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','parser.py',406),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','parser.py',410),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','parser.py',414),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','parser.py',418),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','parser.py',422),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',426),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',427),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',434),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',438),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',439),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',446),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','parser.py',450),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',454),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',458),
]
