
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BC1A1C9F7CC4B71636BD0D8F74E665EB'
    
_lr_action_items = {'PRED':([0,3,10,23,25,28,31,37,40,42,44,48,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,75,89,90,96,97,108,110,113,123,144,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,190,191,194,197,198,205,206,211,212,213,216,219,222,224,225,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[1,-5,-4,-6,-7,-8,1,1,1,1,1,-3,1,1,1,-14,-2,1,1,-155,-153,-152,-157,1,-156,-151,-154,1,1,1,1,1,1,1,-140,-9,-10,1,-109,-115,-118,-110,-113,1,-119,-116,-112,-117,-111,-114,1,-122,-125,-126,-123,-124,1,1,-131,-130,-129,1,-139,1,1,-11,1,1,1,1,1,1,-12,-13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'DCL':([0,3,10,23,25,28,31,48,59,60,123,144,206,224,225,306,328,332,333,346,347,349,355,],[2,-5,-4,-6,-7,-8,2,-3,-14,-2,-9,-10,-11,-12,-13,2,2,2,2,2,2,2,2,]),'PLUSASSIGN':([6,8,17,21,22,26,36,38,39,41,43,45,64,91,148,159,223,227,229,232,308,309,],[-61,-58,-64,-66,-63,-189,66,-59,-62,-65,-60,-188,-67,-66,-202,-191,-201,-68,-190,-73,-70,-74,]),'BY':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,287,291,292,293,308,309,312,339,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-91,319,-184,-181,-70,-74,-99,-100,-92,]),'LSS':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,175,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-66,-91,-70,-74,-92,]),'SUCC':([0,3,10,23,25,28,31,37,40,42,44,48,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,75,89,90,96,97,108,110,113,123,144,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,190,191,194,197,198,205,206,211,212,213,216,219,222,224,225,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[5,-5,-4,-6,-7,-8,5,5,5,5,5,-3,5,5,5,-14,-2,5,5,-155,-153,-152,-157,5,-156,-151,-154,5,5,5,5,5,5,5,-140,-9,-10,5,-109,-115,-118,-110,-113,5,-119,-116,-112,-117,-111,-114,5,-122,-125,-126,-123,-124,5,5,-131,-130,-129,5,-139,5,5,-11,5,5,5,5,5,5,-12,-13,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'GTR':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,167,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-66,-91,-70,-74,-92,]),'CHAR':([8,51,52,55,143,208,210,212,248,269,288,297,298,335,],[-58,-56,127,127,127,127,-57,127,127,127,127,127,127,127,]),'OR':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,174,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-66,-91,-70,-74,-92,]),'SYN':([0,3,10,23,25,28,31,48,59,60,123,144,206,224,225,306,328,332,333,346,347,349,355,],[7,-5,-4,-6,-7,-8,7,-3,-14,-2,-9,-10,-11,-12,-13,7,7,7,7,7,7,7,7,]),'THEN':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,192,193,223,227,229,232,233,234,235,242,277,287,308,309,311,312,338,339,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-102,-76,-97,-107,-98,184,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,244,-138,-201,-68,-190,-73,-94,-108,-121,-128,184,-91,-70,-74,244,-99,244,-100,-92,]),'CONCAT':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,181,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,181,-121,-128,-66,-91,-70,-74,-92,]),'OD':([42,59,110,113,197,205,225,251,],[109,-14,196,-140,-139,250,-13,294,]),'LEQ':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,168,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-66,-91,-70,-74,-92,]),'RPAREN':([6,8,17,22,26,38,39,43,45,56,61,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,126,127,128,129,130,131,134,135,136,137,138,139,140,142,148,149,150,151,159,160,165,186,187,193,217,223,226,227,229,232,233,234,235,242,256,265,267,268,270,275,287,296,299,300,303,304,308,309,312,323,325,326,329,330,331,339,340,352,359,360,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,148,159,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-46,-38,-29,-47,-33,-32,-35,-30,-31,-37,-28,-36,-34,-41,-202,-194,223,-193,-191,229,233,-132,-133,-138,-45,-201,271,-68,-190,-73,-94,-108,-121,-128,296,300,-192,301,-220,-44,-91,-40,-48,-39,-221,-223,-70,-74,-99,-42,-55,-50,-219,-224,-222,-100,-92,361,-227,363,]),'FI':([6,8,17,22,26,38,39,43,45,59,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,113,148,159,184,185,186,187,193,197,223,225,227,229,232,233,234,235,236,237,240,241,242,279,280,282,287,308,309,310,312,314,315,336,339,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-14,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-140,-202,-191,-228,239,-132,-133,-138,-139,-201,-13,-68,-190,-73,-94,-108,-121,-161,-160,278,-228,-128,-163,-162,312,-91,-70,-74,-165,-99,339,-104,-164,-100,-92,]),'NUM':([0,3,10,23,25,28,31,37,40,42,44,48,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,75,89,90,96,97,108,110,113,123,144,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,190,191,194,197,198,205,206,211,212,213,216,219,222,224,225,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[11,-5,-4,-6,-7,-8,11,11,11,11,11,-3,11,11,11,-14,-2,11,11,-155,-153,-152,-157,11,-156,-151,-154,11,11,11,11,11,11,11,-140,-9,-10,11,-109,-115,-118,-110,-113,11,-119,-116,-112,-117,-111,-114,11,-122,-125,-126,-123,-124,11,11,-131,-130,-129,11,-139,11,11,-11,11,11,11,11,11,11,-12,-13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LENGTH':([0,3,10,23,25,28,31,37,40,42,44,48,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,75,89,90,96,97,108,110,113,123,144,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,190,191,194,197,198,205,206,211,212,213,216,219,222,224,225,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[12,-5,-4,-6,-7,-8,12,12,12,12,12,-3,12,12,12,-14,-2,12,12,-155,-153,-152,-157,12,-156,-151,-154,12,12,12,12,12,12,12,-140,-9,-10,12,-109,-115,-118,-110,-113,12,-119,-116,-112,-117,-111,-114,12,-122,-125,-126,-123,-124,12,12,-131,-130,-129,12,-139,12,12,-11,12,12,12,12,12,12,-12,-13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'DIVIDEASSIGN':([6,8,17,21,22,26,36,38,39,41,43,45,64,91,148,159,223,227,229,232,308,309,],[-61,-58,-64,-66,-63,-189,63,-59,-62,-65,-60,-188,-67,-66,-202,-191,-201,-68,-190,-73,-70,-74,]),'ELSIF':([6,8,17,22,26,38,39,43,45,59,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,113,148,159,184,185,186,187,193,197,223,225,227,229,232,233,234,235,236,237,242,243,283,285,287,308,309,310,312,337,339,340,353,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-14,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-140,-202,-191,-228,238,-132,-133,-138,-139,-201,-13,-68,-190,-73,-94,-108,-121,-161,-160,-128,281,313,-103,-91,-70,-74,238,-99,-106,-100,-92,-105,]),'LOC':([8,126,127,128,129,130,131,134,135,136,137,138,139,140,142,217,296,299,300,304,325,326,352,],[-58,-46,-38,-29,-47,-33,-32,-35,-30,-31,-37,-28,-36,-34,-41,-45,-40,-48,-39,330,-55,-50,359,]),'RETURNS':([271,301,],[307,307,]),'NULL':([37,40,44,56,58,61,62,63,65,66,67,68,69,70,71,75,89,90,96,108,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,188,189,190,191,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[92,92,92,92,92,92,92,-155,-153,-152,-157,92,-156,-151,-154,92,92,92,92,92,92,-109,-115,-118,-110,-113,92,-119,-116,-112,-117,-111,-114,92,-122,-125,-126,-123,-124,92,-131,-130,-129,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'BOOL':([8,51,52,55,143,208,210,212,248,269,288,297,298,335,],[-58,-56,137,137,137,137,-57,137,137,137,137,137,137,137,]),'AND':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,176,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-66,-91,-70,-74,-92,]),'COLON':([6,8,17,18,21,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,111,148,156,157,158,159,161,162,186,187,193,223,227,229,232,233,234,235,242,245,254,255,257,287,308,309,312,339,340,],[-61,-58,-64,57,-141,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,198,-202,-101,-71,228,-191,230,-43,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,286,295,-43,-66,-91,-70,-74,-99,-100,-92,]),'ID':([0,2,3,7,8,10,23,25,28,31,37,40,42,44,46,47,48,51,52,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,75,89,90,96,97,108,110,112,113,123,124,125,143,144,145,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,190,191,194,197,198,205,206,207,208,210,211,212,213,216,219,222,224,225,226,228,230,231,237,238,241,244,248,249,251,269,280,281,284,286,288,295,297,298,302,306,313,319,322,328,332,333,335,346,347,349,355,],[8,8,-5,8,-58,-4,-6,-7,-8,8,8,8,8,8,8,8,-3,-56,8,8,8,8,8,-14,-2,8,8,-155,-153,-152,-157,8,-156,-151,-154,8,8,8,8,8,8,8,8,-140,-9,8,8,8,-10,8,8,-109,-115,-118,-110,-113,8,-119,-116,-112,-117,-111,-114,8,-122,-125,-126,-123,-124,8,8,-131,-130,-129,8,-139,8,8,-11,8,8,-57,8,8,8,8,8,8,-12,-13,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'PRINT':([0,3,10,23,25,28,31,37,40,42,44,48,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,75,89,90,96,97,108,110,113,123,144,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,190,191,194,197,198,205,206,211,212,213,216,219,222,224,225,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[15,-5,-4,-6,-7,-8,15,15,15,15,15,-3,15,15,15,-14,-2,15,15,-155,-153,-152,-157,15,-156,-151,-154,15,15,15,15,15,15,15,-140,-9,-10,15,-109,-115,-118,-110,-113,15,-119,-116,-112,-117,-111,-114,15,-122,-125,-126,-123,-124,15,15,-131,-130,-129,15,-139,15,15,-11,15,15,15,15,15,15,-12,-13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'WHILE':([6,8,17,22,26,38,39,42,43,45,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,114,127,130,131,134,137,139,140,148,159,186,187,193,199,200,201,223,227,229,232,233,234,235,242,287,289,292,296,300,308,309,312,317,318,339,340,342,343,345,354,],[-61,-58,-64,-63,-189,-59,-62,108,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,108,-38,-33,-32,-35,-37,-36,-34,-202,-191,-132,-133,-138,-175,-173,-174,-201,-68,-190,-73,-94,-108,-121,-128,-91,-186,-184,-40,-39,-70,-74,-99,-185,-179,-100,-92,-178,-177,-183,-176,]),'MINUSASSIGN':([6,8,17,21,22,26,36,38,39,41,43,45,64,91,148,159,223,227,229,232,308,309,],[-61,-58,-64,-66,-63,-189,65,-59,-62,-65,-60,-188,-67,-66,-202,-191,-201,-68,-190,-73,-70,-74,]),'IN':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,202,203,223,227,229,232,233,234,235,242,247,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,172,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-180,248,-201,-68,-190,-73,-94,-108,-121,-128,288,-66,-91,-70,-74,-92,]),'CHARS':([8,51,52,55,143,208,210,269,298,335,],[-58,-56,141,141,141,141,-57,141,141,141,]),'FALSE':([37,40,44,56,58,61,62,63,65,66,67,68,69,70,71,75,89,90,96,108,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,188,189,190,191,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[78,78,78,78,78,78,78,-155,-153,-152,-157,78,-156,-151,-154,78,78,78,78,78,78,-109,-115,-118,-110,-113,78,-119,-116,-112,-117,-111,-114,78,-122,-125,-126,-123,-124,78,-131,-130,-129,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'REF':([8,51,52,55,143,208,210,269,298,335,],[-58,-56,143,143,143,143,-57,143,143,143,]),'DIF':([6,8,17,22,26,38,39,43,45,64,72,73,74,76,77,78,79,80,82,83,84,87,88,91,92,93,94,95,98,99,100,101,102,103,104,148,159,186,187,193,223,227,229,232,233,234,235,242,257,287,308,309,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,177,-107,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-202,-191,-132,-133,-138,-201,-68,-190,-73,-94,-108,-121,-128,-66,-91,-70,-74,-92,]),'LBRACK':([6,8,17,21,22,26,35,36,38,39,41,43,45,64,72,73,74,76,77,78,79,80,82,91,92,93,94,98,99,100,101,102,104,105,132,141,148,159,193,223,227,229,232,233,257,287,308,309,340,],[-61,-58,-64,58,-63,-189,62,-75,-59,-62,-65,-60,-188,-67,-81,-78,-93,-84,-77,-86,-88,-79,-76,58,-89,-75,-83,-90,-65,-85,-82,-87,-80,194,212,215,-202,-191,-75,-201,-68,-190,-73,-94,58,-91,-70,-74,-92,]),'COMMA':([6,8,17,22,26,38,39,43,45,49,50,51,52,53,54,55,64,72,73,74,76,77,78,79,80,82,83,84,85,87,88,91,92,93,94,95,98,99,100,101,102,103,104,120,121,122,126,127,128,129,130,131,133,134,135,136,137,138,139,140,142,148,149,150,151,159,160,162,163,186,187,193,209,210,214,217,218,220,221,223,227,229,232,233,234,235,242,246,252,253,258,259,260,261,262,266,267,268,269,270,275,276,287,296,299,300,303,304,308,309,312,323,324,325,326,329,330,331,339,340,],[-61,-58,-64,-63,-189,-59,-62,-60,-188,124,-16,-56,125,-21,145,125,-67,-81,-78,-137,-84,-77,-86,-88,-79,-76,-97,-107,-98,-134,-136,-66,-89,-135,-83,-120,-90,-65,-85,-82,-87,-127,-80,-26,207,125,-46,-38,-29,-47,-33,-32,-18,-35,-30,-31,-37,-28,-36,-34,-41,-202,-194,222,-193,-191,222,-96,231,-132,-133,-138,-15,-57,-17,-45,-20,-24,-23,-201,-68,-190,-73,-94,-108,-121,-128,231,-25,-27,-54,-53,297,-52,-19,-22,-192,302,125,-220,-44,-95,-91,-40,-48,-39,-221,-223,-70,-74,-99,-42,-51,-55,-50,-219,-224,-222,-100,-92,]),'CONCATASSIGN':([6,8,17,21,22,26,36,38,39,41,43,45,64,91,148,159,223,227,229,232,308,309,],[-61,-58,-64,-66,-63,-189,67,-59,-62,-65,-60,-188,-67,-66,-202,-191,-201,-68,-190,-73,-70,-74,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolean_literal':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'arithmetic_additive_operator':([84,234,],[179,179,]),'then_expression':([192,311,338,],[243,337,353,]),'parameter_spec':([269,],[303,]),'discrete_mode':([52,55,143,208,212,248,269,288,297,298,335,],[128,128,128,128,259,289,128,317,259,128,128,]),'string_element':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'loop_counter':([112,],[203,]),'mode':([52,55,143,208,269,298,335,],[133,146,217,253,304,325,352,]),'declaration':([2,124,],[50,209,]),'mode_definition':([47,207,],[120,252,]),'iteration':([112,],[200,]),'string_length':([215,],[263,]),'literal':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'operator2':([84,234,],[178,178,]),'synonym_statement':([0,31,306,328,332,333,346,347,349,355,],[3,3,3,3,3,3,3,3,3,3,]),'lower_bound':([62,194,211,212,216,297,],[161,245,254,254,254,254,]),'do_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'array_slice':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'builtin_name':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'result_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'identifier':([0,2,7,31,37,40,42,44,46,47,52,55,56,57,58,61,62,68,75,89,90,96,97,108,110,112,124,125,143,145,147,171,178,184,188,194,198,205,207,208,211,212,213,216,219,222,226,228,230,231,237,238,241,244,248,249,251,269,280,281,284,286,288,295,297,298,302,306,313,319,322,328,332,333,335,346,347,349,355,],[21,51,51,21,91,91,21,91,119,51,142,142,91,91,91,91,91,91,91,91,91,91,91,91,21,202,51,210,142,51,91,91,91,21,91,91,91,21,51,142,91,257,91,91,91,91,51,91,91,91,21,91,21,91,290,91,21,142,21,91,91,91,290,91,257,142,51,21,91,91,91,21,21,21,142,21,21,21,21,]),'newmode_statement':([0,31,306,328,332,333,346,347,349,355,],[23,23,23,23,23,23,23,23,23,23,]),'expression_list':([62,194,],[163,246,]),'relational_operator':([83,],[166,]),'conditional_expression':([37,40,44,56,58,61,62,68,75,96,108,147,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'then_clause':([86,277,],[185,310,]),'procedure_statement':([0,31,306,328,332,333,346,347,349,355,],[25,25,25,25,25,25,25,25,25,25,]),'builtin_call':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'operand2':([37,40,44,56,58,61,62,68,75,96,108,147,171,178,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[95,95,95,95,95,95,95,95,95,95,95,95,95,235,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'synonym_definition':([7,145,],[53,218,]),'boolean_expression':([37,96,108,238,281,313,],[86,192,195,277,311,338,]),'referenced_location':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'while_control':([42,114,],[115,204,]),'statement_list':([0,306,328,332,346,],[31,333,347,349,355,]),'integer_mode':([52,55,143,208,212,248,269,288,297,298,335,],[131,131,131,131,131,131,131,131,131,131,131,]),'right_element':([228,],[273,]),'step_value':([291,],[321,]),'array_location':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assigning_operator':([36,],[68,]),'character_string_literal':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'parameter':([56,61,222,],[151,151,267,]),'elsif_expression':([243,],[283,]),'reference_mode':([52,55,143,208,269,298,335,],[135,135,135,135,135,135,135,]),'statement':([0,31,306,328,332,333,346,347,349,355,],[48,60,48,48,48,60,48,60,60,60,]),'location_name':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'string_slice':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'literal_range':([211,212,216,297,],[256,258,265,258,]),'newmode_list':([47,],[121,]),'mode_name':([52,55,143,208,269,298,335,],[138,138,138,138,138,138,138,]),'identifier_list':([2,7,47,124,145,207,226,302,],[52,55,122,52,55,122,269,269,]),'dereferenced_reference':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'element_mode':([298,],[326,]),'left_element':([58,],[158,]),'procedure_call':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'else_clause':([185,310,],[240,336,]),'operand3':([37,40,44,56,58,61,62,68,75,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,242,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'initialization':([133,],[214,]),'array_primitive_value':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'formal_parameter_list':([226,],[268,]),'value_array_slice':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'if_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'parameter_attribute':([304,],[331,]),'string_mode':([52,55,143,208,269,298,335,],[126,126,126,126,126,126,126,]),'primitive_value':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'bracketed_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'empty':([184,241,],[236,279,]),'step_enumeration':([112,],[199,]),'array_element':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'start_value':([249,],[291,]),'discrete_range_mode':([52,55,143,208,212,248,269,288,297,298,335,],[134,134,134,134,134,134,134,134,134,134,134,]),'declaration_statement':([0,31,306,328,332,333,346,347,349,355,],[10,10,10,10,10,10,10,10,10,10,]),'declaration_list':([2,],[49,]),'membership_operator':([83,],[169,]),'operator1':([83,],[171,]),'procedure_definition':([57,],[152,]),'result':([40,44,],[106,117,]),'parenthesized_expression':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'expression':([37,40,44,56,58,61,62,68,75,96,108,147,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[81,107,107,149,156,149,162,164,165,81,81,220,162,255,255,262,255,220,149,156,275,276,81,285,292,81,315,275,275,255,81,156,292,]),'character_mode':([52,55,143,208,212,248,269,288,297,298,335,],[140,140,140,140,140,140,140,140,140,140,140,]),'end_value':([291,320,321,344,],[318,342,343,354,]),'return_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'start_element':([58,],[155,]),'label_id':([0,31,42,46,110,184,205,237,241,251,280,306,328,332,333,346,347,349,355,],[18,18,111,118,111,111,111,111,111,111,111,18,18,18,18,18,18,18,18,]),'operand0':([37,40,44,56,58,61,62,68,75,96,108,147,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'operand1':([37,40,44,56,58,61,62,68,75,96,108,147,171,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[84,84,84,84,84,84,84,84,84,84,84,84,234,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'for_control':([42,],[114,]),'range_enumeration':([112,],[201,]),'parameter_list':([56,61,],[150,160,]),'value_array_element':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'synonym_list':([7,],[54,]),'exit_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[27,27,27,153,27,27,153,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'action_statement':([0,31,42,110,184,205,237,241,251,280,306,328,332,333,346,347,349,355,],[28,28,113,197,113,113,197,113,197,197,28,28,28,28,28,28,28,28,]),'string_concatenation_operator':([84,234,],[182,182,]),'operand4':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[87,87,87,87,87,87,87,87,87,186,187,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'empty_literal':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'array_mode':([52,55,143,208,269,298,335,],[129,129,129,129,129,129,129,]),'boolean_mode':([52,55,143,208,212,248,269,288,297,298,335,],[130,130,130,130,130,130,130,130,130,130,130,]),'program':([0,],[32,]),'assignment_action':([0,31,42,57,110,184,198,205,237,241,251,280,306,328,332,333,346,347,349,355,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'integer_expression':([58,228,319,],[157,272,341,]),'procedure_name':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'location':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[36,36,93,93,36,93,93,36,93,93,93,93,93,93,93,93,193,93,36,93,93,93,36,93,93,36,36,93,93,93,93,93,93,93,93,93,36,93,36,93,93,36,36,93,93,93,93,93,36,93,93,93,36,36,36,36,36,36,36,]),'discrete_expression':([249,322,],[293,345,]),'action_statement_list':([42,184,205,241,],[110,237,251,280,]),'index_mode':([212,297,],[261,324,]),'else_expression':([243,283,],[282,314,]),'control_part':([42,],[116,]),'call_action':([0,31,37,40,42,44,56,57,58,61,62,68,75,89,90,96,97,108,110,147,171,178,184,188,194,198,205,211,212,213,216,219,222,228,230,231,237,238,241,244,249,251,280,281,284,286,295,297,306,313,319,322,328,332,333,346,347,349,355,],[41,41,99,99,41,99,99,41,99,99,99,99,99,99,99,99,99,99,41,99,99,99,41,99,99,41,41,99,99,99,99,99,99,99,99,99,41,99,41,99,99,41,41,99,99,99,99,99,41,99,99,99,41,41,41,41,41,41,41,]),'upper_bound':([230,286,295,],[274,316,323,]),'index_mode_list':([212,],[260,]),'constant_expression':([147,219,],[221,266,]),'character_literal':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'arithmetic_multiplicative_operator':([95,235,],[188,188,]),'result_spec':([271,301,],[305,327,]),'formal_parameter':([226,302,],[270,329,]),'result_attribute':([352,],[360,]),'composite_mode':([52,55,143,208,269,298,335,],[136,136,136,136,136,136,136,]),'integer_literal':([37,40,44,56,58,61,62,68,75,89,90,96,108,147,171,178,188,194,211,212,213,215,216,219,222,228,230,231,238,244,249,281,284,286,295,297,313,319,322,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,264,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',62),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',68),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',69),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',76),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',77),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',78),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',79),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',80),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyaparser.py',84),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyaparser.py',89),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyaparser.py',94),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyaparser.py',99),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyaparser.py',104),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyaparser.py',108),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',114),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',115),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',122),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',123),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',130),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',136),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',137),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyaparser.py',144),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyaparser.py',145),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',152),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',158),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',159),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',166),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',170),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',171),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',172),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',173),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',177),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',178),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',179),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',180),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',184),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',188),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',192),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',196),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',197),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',201),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',209),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',213),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',217),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',221),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',225),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',226),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyaparser.py',230),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyaparser.py',234),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyaparser.py',238),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',242),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',243),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',250),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',251),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',255),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',261),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',262),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',269),
  ('location -> location_name','location',1,'p_location','lyaparser.py',275),
  ('location -> dereferenced_reference','location',1,'p_location','lyaparser.py',276),
  ('location -> string_element','location',1,'p_location','lyaparser.py',277),
  ('location -> string_slice','location',1,'p_location','lyaparser.py',278),
  ('location -> array_element','location',1,'p_location','lyaparser.py',279),
  ('location -> array_slice','location',1,'p_location','lyaparser.py',280),
  ('location -> call_action','location',1,'p_location','lyaparser.py',281),
  ('location_name -> identifier','location_name',1,'p_location_name','lyaparser.py',285),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaparser.py',289),
  ('string_element -> identifier LBRACK start_element RBRACK','string_element',4,'p_string_element','lyaparser.py',293),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyaparser.py',297),
  ('string_slice -> identifier LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyaparser.py',301),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyaparser.py',309),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyaparser.py',313),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyaparser.py',317),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyaparser.py',321),
  ('array_location -> location','array_location',1,'p_array_location','lyaparser.py',325),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',331),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',332),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',333),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',334),
  ('literal -> integer_literal','literal',1,'p_literal','lyaparser.py',338),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaparser.py',339),
  ('literal -> character_literal','literal',1,'p_literal','lyaparser.py',340),
  ('literal -> empty_literal','literal',1,'p_literal','lyaparser.py',341),
  ('literal -> character_string_literal','literal',1,'p_literal','lyaparser.py',342),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyaparser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaparser.py',350),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaparser.py',351),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyaparser.py',355),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaparser.py',359),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyaparser.py',363),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyaparser.py',369),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyaparser.py',373),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',377),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',383),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',387),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',388),
  ('expression -> operand0','expression',1,'p_expression','lyaparser.py',395),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',396),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',400),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyaparser.py',404),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaparser.py',408),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',412),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',416),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',420),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyaparser.py',424),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',428),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaparser.py',432),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyaparser.py',436),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaparser.py',440),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaparser.py',441),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaparser.py',445),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaparser.py',446),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyaparser.py',447),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyaparser.py',448),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyaparser.py',449),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyaparser.py',450),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyaparser.py',451),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyaparser.py',452),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaparser.py',456),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaparser.py',460),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyaparser.py',464),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaparser.py',468),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaparser.py',469),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',473),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',474),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyaparser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaparser.py',482),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyaparser.py',486),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',490),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',491),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',492),
  ('operand3 -> MINUS operand4','operand3',2,'p_operand3_uminus','lyaparser.py',496),
  ('operand3 -> NOT operand4','operand3',2,'p_operand3_monadic','lyaparser.py',500),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaparser.py',504),
  ('operand4 -> location','operand4',1,'p_operand4','lyaparser.py',509),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaparser.py',510),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaparser.py',511),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',515),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',521),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',522),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',529),
  ('action -> bracketed_action','action',1,'p_action','lyaparser.py',533),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',534),
  ('action -> call_action','action',1,'p_action','lyaparser.py',535),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',536),
  ('action -> return_action','action',1,'p_action','lyaparser.py',537),
  ('action -> result_action','action',1,'p_action','lyaparser.py',538),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',542),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',543),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',547),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',552),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',553),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',554),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',555),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',556),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',557),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',558),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyaparser.py',564),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',568),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',572),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyaparser.py',576),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',580),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyaparser.py',584),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyaparser.py',588),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyaparser.py',592),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyaparser.py',596),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyaparser.py',600),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',604),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyaparser.py',608),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyaparser.py',612),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',616),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',617),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',621),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',625),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',626),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyaparser.py',630),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyaparser.py',634),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyaparser.py',638),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',642),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',646),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',650),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaparser.py',654),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',658),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',662),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration_down','lyaparser.py',666),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',670),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',674),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',680),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',681),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyaparser.py',685),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',689),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyaparser.py',693),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaparser.py',694),
  ('parameter -> expression','parameter',1,'p_parameter','lyaparser.py',701),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyaparser.py',705),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyaparser.py',709),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyaparser.py',713),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',717),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaparser.py',721),
  ('result -> expression','result',1,'p_result','lyaparser.py',725),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyaparser.py',729),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',733),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',737),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',738),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',739),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',740),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',741),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',742),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',743),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',744),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyaparser.py',750),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyaparser.py',754),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyaparser.py',758),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyaparser.py',762),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyaparser.py',766),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyaparser.py',770),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyaparser.py',774),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyaparser.py',778),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',782),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',783),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',790),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaparser.py',794),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',795),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaparser.py',802),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','lyaparser.py',806),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaparser.py',810),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaparser.py',814),
  ('empty -> <empty>','empty',0,'p_empty','lyaparser.py',820),
]
