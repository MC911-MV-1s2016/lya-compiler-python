
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '78696183A2E6A817251FDB54107DC4CA'
    
_lr_action_items = {'PERCASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,67,107,166,210,223,225,232,256,304,305,],[-192,-65,-59,-60,66,-61,-62,-66,-67,-64,-63,-193,-68,-67,-195,-206,-69,-75,-194,-205,-71,-76,]),'ARRAY':([13,50,51,120,142,174,220,282,299,337,],[-59,-57,125,125,125,125,-58,125,125,125,]),'LENGTH':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[21,21,-5,-6,-8,-7,21,21,21,-3,-4,21,21,21,21,-144,21,21,-160,-158,-161,-159,-157,-156,21,-155,21,-14,-138,-137,21,21,21,21,21,-2,21,-10,21,-143,21,-11,-131,21,-133,-132,21,-118,-111,-113,21,-119,-115,-120,-114,-121,-117,-112,-116,21,-128,-126,-127,-125,-124,21,-9,21,21,21,21,21,21,21,21,21,21,-13,-12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'PERC':([1,6,13,16,22,33,44,45,46,67,82,83,86,88,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,179,-141,-82,-78,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,179,-96,-205,-67,-93,-71,-76,-94,]),'CONCAT':([1,6,13,16,22,33,44,45,46,67,82,83,86,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,-78,196,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,196,-123,-96,-205,-67,-93,-71,-76,-94,]),'SYN':([0,14,18,23,30,38,47,48,78,124,146,176,209,234,236,315,339,340,343,353,354,356,363,],[2,-5,-6,-8,-7,-3,-4,2,-14,-2,-10,-11,-9,-13,-12,2,2,2,2,2,2,2,2,]),'PRED':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[4,4,-5,-6,-8,-7,4,4,4,-3,-4,4,4,4,4,-144,4,4,-160,-158,-161,-159,-157,-156,4,-155,4,-14,-138,-137,4,4,4,4,4,-2,4,-10,4,-143,4,-11,-131,4,-133,-132,4,-118,-111,-113,4,-119,-115,-120,-114,-121,-117,-112,-116,4,-128,-126,-127,-125,-124,4,-9,4,4,4,4,4,4,4,4,4,4,-13,-12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'TIMES':([1,6,13,16,22,33,44,45,46,67,82,83,86,88,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,177,-141,-82,-78,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,177,-96,-205,-67,-93,-71,-76,-94,]),'NOT':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[85,85,85,85,85,85,85,-160,-158,-161,-159,-157,-156,85,-155,85,85,85,85,-131,85,-133,-132,-118,-111,-113,85,-119,-115,-120,-114,-121,-117,-112,-116,85,-128,-126,-127,-125,-124,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'EQUALS':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,188,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'SEMICOL':([1,5,6,10,13,16,20,22,24,27,33,34,35,36,40,41,44,45,46,52,53,58,61,62,63,67,75,76,80,81,82,83,86,87,88,89,90,91,93,95,96,97,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,122,126,127,128,130,131,133,134,135,136,138,140,141,143,145,156,157,158,162,163,164,166,170,171,173,201,202,203,207,210,216,217,219,221,223,225,227,232,237,238,239,244,246,247,250,253,255,256,265,274,275,276,278,283,289,296,297,301,302,303,304,305,308,311,316,318,323,327,328,330,331,334,338,342,345,348,349,351,352,355,360,361,362,364,365,366,],[-192,-150,-65,-147,-59,-60,-149,-61,-153,78,-62,-151,-202,-146,-152,-148,-64,-63,-193,-21,146,-176,160,-173,-175,-68,-145,-200,-26,176,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-104,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-204,-203,-201,209,-16,-31,-48,-38,-34,-36,-29,-47,-35,-30,-41,-33,-28,-37,-32,-191,-174,-172,-178,-177,-179,-195,-154,234,236,-142,-82,-134,-18,-206,-24,-23,-46,-20,-69,-75,-171,-194,-27,-25,-130,-163,-110,-123,-96,-17,-15,-205,-22,-170,-190,-42,-188,315,-162,-93,-19,-39,-40,-49,-71,-76,-183,-189,340,343,-101,-51,-56,-187,-181,-182,-222,354,-102,-94,-180,-221,-220,-219,-230,-218,-216,-217,-229,-215,]),'RBRACK':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,128,130,131,135,140,143,145,149,150,151,153,154,166,201,202,203,210,223,225,232,239,246,247,250,252,256,259,261,262,263,267,268,269,270,271,272,273,296,301,302,304,305,323,325,326,329,345,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-38,-34,-36,-35,-33,-37,-32,-103,223,-70,-98,225,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,296,-205,-55,-53,299,-54,-50,303,304,-74,-45,305,-97,-93,-39,-40,-71,-76,-101,348,-43,-52,-102,-94,]),'ELSE':([1,6,13,16,22,33,44,45,46,59,67,78,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,159,166,181,182,201,202,203,210,223,225,232,234,239,240,241,246,247,248,250,256,290,294,296,304,305,319,323,345,347,348,357,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-144,-68,-14,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-143,-195,-232,243,-142,-82,-134,-206,-69,-75,-194,-13,-130,-164,-165,-110,-123,291,-96,-205,291,-105,-93,-71,-76,243,-101,-102,-108,-94,-107,]),'LEQ':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,189,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'PLUS':([1,6,13,16,22,33,44,45,46,67,82,83,86,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,-78,197,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,197,-123,-96,-205,-67,-93,-71,-76,-94,]),'REF':([13,50,51,120,142,174,220,282,299,337,],[-59,-57,142,142,142,142,-58,142,142,142,]),'ID':([0,2,8,13,14,18,19,23,29,30,31,32,35,37,38,47,48,50,51,54,55,57,59,60,64,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,120,123,124,137,142,144,146,147,155,159,160,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,209,212,213,214,215,220,222,224,226,228,229,230,233,234,235,236,240,242,243,249,254,280,282,287,291,293,295,298,299,300,306,309,315,317,321,337,339,340,343,353,354,356,363,],[13,13,13,-59,-5,-6,13,-8,13,-7,13,13,13,13,-3,-4,13,-57,13,13,13,13,-144,13,13,13,-160,-158,-161,-159,-157,-156,13,-155,13,-14,-138,-137,13,13,13,13,13,13,-2,13,13,13,-10,13,13,-143,13,13,13,-11,-131,13,-133,-132,13,-118,-111,-113,13,-119,-115,-120,-114,-121,-117,-112,-116,13,-128,-126,-127,-125,-124,13,13,-9,13,13,13,13,-58,13,13,13,13,13,13,13,-13,13,-12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'END':([14,18,23,30,38,47,78,124,146,176,209,234,236,315,339,340,343,353,354,356,363,],[-5,-6,-8,-7,-3,-4,-14,-2,-10,-11,-9,-13,-12,338,351,352,355,361,362,364,366,]),'DIVIDE':([1,6,13,16,22,33,44,45,46,67,82,83,86,88,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,180,-141,-82,-78,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,180,-96,-205,-67,-93,-71,-76,-94,]),'WHILE':([1,6,8,13,16,22,33,44,45,46,58,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,162,163,164,166,201,202,203,210,223,225,232,239,246,247,250,256,275,276,278,296,304,305,308,311,323,330,331,334,345,348,349,],[-192,-65,57,-59,-60,-61,-62,-64,-63,-193,57,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-178,-177,-179,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-190,-42,-188,-93,-71,-76,-183,-189,-101,-187,-181,-182,-102,-94,-180,]),'IN':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,161,165,166,201,202,203,210,223,225,231,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,191,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-184,229,-195,-142,-82,-134,-206,-69,-75,280,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'DIF':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,194,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'RPAREN':([1,6,13,16,22,33,44,45,46,65,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,123,126,127,128,130,131,133,134,135,136,138,140,141,143,145,166,167,168,169,201,202,203,205,210,211,219,223,225,232,235,239,246,247,250,256,264,266,271,281,284,285,296,301,302,303,304,305,312,313,323,326,327,328,335,336,341,345,348,350,358,359,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,166,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,210,-31,-48,-38,-34,-36,-29,-47,-35,-30,-41,-33,-28,-37,-32,-195,-197,-198,232,-142,-82,-134,250,-206,256,-46,-69,-75,-194,283,-130,-110,-123,-96,-205,301,302,-45,-196,-224,318,-93,-39,-40,-49,-71,-76,-227,-225,-101,-43,-51,-56,-226,-228,-223,-102,-94,360,-231,365,]),'EXIT':([0,8,14,18,23,30,38,47,48,59,60,77,78,124,146,155,159,160,176,181,209,228,234,236,240,243,287,315,339,340,343,353,354,356,363,],[19,19,-5,-6,-8,-7,-3,-4,19,-144,19,19,-14,-2,-10,19,-143,19,-11,19,-9,19,-13,-12,19,19,19,19,19,19,19,19,19,19,19,]),'COLON':([1,6,13,16,22,26,33,42,44,45,46,56,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,148,149,151,152,153,166,201,202,203,210,223,225,232,239,246,247,250,251,256,257,258,260,296,304,305,323,345,348,],[-192,-65,-59,-60,-61,77,-62,-145,-64,-63,-193,155,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,222,-103,-73,224,-44,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,295,-205,298,-44,-67,-93,-71,-76,-101,-102,-94,]),'MINUSASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,67,107,166,210,223,225,232,256,304,305,],[-192,-65,-59,-60,71,-61,-62,-66,-67,-64,-63,-193,-68,-67,-195,-206,-69,-75,-194,-205,-71,-76,]),'MINUS':([1,6,13,16,22,31,32,33,35,44,45,46,54,55,57,65,66,67,68,69,70,71,72,73,74,82,83,86,88,89,90,91,93,95,96,98,99,100,102,103,104,105,106,107,109,111,112,113,114,115,116,123,137,166,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,210,212,213,214,215,222,223,224,225,226,230,232,233,239,242,246,247,249,250,254,256,260,291,293,295,296,298,300,304,305,306,309,321,348,],[-192,-65,-59,-60,-61,92,92,-62,92,-64,-63,-193,92,92,92,92,-160,-68,-158,-161,-159,-157,-156,92,-155,-122,-141,-82,-78,198,-86,-139,-87,-84,-92,-81,-83,-89,92,92,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,92,92,-195,-131,92,-133,-132,-118,-111,-113,92,-119,-115,-120,-114,-121,-117,-112,-116,92,-128,-126,-127,-125,-124,-142,-82,-134,92,-206,92,92,92,92,92,-69,92,-75,92,92,-194,92,-130,92,198,-123,92,-96,92,-205,-67,92,92,92,-93,92,92,-71,-76,92,92,92,-94,]),'ICONST':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,218,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[93,93,93,93,93,93,93,-160,-158,-161,-159,-157,-156,93,-155,-138,-137,93,93,93,93,93,-131,93,-133,-132,-118,-111,-113,93,-119,-115,-120,-114,-121,-117,-112,-116,93,-128,-126,-127,-125,-124,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'UPPER':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[12,12,-5,-6,-8,-7,12,12,12,-3,-4,12,12,12,12,-144,12,12,-160,-158,-161,-159,-157,-156,12,-155,12,-14,-138,-137,12,12,12,12,12,-2,12,-10,12,-143,12,-11,-131,12,-133,-132,12,-118,-111,-113,12,-119,-115,-120,-114,-121,-117,-112,-116,12,-128,-126,-127,-125,-124,12,-9,12,12,12,12,12,12,12,12,12,12,-13,-12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ARROW':([1,6,13,16,17,22,31,32,33,35,41,42,44,45,46,54,55,57,65,66,67,68,69,70,71,72,73,74,85,91,92,101,102,103,106,107,123,137,166,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,206,210,212,213,214,215,222,223,224,225,226,230,232,233,242,249,254,256,260,291,293,295,298,300,304,305,306,309,321,],[-192,-65,-59,-60,67,-61,94,94,-62,94,-66,-67,-64,-63,-193,94,94,94,94,-160,-68,-158,-161,-159,-157,-156,94,-155,-138,67,-137,94,94,94,-66,-67,94,94,-195,-131,94,-133,-132,-118,-111,-113,94,-119,-115,-120,-114,-121,-117,-112,-116,94,-128,-126,-127,-125,-124,67,94,-206,94,94,94,94,94,-69,94,-75,94,94,-194,94,94,94,94,-205,-67,94,94,94,94,94,-71,-76,94,94,94,]),'BOOL':([13,50,51,120,142,174,212,220,282,299,300,337,],[-59,-57,143,143,143,143,143,-58,143,143,143,143,]),'ELSIF':([1,6,13,16,22,33,44,45,46,59,67,78,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,159,166,181,182,201,202,203,210,223,225,232,234,239,240,241,246,247,248,250,256,290,294,296,304,305,319,323,345,347,348,357,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-144,-68,-14,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-143,-195,-232,242,-142,-82,-134,-206,-69,-75,-194,-13,-130,-164,-165,-110,-123,293,-96,-205,321,-105,-93,-71,-76,242,-101,-102,-108,-94,-107,]),'TIMESASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,67,107,166,210,223,225,232,256,304,305,],[-192,-65,-59,-60,68,-61,-62,-66,-67,-64,-63,-193,-68,-67,-195,-206,-69,-75,-194,-205,-71,-76,]),'SCONST':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[96,96,96,96,96,96,96,-160,-158,-161,-159,-157,-156,96,-155,-138,-137,96,96,96,96,96,-131,96,-133,-132,-118,-111,-113,96,-119,-115,-120,-114,-121,-117,-112,-116,96,-128,-126,-127,-125,-124,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'THEN':([1,6,13,16,22,33,44,45,46,67,82,83,84,86,87,88,89,90,91,93,95,96,97,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,166,201,202,203,204,210,223,225,232,239,246,247,250,256,286,296,304,305,323,324,345,346,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,181,-82,-99,-78,-109,-86,-139,-87,-84,-92,-104,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,249,-206,-69,-75,-194,-130,-110,-123,-96,-205,181,-93,-71,-76,-101,249,-102,249,-94,]),'LBRACK':([1,3,6,7,13,16,17,22,33,41,42,44,45,46,67,83,86,88,90,91,93,95,96,98,99,100,104,105,106,107,108,111,114,115,116,125,139,166,201,202,210,223,225,232,250,256,260,296,304,305,348,],[-192,54,-65,55,-59,-60,-72,-61,-62,-66,-67,-64,-63,-193,-68,-95,-82,-78,-86,-72,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,206,-91,-88,-80,-79,212,218,-195,-72,-82,-206,-69,-75,-194,-96,-205,-67,-93,-71,-76,-94,]),'LOWER':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[25,25,-5,-6,-8,-7,25,25,25,-3,-4,25,25,25,25,-144,25,25,-160,-158,-161,-159,-157,-156,25,-155,25,-14,-138,-137,25,25,25,25,25,-2,25,-10,25,-143,25,-11,-131,25,-133,-132,25,-118,-111,-113,25,-119,-115,-120,-114,-121,-117,-112,-116,25,-128,-126,-127,-125,-124,25,-9,25,25,25,25,25,25,25,25,25,25,-13,-12,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'ASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,50,51,67,79,107,126,127,128,130,131,132,133,134,135,136,138,140,141,143,145,161,165,166,207,210,219,220,223,225,232,256,301,302,303,304,305,327,328,],[-192,-65,-59,-60,74,-61,-62,-66,-67,-64,-63,-193,-57,137,-68,174,-67,-31,-48,-38,-34,-36,214,-29,-47,-35,-30,-41,-33,-28,-37,-32,-184,230,-195,254,-206,-46,-58,-69,-75,-194,-205,-39,-40,-49,-71,-76,-51,-56,]),'BY':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,277,278,279,296,304,305,323,345,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-185,-188,309,-93,-71,-76,-101,-102,-94,]),'TO':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,149,166,201,202,203,210,223,225,232,239,246,247,250,256,277,278,279,296,304,305,307,310,323,332,333,345,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-103,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-185,-188,306,-93,-71,-76,306,306,-101,306,-186,-102,-94,]),'GEQ':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,183,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'OD':([8,59,60,78,159,160,228,234,],[62,-144,158,-14,-143,227,274,-13,]),'CHARS':([13,50,51,120,142,174,220,282,299,337,],[-59,-57,139,139,139,139,-58,139,139,139,]),'AND':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,185,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'FI':([1,6,13,16,22,33,44,45,46,59,67,78,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,159,166,181,182,201,202,203,210,223,225,232,234,239,240,241,243,245,246,247,250,256,287,288,292,296,304,305,319,320,322,323,344,345,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-144,-68,-14,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-143,-195,-232,244,-142,-82,-134,-206,-69,-75,-194,-13,-130,-164,-165,-232,289,-110,-123,-96,-205,-166,-167,323,-93,-71,-76,-169,345,-106,-101,-168,-102,-94,]),'IF':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,102,103,123,124,137,146,155,159,160,176,181,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[31,31,-5,-6,-8,-7,102,102,102,-3,-4,31,102,102,102,-144,31,102,-160,-158,-161,-159,-157,-156,102,-155,31,-14,102,102,102,-2,102,-10,31,-143,31,-11,31,102,-9,102,102,102,102,102,102,102,31,102,102,-13,-12,31,102,31,102,102,31,102,102,102,102,102,102,102,31,102,31,31,31,31,31,31,31,]),'RESULT':([0,8,14,18,23,30,38,47,48,59,60,77,78,124,146,155,159,160,176,181,209,228,234,236,240,243,287,315,339,340,343,353,354,356,363,],[32,32,-5,-6,-8,-7,-3,-4,32,-144,32,32,-14,-2,-10,32,-143,32,-11,32,-9,32,-13,-12,32,32,32,32,32,32,32,32,32,32,32,]),'RETURNS':([283,318,],[314,314,]),'FALSE':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[114,114,114,114,114,114,114,-160,-158,-161,-159,-157,-156,114,-155,-138,-137,114,114,114,114,114,-131,114,-133,-132,-118,-111,-113,114,-119,-115,-120,-114,-121,-117,-112,-116,114,-128,-126,-127,-125,-124,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'OR':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,190,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'INT':([13,50,51,120,142,174,212,220,282,299,300,337,],[-59,-57,131,131,131,131,131,-58,131,131,131,131,]),'RETURN':([0,8,14,18,23,30,38,47,48,59,60,77,78,124,146,155,159,160,176,181,209,228,234,236,240,243,287,315,339,340,343,353,354,356,363,],[35,35,-5,-6,-8,-7,-3,-4,35,-144,35,35,-14,-2,-10,35,-143,35,-11,35,-9,35,-13,-12,35,35,35,35,35,35,35,35,35,35,35,]),'GTR':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,192,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'SUCC':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[15,15,-5,-6,-8,-7,15,15,15,-3,-4,15,15,15,15,-144,15,15,-160,-158,-161,-159,-157,-156,15,-155,15,-14,-138,-137,15,15,15,15,15,-2,15,-10,15,-143,15,-11,-131,15,-133,-132,15,-118,-111,-113,15,-119,-115,-120,-114,-121,-117,-112,-116,15,-128,-126,-127,-125,-124,15,-9,15,15,15,15,15,15,15,15,15,15,-13,-12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DCL':([0,14,18,23,30,38,47,48,78,124,146,176,209,234,236,315,339,340,343,353,354,356,363,],[37,-5,-6,-8,-7,-3,-4,37,-14,-2,-10,-11,-9,-13,-12,37,37,37,37,37,37,37,37,]),'READ':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[11,11,-5,-6,-8,-7,11,11,11,-3,-4,11,11,11,11,-144,11,11,-160,-158,-161,-159,-157,-156,11,-155,11,-14,-138,-137,11,11,11,11,11,-2,11,-10,11,-143,11,-11,-131,11,-133,-132,11,-118,-111,-113,11,-119,-115,-120,-114,-121,-117,-112,-116,11,-128,-126,-127,-125,-124,11,-9,11,11,11,11,11,11,11,11,11,11,-13,-12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'TYPE':([0,14,18,23,30,38,47,48,78,124,146,176,209,234,236,315,339,340,343,353,354,356,363,],[29,-5,-6,-8,-7,-3,-4,29,-14,-2,-10,-11,-9,-13,-12,29,29,29,29,29,29,29,29,]),'CHAR':([13,50,51,120,142,174,212,220,282,299,300,337,],[-59,-57,128,128,128,128,128,-58,128,128,128,128,]),'CCONST':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[104,104,104,104,104,104,104,-160,-158,-161,-159,-157,-156,104,-155,-138,-137,104,104,104,104,104,-131,104,-133,-132,-118,-111,-113,104,-119,-115,-120,-114,-121,-117,-112,-116,104,-128,-126,-127,-125,-124,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'PRINT':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[43,43,-5,-6,-8,-7,43,43,43,-3,-4,43,43,43,43,-144,43,43,-160,-158,-161,-159,-157,-156,43,-155,43,-14,-138,-137,43,43,43,43,43,-2,43,-10,43,-143,43,-11,-131,43,-133,-132,43,-118,-111,-113,43,-119,-115,-120,-114,-121,-117,-112,-116,43,-128,-126,-127,-125,-124,43,-9,43,43,43,43,43,43,43,43,43,43,-13,-12,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'PLUSASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,67,107,166,210,223,225,232,256,304,305,],[-192,-65,-59,-60,72,-61,-62,-66,-67,-64,-63,-193,-68,-67,-195,-206,-69,-75,-194,-205,-71,-76,]),'LOC':([13,126,127,128,130,131,133,134,135,136,138,140,141,143,145,219,301,302,303,312,327,328,350,],[-59,-31,-48,-38,-34,-36,-29,-47,-35,-30,-41,-33,-28,-37,-32,-46,-39,-40,-49,336,-51,-56,358,]),'NULL':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[111,111,111,111,111,111,111,-160,-158,-161,-159,-157,-156,111,-155,-138,-137,111,111,111,111,111,-131,111,-133,-132,-118,-111,-113,111,-119,-115,-120,-114,-121,-117,-112,-116,111,-128,-126,-127,-125,-124,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'LPAREN':([4,9,11,12,13,15,21,25,31,32,35,39,42,43,49,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,107,123,128,129,130,131,133,135,137,138,140,143,145,172,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,260,263,291,293,295,298,300,301,302,306,309,314,321,],[-208,65,-213,-210,-59,-209,-212,-211,103,103,103,123,-199,-214,-207,103,103,103,103,-160,-158,-161,-159,-157,-156,103,-155,-138,-137,103,103,103,-199,103,-38,213,-34,-36,215,-35,103,-42,-33,-37,-32,235,-131,103,-133,-132,-118,-111,-113,103,-119,-115,-120,-114,-121,-117,-112,-116,103,-128,-126,-127,-125,-124,103,103,103,103,103,103,103,103,103,103,103,103,103,-42,215,103,103,103,103,103,-39,-40,103,103,337,103,]),'DOWN':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,149,161,165,166,201,202,203,210,223,225,232,239,246,247,250,256,277,278,279,296,304,305,307,323,333,345,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,-103,-184,231,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-185,-188,310,-93,-71,-76,332,-101,-186,-102,-94,]),'LSS':([1,6,13,16,22,33,44,45,46,67,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,111,112,113,114,115,116,166,201,202,203,210,223,225,232,239,246,247,250,256,260,296,304,305,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-68,-122,-141,-82,187,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-91,-140,-129,-88,-80,-79,-195,-142,-82,-134,-206,-69,-75,-194,-130,-110,-123,-96,-205,-67,-93,-71,-76,-94,]),'DO':([0,8,14,18,23,30,38,47,48,59,60,77,78,124,146,155,159,160,176,181,209,228,234,236,240,243,287,315,339,340,343,353,354,356,363,],[8,8,-5,-6,-8,-7,-3,-4,8,-144,8,8,-14,-2,-10,8,-143,8,-11,8,-9,8,-13,-12,8,8,8,8,8,8,8,8,8,8,8,]),'DIVIDEASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,67,107,166,210,223,225,232,256,304,305,],[-192,-65,-59,-60,70,-61,-62,-66,-67,-64,-63,-193,-68,-67,-195,-206,-69,-75,-194,-205,-71,-76,]),'CONCATASSIGN':([1,6,13,16,17,22,33,41,42,44,45,46,67,107,166,210,223,225,232,256,304,305,],[-192,-65,-59,-60,69,-61,-62,-66,-67,-64,-63,-193,-68,-67,-195,-206,-69,-75,-194,-205,-71,-76,]),'$end':([14,18,23,28,30,38,47,48,78,124,146,176,209,234,236,],[-5,-6,-8,0,-7,-3,-4,-1,-14,-2,-10,-11,-9,-13,-12,]),'PROC':([77,],[172,]),'COMMA':([1,6,13,16,22,33,44,45,46,50,51,52,53,67,79,80,81,82,83,86,87,88,89,90,91,93,95,96,98,99,100,104,105,106,107,109,110,111,112,113,114,115,116,120,121,122,126,127,128,130,131,133,134,135,136,138,140,141,143,145,153,154,166,167,168,169,201,202,203,207,210,211,216,217,219,220,221,223,225,232,237,238,239,246,247,250,252,253,255,256,259,261,262,263,265,271,273,281,282,284,285,296,297,301,302,303,304,305,312,313,323,326,327,328,329,335,336,341,345,348,],[-192,-65,-59,-60,-61,-62,-64,-63,-193,-57,144,-21,147,-68,144,-26,175,-122,-141,-82,-99,-78,-109,-86,-139,-87,-84,-92,-81,-83,-89,-90,-85,-66,-67,-135,-100,-91,-140,-129,-88,-80,-79,144,208,-16,-31,-48,-38,-34,-36,-29,-47,-35,-30,-41,-33,-28,-37,-32,-98,226,-195,-197,-198,233,-142,-82,-134,-18,-206,233,-24,-23,-46,-58,-20,-69,-75,-194,-27,-25,-130,-110,-123,-96,226,-17,-15,-205,-55,-53,300,-54,-22,-45,-97,-196,144,-224,317,-93,-19,-39,-40,-49,-71,-76,-227,-225,-101,-43,-51,-56,-52,-226,-228,-223,-102,-94,]),'FOR':([8,],[64,]),'TRUE':([31,32,35,54,55,57,65,66,68,69,70,71,72,73,74,85,92,101,102,103,123,137,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[100,100,100,100,100,100,100,-160,-158,-161,-159,-157,-156,100,-155,-138,-137,100,100,100,100,100,-131,100,-133,-132,-118,-111,-113,100,-119,-115,-120,-114,-121,-117,-112,-116,100,-128,-126,-127,-125,-124,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'NUM':([0,8,14,18,23,30,31,32,35,38,47,48,54,55,57,59,60,65,66,68,69,70,71,72,73,74,77,78,85,92,94,101,102,103,123,124,137,146,155,159,160,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,209,212,213,214,215,222,224,226,228,230,233,234,236,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[49,49,-5,-6,-8,-7,49,49,49,-3,-4,49,49,49,49,-144,49,49,-160,-158,-161,-159,-157,-156,49,-155,49,-14,-138,-137,49,49,49,49,49,-2,49,-10,49,-143,49,-11,-131,49,-133,-132,49,-118,-111,-113,49,-119,-115,-120,-114,-121,-117,-112,-116,49,-128,-126,-127,-125,-124,49,-9,49,49,49,49,49,49,49,49,49,49,-13,-12,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lower_bound':([55,206,212,213,215,300,],[152,251,257,257,257,257,]),'procedure_call':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'parameter_attribute':([312,],[335,]),'string_location':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'string_concatenation_operator':([89,246,],[199,199,]),'return_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'discrete_range_mode':([51,120,142,174,212,282,299,300,337,],[135,135,135,135,135,135,135,135,135,]),'primitive_value':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'discrete_mode_name':([51,120,142,174,212,229,280,282,299,300,337,],[129,129,129,129,129,275,311,129,129,129,129,]),'then_expression':([204,324,346,],[248,347,357,]),'step_enumeration':([64,],[164,]),'assignment_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'mode':([51,120,142,174,282,299,337,],[132,207,219,237,312,328,350,]),'integer_literal':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,218,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[86,86,86,86,86,86,86,86,202,86,86,86,86,86,86,86,86,86,86,86,86,267,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'result_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'formal_parameter_list':([235,],[285,]),'location':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[17,17,91,91,91,17,91,91,91,17,91,91,17,201,91,91,91,91,91,17,17,91,17,91,91,91,91,91,91,91,91,91,91,17,91,91,17,91,17,91,91,17,91,91,91,91,91,91,91,17,91,17,17,17,17,17,17,17,]),'operand4':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[109,109,109,109,109,109,109,109,203,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'parameter_list':([65,123,],[169,211,]),'newmode_statement':([0,48,315,339,340,343,353,354,356,363,],[18,18,18,18,18,18,18,18,18,18,]),'character_literal':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'action_statement_list':([8,160,181,243,],[60,228,240,287,]),'parenthesized_expression':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'dereferenced_reference':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'else_clause':([182,319,],[245,344,]),'action_statement':([0,8,48,60,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[23,59,23,159,59,59,159,159,59,159,23,23,23,23,23,23,23,23,]),'boolean_literal':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'expression':([31,32,35,54,55,57,65,73,102,103,123,137,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[97,117,117,149,153,97,168,170,97,205,168,216,153,258,258,216,258,149,271,273,278,168,97,294,297,322,97,271,271,258,278,149,97,]),'right_element':([222,],[269,]),'element_mode':([299,],[327,]),'label_id':([0,8,19,48,60,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[26,56,76,26,56,56,56,56,56,56,56,26,26,26,26,26,26,26,26,]),'relational_operator':([87,],[184,]),'start_element':([54,],[150,]),'synonym_definition':([2,147,],[52,221,]),'start_value':([230,],[279,]),'iteration':([64,],[163,]),'literal_range':([212,213,215,300,],[259,264,266,259,]),'mode_definition':([29,175,],[80,238,]),'arithmetic_multiplicative_operator':([82,247,],[178,178,]),'declaration_list':([37,],[121,]),'operand2':([31,32,35,54,55,57,65,73,102,103,123,137,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[82,82,82,82,82,82,82,82,82,82,82,82,82,247,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'end_value':([279,307,310,332,],[308,331,334,349,]),'membership_operator':([87,],[193,]),'integer_mode':([51,120,142,174,212,282,299,300,337,],[145,145,145,145,145,145,145,145,145,]),'call_action':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[41,41,106,106,106,41,106,106,106,41,106,106,41,106,106,106,106,106,106,41,41,106,41,106,106,106,106,106,106,106,106,106,106,41,106,106,41,106,41,106,106,41,106,106,106,106,106,106,106,41,106,41,41,41,41,41,41,41,]),'identifier':([0,2,8,19,29,31,32,35,37,48,51,54,55,57,60,64,65,73,77,94,101,102,103,120,123,137,142,144,147,155,160,174,175,178,181,186,195,206,208,212,213,214,215,222,224,226,228,229,230,233,235,240,242,243,249,254,280,282,287,291,293,295,298,299,300,306,309,315,317,321,337,339,340,343,353,354,356,363,],[42,50,42,75,50,107,107,107,50,42,138,107,107,107,42,161,107,107,107,107,107,107,107,138,107,107,138,220,50,107,42,138,50,107,42,107,107,107,50,260,107,107,107,107,107,107,42,276,107,107,50,42,107,42,107,107,276,138,42,107,107,107,107,138,260,107,107,42,50,107,138,42,42,42,42,42,42,42,]),'while_control':([8,58,],[63,157,]),'array_element':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'range_enumeration':([64,],[162,]),'step_value':([279,],[307,]),'boolean_mode':([51,120,142,174,212,282,299,300,337,],[140,140,140,140,140,140,140,140,140,]),'mode_name':([51,120,142,174,282,299,337,],[141,141,141,141,141,141,141,]),'operator2':([89,246,],[195,195,]),'referenced_location':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'operand3':([31,32,35,54,55,57,65,73,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[113,113,113,113,113,113,113,113,113,113,113,113,239,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'result_spec':([283,318,],[316,342,]),'string_slice':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'array_slice':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'synonym_statement':([0,48,315,339,340,343,353,354,356,363,],[14,14,14,14,14,14,14,14,14,14,]),'parameter_spec':([282,],[313,]),'value_array_element':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'elsif_expression':([248,],[290,]),'result_attribute':([350,],[359,]),'left_element':([54,],[148,]),'newmode_list':([29,],[81,]),'array_mode':([51,120,142,174,282,299,337,],[127,127,127,127,127,127,127,]),'bracketed_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'index_mode':([212,300,],[261,329,]),'boolean_expression':([31,57,102,242,293,321,],[84,156,204,286,324,346,]),'character_mode':([51,120,142,174,212,282,299,300,337,],[130,130,130,130,130,130,130,130,130,]),'upper_bound':([224,295,298,],[272,325,326,]),'procedure_name':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'discrete_expression':([230,306,],[277,330,]),'else_expression':([248,290,],[292,320,]),'string_mode':([51,120,142,174,282,299,337,],[134,134,134,134,134,134,134,]),'arithmetic_additive_operator':([89,246,],[200,200,]),'string_length':([218,],[268,]),'literal':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'operator1':([87,],[186,]),'identifier_list':([2,29,37,147,175,208,235,317,],[51,79,120,51,79,120,282,282,]),'character_string_literal':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'parameter':([65,123,233,],[167,167,281,]),'declaration':([37,208,],[122,255,]),'formal_parameter':([235,317,],[284,341,]),'array_location':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for_control':([8,],[58,]),'exit_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'do_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'reference_mode':([51,120,142,174,282,299,337,],[136,136,136,136,136,136,136,]),'declaration_statement':([0,48,315,339,340,343,353,354,356,363,],[47,47,47,47,47,47,47,47,47,47,]),'loop_counter':([64,],[165,]),'procedure_definition':([77,],[173,]),'control_part':([8,],[61,]),'action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[27,27,27,27,171,171,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'program':([0,],[28,]),'composite_mode':([51,120,142,174,282,299,337,],[126,126,126,126,126,126,126,]),'procedure_statement':([0,48,315,339,340,343,353,354,356,363,],[30,30,30,30,30,30,30,30,30,30,]),'monadic_operator':([31,32,35,54,55,57,65,73,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'if_action':([0,8,48,60,77,155,160,181,228,240,243,287,315,339,340,343,353,354,356,363,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'constant_expression':([137,214,],[217,265,]),'string_element':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'index_mode_list':([212,],[262,]),'initialization':([207,],[253,]),'operand1':([31,32,35,54,55,57,65,73,102,103,123,137,186,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[89,89,89,89,89,89,89,89,89,89,89,89,246,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'integer_expression':([54,222,309,],[151,270,333,]),'value_array_slice':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'discrete_mode':([51,120,142,174,212,282,299,300,337,],[133,133,133,133,263,133,133,263,133,]),'then_clause':([84,286,],[182,319,]),'empty':([181,243,],[241,288,]),'location_name':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'statement':([0,48,315,339,340,343,353,354,356,363,],[38,124,38,124,38,38,124,38,124,124,]),'result':([32,35,],[118,119,]),'empty_literal':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'builtin_name':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'array_primitive_value':([31,32,35,54,55,57,65,73,101,102,103,123,137,178,186,195,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'conditional_expression':([31,32,35,54,55,57,65,73,102,103,123,137,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'assigning_operator':([17,],[73,]),'expression_list':([55,206,],[154,252,]),'builtin_call':([0,8,31,32,35,48,54,55,57,60,65,73,77,94,101,102,103,123,137,155,160,178,181,186,195,206,212,213,214,215,222,224,226,228,230,233,240,242,243,249,254,287,291,293,295,298,300,306,309,315,321,339,340,343,353,354,356,363,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'operand0':([31,32,35,54,55,57,65,73,102,103,123,137,206,212,213,214,215,222,224,226,230,233,242,249,254,291,293,295,298,300,306,309,321,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'statement_list':([0,315,340,343,354,],[48,339,353,356,363,]),'synonym_list':([2,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',68),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',69),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyaparser.py',73),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyaparser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyaparser.py',83),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyaparser.py',88),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyaparser.py',92),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyaparser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',102),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',103),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',110),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',111),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',118),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',124),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',125),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyaparser.py',132),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyaparser.py',133),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',140),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',146),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',147),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',154),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',158),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',159),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',160),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',161),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',165),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',166),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',167),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',168),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',172),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',176),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',180),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',184),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',185),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',189),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',193),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',197),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',201),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',205),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',209),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',213),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',214),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyaparser.py',218),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyaparser.py',222),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyaparser.py',226),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',230),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',231),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',238),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',239),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',243),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',249),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',250),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',257),
  ('location -> location_name','location',1,'p_location','lyaparser.py',263),
  ('location -> dereferenced_reference','location',1,'p_location','lyaparser.py',264),
  ('location -> string_element','location',1,'p_location','lyaparser.py',265),
  ('location -> string_slice','location',1,'p_location','lyaparser.py',266),
  ('location -> array_element','location',1,'p_location','lyaparser.py',267),
  ('location -> array_slice','location',1,'p_location','lyaparser.py',268),
  ('location -> call_action','location',1,'p_location','lyaparser.py',269),
  ('location_name -> identifier','location_name',1,'p_location_name','lyaparser.py',273),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaparser.py',277),
  ('string_element -> string_location LBRACK start_element RBRACK','string_element',4,'p_string_element','lyaparser.py',281),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyaparser.py',285),
  ('string_slice -> string_location LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyaparser.py',289),
  ('string_location -> location','string_location',1,'p_string_location','lyaparser.py',293),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyaparser.py',297),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyaparser.py',301),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyaparser.py',305),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyaparser.py',309),
  ('array_location -> location','array_location',1,'p_array_location','lyaparser.py',313),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',319),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',320),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',321),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',322),
  ('literal -> integer_literal','literal',1,'p_literal','lyaparser.py',326),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaparser.py',327),
  ('literal -> character_literal','literal',1,'p_literal','lyaparser.py',328),
  ('literal -> empty_literal','literal',1,'p_literal','lyaparser.py',329),
  ('literal -> character_string_literal','literal',1,'p_literal','lyaparser.py',330),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyaparser.py',334),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaparser.py',338),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaparser.py',339),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyaparser.py',343),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaparser.py',347),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyaparser.py',351),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyaparser.py',357),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyaparser.py',361),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',365),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',371),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',375),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',376),
  ('expression -> operand0','expression',1,'p_expression','lyaparser.py',383),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',384),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',388),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyaparser.py',392),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaparser.py',396),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',400),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',404),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',408),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyaparser.py',412),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',416),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaparser.py',420),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyaparser.py',424),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaparser.py',428),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaparser.py',429),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaparser.py',433),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaparser.py',434),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyaparser.py',435),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyaparser.py',436),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyaparser.py',437),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyaparser.py',438),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyaparser.py',439),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyaparser.py',440),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaparser.py',444),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaparser.py',448),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyaparser.py',452),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaparser.py',456),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaparser.py',457),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',461),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',462),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyaparser.py',466),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaparser.py',470),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyaparser.py',474),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',478),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',479),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',480),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','lyaparser.py',484),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaparser.py',488),
  ('operand3 -> integer_literal','operand3',1,'p_operand3','lyaparser.py',489),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaparser.py',493),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaparser.py',494),
  ('operand4 -> location','operand4',1,'p_operand4','lyaparser.py',498),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaparser.py',499),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaparser.py',500),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',504),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',510),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',511),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',518),
  ('action -> bracketed_action','action',1,'p_action','lyaparser.py',522),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',523),
  ('action -> call_action','action',1,'p_action','lyaparser.py',524),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',525),
  ('action -> return_action','action',1,'p_action','lyaparser.py',526),
  ('action -> result_action','action',1,'p_action','lyaparser.py',527),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',531),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',532),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',536),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',541),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',542),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',543),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',544),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',545),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',546),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',547),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyaparser.py',553),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',557),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',561),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyaparser.py',565),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',569),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyaparser.py',573),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyaparser.py',577),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyaparser.py',581),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyaparser.py',585),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyaparser.py',589),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',593),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyaparser.py',597),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyaparser.py',601),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',605),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',606),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',610),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',614),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',615),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyaparser.py',619),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyaparser.py',623),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyaparser.py',627),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',631),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',635),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',639),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaparser.py',643),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',647),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',651),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode_name','range_enumeration',4,'p_range_enumeration_down','lyaparser.py',655),
  ('range_enumeration -> loop_counter IN discrete_mode_name','range_enumeration',3,'p_range_enumeration','lyaparser.py',659),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',663),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',669),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',670),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyaparser.py',674),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',678),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyaparser.py',682),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaparser.py',683),
  ('parameter -> expression','parameter',1,'p_parameter','lyaparser.py',690),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyaparser.py',694),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyaparser.py',698),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyaparser.py',702),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',706),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaparser.py',710),
  ('result -> expression','result',1,'p_result','lyaparser.py',714),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyaparser.py',718),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',722),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',726),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',727),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',728),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',729),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',730),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',731),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',732),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',733),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyaparser.py',739),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyaparser.py',743),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyaparser.py',747),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyaparser.py',751),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyaparser.py',755),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyaparser.py',759),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyaparser.py',763),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyaparser.py',767),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',771),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',772),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',779),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaparser.py',783),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',784),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaparser.py',791),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','lyaparser.py',795),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaparser.py',799),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaparser.py',803),
  ('empty -> <empty>','empty',0,'p_empty','lyaparser.py',809),
]
