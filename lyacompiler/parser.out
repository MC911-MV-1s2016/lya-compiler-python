Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    RESULT
    BY
    TO
    CONCAT
    FOR
    DBLSLASH
    SUCC
    LENGTH
    DO
    LOWER
    PRED
    READ
    PRINT
    DOWN
    UPPER
    DBLQUO
    RCURL
    WHILE
    OD
    SINGQUO
    NUM
    LCURL
    RETURN
    CIRCUMF

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     statement -> action_statement
Rule 9     declaration_statement -> DCL declaration_list SEMICOL
Rule 10    synonym_statement -> SYN synonym_list SEMICOL
Rule 11    newmode_statement -> TYPE newmode_list SEMICOL
Rule 12    procedure_statement -> label_id COLON procedure_definition SEMICOL
Rule 13    action_statement -> label_id COLON action SEMICOL
Rule 14    action_statement -> action SEMICOL
Rule 15    declaration_list -> declaration_list COMMA declaration
Rule 16    declaration_list -> declaration
Rule 17    declaration -> identifier_list mode initialization
Rule 18    declaration -> identifier_list mode
Rule 19    initialization -> ASSIGN expression
Rule 20    synonym_list -> synonym_list COMMA synonym_definition
Rule 21    synonym_list -> synonym_definition
Rule 22    synonym_definition -> identifier_list mode ASSIGN constant_expression
Rule 23    synonym_definition -> identifier_list ASSIGN constant_expression
Rule 24    constant_expression -> expression
Rule 25    newmode_list -> newmode_list COMMA mode_definition
Rule 26    newmode_list -> mode_definition
Rule 27    mode_definition -> identifier_list ASSIGN mode
Rule 28    mode -> mode_name
Rule 29    mode -> discrete_mode
Rule 30    mode -> reference_mode
Rule 31    mode -> composite_mode
Rule 32    discrete_mode -> integer_mode
Rule 33    discrete_mode -> boolean_mode
Rule 34    discrete_mode -> character_mode
Rule 35    discrete_mode -> discrete_range_mode
Rule 36    integer_mode -> INT
Rule 37    boolean_mode -> BOOL
Rule 38    character_mode -> CHAR
Rule 39    discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN
Rule 40    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 41    mode_name -> identifier
Rule 42    discrete_mode_name -> identifier
Rule 43    literal_range -> lower_bound COLON upper_bound
Rule 44    lower_bound -> expression
Rule 45    upper_bound -> expression
Rule 46    reference_mode -> REF mode
Rule 47    composite_mode -> string_mode
Rule 48    composite_mode -> array_mode
Rule 49    string_mode -> CHARS LBRACK string_length RBRACK
Rule 50    string_length -> integer_literal
Rule 51    array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode
Rule 52    index_mode_list -> index_mode_list COMMA index_mode
Rule 53    index_mode_list -> index_mode
Rule 54    index_mode -> discrete_mode
Rule 55    index_mode -> literal_range
Rule 56    element_mode -> mode
Rule 57    identifier_list -> identifier
Rule 58    identifier_list -> identifier_list COMMA identifier
Rule 59    identifier -> ID
Rule 60    location -> location_name
Rule 61    location -> dereferenced_reference
Rule 62    location -> string_element
Rule 63    location -> string_slice
Rule 64    location -> array_element
Rule 65    location -> array_slice
Rule 66    location_name -> identifier
Rule 67    dereferenced_reference -> location ARROW
Rule 68    string_element -> string_location LBRACK start_element RBRACK
Rule 69    start_element -> integer_expression
Rule 70    string_slice -> string_location LBRACK left_element COLON right_element RBRACK
Rule 71    string_location -> location
Rule 72    left_element -> integer_expression
Rule 73    right_element -> integer_expression
Rule 74    array_element -> array_location LBRACK expression_list RBRACK
Rule 75    array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK
Rule 76    array_location -> location
Rule 77    primitive_value -> literal
Rule 78    literal -> integer_literal
Rule 79    literal -> boolean_literal
Rule 80    literal -> character_literal
Rule 81    literal -> empty_literal
Rule 82    literal -> character_string_literal
Rule 83    integer_literal -> ICONST
Rule 84    boolean_literal -> FALSE
Rule 85    boolean_literal -> TRUE
Rule 86    character_literal -> CCONST
Rule 87    empty_literal -> NULL
Rule 88    character_string_literal -> SCONST
Rule 89    expression_list -> expression_list COMMA expression
Rule 90    expression_list -> expression
Rule 91    expression -> operand0
Rule 92    integer_expression -> expression
Rule 93    boolean_expression -> expression
Rule 94    operand0 -> operand1
Rule 95    operand0 -> operand0 operator1 operand1
Rule 96    operator1 -> relational_operator
Rule 97    operator1 -> membership_operator
Rule 98    relational_operator -> AND
Rule 99    relational_operator -> OR
Rule 100   relational_operator -> EQUALS
Rule 101   relational_operator -> DIF
Rule 102   relational_operator -> GTR
Rule 103   relational_operator -> GEQ
Rule 104   relational_operator -> LSS
Rule 105   relational_operator -> LEQ
Rule 106   membership_operator -> IN
Rule 107   operand1 -> operand2
Rule 108   operand1 -> operand1 operator2 operand2
Rule 109   operator2 -> arithmetic_additive_operator
Rule 110   arithmetic_additive_operator -> PLUS
Rule 111   arithmetic_additive_operator -> MINUS
Rule 112   operand2 -> operand3
Rule 113   operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 114   arithmetic_multiplicative_operator -> TIMES
Rule 115   arithmetic_multiplicative_operator -> DIVIDE
Rule 116   arithmetic_multiplicative_operator -> PERC
Rule 117   operand3 -> monadic_operator operand4
Rule 118   operand3 -> operand4
Rule 119   monadic_operator -> MINUS
Rule 120   monadic_operator -> NOT
Rule 121   operand4 -> ICONST
Rule 122   action_statement_list -> action_statement_list action_statement
Rule 123   action_statement_list -> action_statement
Rule 124   label_id -> identifier
Rule 125   action -> bracketed_action
Rule 126   action -> assignment_action
Rule 127   action -> exit_action
Rule 128   bracketed_action -> if_action
Rule 129   assignment_action -> location assigning_operator expression
Rule 130   assigning_operator -> ASSIGN
Rule 131   assigning_operator -> PLUSASSIGN
Rule 132   assigning_operator -> MINUSASSIGN
Rule 133   assigning_operator -> TIMESASSIGN
Rule 134   assigning_operator -> DIVIDEASSIGN
Rule 135   assigning_operator -> PERCASSIGN
Rule 136   assigning_operator -> CONCATASSIGN
Rule 137   if_action -> IF boolean_expression then_clause else_clause FI
Rule 138   if_action -> IF boolean_expression then_clause FI
Rule 139   then_clause -> THEN action_statement_list
Rule 140   then_clause -> THEN empty
Rule 141   else_clause -> ELSE action_statement_list
Rule 142   else_clause -> ELSE empty
Rule 143   else_clause -> ELSIF boolean_expression then_clause else_clause
Rule 144   else_clause -> ELSIF boolean_expression then_clause
Rule 145   exit_action -> EXIT label_id
Rule 146   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
Rule 147   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
Rule 148   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
Rule 149   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END
Rule 150   procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END
Rule 151   procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END
Rule 152   procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END
Rule 153   procedure_definition -> PROC LPAREN RPAREN SEMICOL END
Rule 154   formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 155   formal_parameter_list -> formal_parameter
Rule 156   formal_parameter -> identifier_list parameter_spec
Rule 157   parameter_spec -> mode parameter_attribute
Rule 158   parameter_spec -> mode
Rule 159   parameter_attribute -> LOC
Rule 160   result_spec -> RETURNS LPAREN mode result_attribute RPAREN
Rule 161   result_spec -> RETURNS LPAREN mode RPAREN
Rule 162   result_attribute -> LOC
Rule 163   empty -> <empty>

Terminals, with rules where they appear

AND                  : 98
ARRAY                : 51
ARROW                : 67
ASSIGN               : 19 22 23 27 130
BOOL                 : 37
BY                   : 
CCONST               : 86
CHAR                 : 38
CHARS                : 49
CIRCUMF              : 
COLON                : 12 13 43 70 75
COMMA                : 15 20 25 52 58 89 154
CONCAT               : 
CONCATASSIGN         : 136
DBLQUO               : 
DBLSLASH             : 
DCL                  : 9
DIF                  : 101
DIVIDE               : 115
DIVIDEASSIGN         : 134
DO                   : 
DOWN                 : 
ELSE                 : 141 142
ELSIF                : 143 144
END                  : 146 147 148 149 150 151 152 153
EQUALS               : 100
EXIT                 : 145
FALSE                : 84
FI                   : 137 138
FOR                  : 
GEQ                  : 103
GTR                  : 102
ICONST               : 83 121
ID                   : 59
IF                   : 137 138
IN                   : 106
INT                  : 36
LBRACK               : 49 51 68 70 74 75
LCURL                : 
LENGTH               : 
LEQ                  : 105
LOC                  : 159 162
LOWER                : 
LPAREN               : 39 40 146 147 148 149 150 151 152 153 160 161
LSS                  : 104
MINUS                : 111 119
MINUSASSIGN          : 132
NOT                  : 120
NULL                 : 87
NUM                  : 
OD                   : 
OR                   : 99
PERC                 : 116
PERCASSIGN           : 135
PLUS                 : 110
PLUSASSIGN           : 131
PRED                 : 
PRINT                : 
PROC                 : 146 147 148 149 150 151 152 153
RBRACK               : 49 51 68 70 74 75
RCURL                : 
READ                 : 
REF                  : 46
RESULT               : 
RETURN               : 
RETURNS              : 160 161
RPAREN               : 39 40 146 147 148 149 150 151 152 153 160 161
SCONST               : 88
SEMICOL              : 9 10 11 12 13 14 146 147 148 149 150 151 152 153
SINGQUO              : 
SUCC                 : 
SYN                  : 10
THEN                 : 139 140
TIMES                : 114
TIMESASSIGN          : 133
TO                   : 
TRUE                 : 85
TYPE                 : 11
UPPER                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

action               : 13 14
action_statement     : 8 122 123
action_statement_list : 122 139 141
arithmetic_additive_operator : 109
arithmetic_multiplicative_operator : 113
array_element        : 64
array_location       : 74 75
array_mode           : 48
array_slice          : 65
assigning_operator   : 129
assignment_action    : 126
boolean_expression   : 137 138 143 144
boolean_literal      : 79
boolean_mode         : 33
bracketed_action     : 125
character_literal    : 80
character_mode       : 34
character_string_literal : 82
composite_mode       : 31
constant_expression  : 22 23
declaration          : 15 16
declaration_list     : 9 15
declaration_statement : 4
dereferenced_reference : 61
discrete_mode        : 29 40 54
discrete_mode_name   : 39
discrete_range_mode  : 35
element_mode         : 51
else_clause          : 137 143
empty                : 140 142
empty_literal        : 81
exit_action          : 127
expression           : 19 24 44 45 89 90 92 93 129
expression_list      : 74 89
formal_parameter     : 154 155
formal_parameter_list : 146 147 148 150 154
identifier           : 41 42 57 58 66 124
identifier_list      : 17 18 22 23 27 58 156
if_action            : 128
index_mode           : 52 53
index_mode_list      : 51 52
initialization       : 17
integer_expression   : 69 72 73
integer_literal      : 50 78
integer_mode         : 32
label_id             : 12 13 145
left_element         : 70
literal              : 77
literal_range        : 39 40 55
location             : 67 71 76 129
location_name        : 60
lower_bound          : 43 75
membership_operator  : 97
mode                 : 17 18 22 27 46 56 157 158 160 161
mode_definition      : 25 26
mode_name            : 28
monadic_operator     : 117
newmode_list         : 11 25
newmode_statement    : 6
operand0             : 91 95
operand1             : 94 95 108
operand2             : 107 108 113
operand3             : 112 113
operand4             : 117 118
operator1            : 95
operator2            : 108
parameter_attribute  : 157
parameter_spec       : 156
primitive_value      : 
procedure_definition : 12
procedure_statement  : 7
program              : 0
reference_mode       : 30
relational_operator  : 96
result_attribute     : 160
result_spec          : 146 147 149 151
right_element        : 70
start_element        : 68
statement            : 2 3
statement_list       : 1 2 146 148 149 152
string_element       : 62
string_length        : 49
string_location      : 68 70
string_mode          : 47
string_slice         : 63
synonym_definition   : 20 21
synonym_list         : 10 20
synonym_statement    : 5
then_clause          : 137 138 143 144
upper_bound          : 43 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    program                        shift and go to state 1
    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    statement                      shift and go to state 20
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    statement_list                 shift and go to state 23
    declaration_statement          shift and go to state 7
    newmode_statement              shift and go to state 26
    location_name                  shift and go to state 4
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    label_id                       shift and go to state 8
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (137) if_action -> IF . boolean_expression then_clause else_clause FI
    (138) if_action -> IF . boolean_expression then_clause FI
    (93) boolean_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    boolean_expression             shift and go to state 32
    operand3                       shift and go to state 37
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 36
    operand2                       shift and go to state 38
    operand1                       shift and go to state 39
    operand0                       shift and go to state 31

state 3

    (68) string_element -> string_location . LBRACK start_element RBRACK
    (70) string_slice -> string_location . LBRACK left_element COLON right_element RBRACK

    LBRACK          shift and go to state 42


state 4

    (60) location -> location_name .

    ARROW           reduce using rule 60 (location -> location_name .)
    ASSIGN          reduce using rule 60 (location -> location_name .)
    PLUSASSIGN      reduce using rule 60 (location -> location_name .)
    MINUSASSIGN     reduce using rule 60 (location -> location_name .)
    TIMESASSIGN     reduce using rule 60 (location -> location_name .)
    DIVIDEASSIGN    reduce using rule 60 (location -> location_name .)
    PERCASSIGN      reduce using rule 60 (location -> location_name .)
    CONCATASSIGN    reduce using rule 60 (location -> location_name .)
    LBRACK          reduce using rule 60 (location -> location_name .)


state 5

    (145) exit_action -> EXIT . label_id
    (124) label_id -> . identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    label_id                       shift and go to state 43
    identifier                     shift and go to state 44

state 6

    (63) location -> string_slice .

    ARROW           reduce using rule 63 (location -> string_slice .)
    ASSIGN          reduce using rule 63 (location -> string_slice .)
    PLUSASSIGN      reduce using rule 63 (location -> string_slice .)
    MINUSASSIGN     reduce using rule 63 (location -> string_slice .)
    TIMESASSIGN     reduce using rule 63 (location -> string_slice .)
    DIVIDEASSIGN    reduce using rule 63 (location -> string_slice .)
    PERCASSIGN      reduce using rule 63 (location -> string_slice .)
    CONCATASSIGN    reduce using rule 63 (location -> string_slice .)
    LBRACK          reduce using rule 63 (location -> string_slice .)


state 7

    (4) statement -> declaration_statement .

    END             reduce using rule 4 (statement -> declaration_statement .)
    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    EXIT            reduce using rule 4 (statement -> declaration_statement .)
    IF              reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)


state 8

    (12) procedure_statement -> label_id . COLON procedure_definition SEMICOL
    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 45


state 9

    (9) declaration_statement -> DCL . declaration_list SEMICOL
    (15) declaration_list -> . declaration_list COMMA declaration
    (16) declaration_list -> . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 49
    declaration_list               shift and go to state 46
    identifier_list                shift and go to state 47
    declaration                    shift and go to state 48

state 10

    (5) statement -> synonym_statement .

    END             reduce using rule 5 (statement -> synonym_statement .)
    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    EXIT            reduce using rule 5 (statement -> synonym_statement .)
    IF              reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)


state 11

    (7) statement -> procedure_statement .

    END             reduce using rule 7 (statement -> procedure_statement .)
    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    EXIT            reduce using rule 7 (statement -> procedure_statement .)
    IF              reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)


state 12

    (65) location -> array_slice .

    ARROW           reduce using rule 65 (location -> array_slice .)
    ASSIGN          reduce using rule 65 (location -> array_slice .)
    PLUSASSIGN      reduce using rule 65 (location -> array_slice .)
    MINUSASSIGN     reduce using rule 65 (location -> array_slice .)
    TIMESASSIGN     reduce using rule 65 (location -> array_slice .)
    DIVIDEASSIGN    reduce using rule 65 (location -> array_slice .)
    PERCASSIGN      reduce using rule 65 (location -> array_slice .)
    CONCATASSIGN    reduce using rule 65 (location -> array_slice .)
    LBRACK          reduce using rule 65 (location -> array_slice .)


state 13

    (125) action -> bracketed_action .

    SEMICOL         reduce using rule 125 (action -> bracketed_action .)


state 14

    (10) synonym_statement -> SYN . synonym_list SEMICOL
    (20) synonym_list -> . synonym_list COMMA synonym_definition
    (21) synonym_list -> . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    synonym_list                   shift and go to state 50
    identifier                     shift and go to state 49
    synonym_definition             shift and go to state 51
    identifier_list                shift and go to state 52

state 15

    (62) location -> string_element .

    ARROW           reduce using rule 62 (location -> string_element .)
    ASSIGN          reduce using rule 62 (location -> string_element .)
    PLUSASSIGN      reduce using rule 62 (location -> string_element .)
    MINUSASSIGN     reduce using rule 62 (location -> string_element .)
    TIMESASSIGN     reduce using rule 62 (location -> string_element .)
    DIVIDEASSIGN    reduce using rule 62 (location -> string_element .)
    PERCASSIGN      reduce using rule 62 (location -> string_element .)
    CONCATASSIGN    reduce using rule 62 (location -> string_element .)
    LBRACK          reduce using rule 62 (location -> string_element .)


state 16

    (124) label_id -> identifier .
    (66) location_name -> identifier .

    COLON           reduce using rule 124 (label_id -> identifier .)
    ARROW           reduce using rule 66 (location_name -> identifier .)
    ASSIGN          reduce using rule 66 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 66 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 66 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 66 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 66 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 66 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 66 (location_name -> identifier .)
    LBRACK          reduce using rule 66 (location_name -> identifier .)


state 17

    (127) action -> exit_action .

    SEMICOL         reduce using rule 127 (action -> exit_action .)


state 18

    (61) location -> dereferenced_reference .

    ARROW           reduce using rule 61 (location -> dereferenced_reference .)
    ASSIGN          reduce using rule 61 (location -> dereferenced_reference .)
    PLUSASSIGN      reduce using rule 61 (location -> dereferenced_reference .)
    MINUSASSIGN     reduce using rule 61 (location -> dereferenced_reference .)
    TIMESASSIGN     reduce using rule 61 (location -> dereferenced_reference .)
    DIVIDEASSIGN    reduce using rule 61 (location -> dereferenced_reference .)
    PERCASSIGN      reduce using rule 61 (location -> dereferenced_reference .)
    CONCATASSIGN    reduce using rule 61 (location -> dereferenced_reference .)
    LBRACK          reduce using rule 61 (location -> dereferenced_reference .)


state 19

    (14) action_statement -> action . SEMICOL

    SEMICOL         shift and go to state 53


state 20

    (3) statement_list -> statement .

    END             reduce using rule 3 (statement_list -> statement .)
    DCL             reduce using rule 3 (statement_list -> statement .)
    SYN             reduce using rule 3 (statement_list -> statement .)
    TYPE            reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    EXIT            reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 21

    (129) assignment_action -> location . assigning_operator expression
    (67) dereferenced_reference -> location . ARROW
    (71) string_location -> location .
    (76) array_location -> location .
    (130) assigning_operator -> . ASSIGN
    (131) assigning_operator -> . PLUSASSIGN
    (132) assigning_operator -> . MINUSASSIGN
    (133) assigning_operator -> . TIMESASSIGN
    (134) assigning_operator -> . DIVIDEASSIGN
    (135) assigning_operator -> . PERCASSIGN
    (136) assigning_operator -> . CONCATASSIGN

  ! reduce/reduce conflict for LBRACK resolved using rule 71 (string_location -> location .)
    ARROW           shift and go to state 58
    LBRACK          reduce using rule 71 (string_location -> location .)
    ASSIGN          shift and go to state 57
    PLUSASSIGN      shift and go to state 60
    MINUSASSIGN     shift and go to state 61
    TIMESASSIGN     shift and go to state 62
    DIVIDEASSIGN    shift and go to state 59
    PERCASSIGN      shift and go to state 54
    CONCATASSIGN    shift and go to state 56

  ! LBRACK          [ reduce using rule 76 (array_location -> location .) ]

    assigning_operator             shift and go to state 55

state 22

    (128) bracketed_action -> if_action .

    SEMICOL         reduce using rule 128 (bracketed_action -> if_action .)


state 23

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    statement                      shift and go to state 63
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    declaration_statement          shift and go to state 7
    newmode_statement              shift and go to state 26
    location_name                  shift and go to state 4
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    label_id                       shift and go to state 8
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 24

    (59) identifier -> ID .

    COLON           reduce using rule 59 (identifier -> ID .)
    ARROW           reduce using rule 59 (identifier -> ID .)
    ASSIGN          reduce using rule 59 (identifier -> ID .)
    PLUSASSIGN      reduce using rule 59 (identifier -> ID .)
    MINUSASSIGN     reduce using rule 59 (identifier -> ID .)
    TIMESASSIGN     reduce using rule 59 (identifier -> ID .)
    DIVIDEASSIGN    reduce using rule 59 (identifier -> ID .)
    PERCASSIGN      reduce using rule 59 (identifier -> ID .)
    CONCATASSIGN    reduce using rule 59 (identifier -> ID .)
    LBRACK          reduce using rule 59 (identifier -> ID .)
    COMMA           reduce using rule 59 (identifier -> ID .)
    REF             reduce using rule 59 (identifier -> ID .)
    ID              reduce using rule 59 (identifier -> ID .)
    INT             reduce using rule 59 (identifier -> ID .)
    BOOL            reduce using rule 59 (identifier -> ID .)
    CHAR            reduce using rule 59 (identifier -> ID .)
    CHARS           reduce using rule 59 (identifier -> ID .)
    ARRAY           reduce using rule 59 (identifier -> ID .)
    LOC             reduce using rule 59 (identifier -> ID .)
    RPAREN          reduce using rule 59 (identifier -> ID .)
    LPAREN          reduce using rule 59 (identifier -> ID .)
    SEMICOL         reduce using rule 59 (identifier -> ID .)


state 25

    (74) array_element -> array_location . LBRACK expression_list RBRACK
    (75) array_slice -> array_location . LBRACK lower_bound COLON upper_bound RBRACK

    LBRACK          shift and go to state 64


state 26

    (6) statement -> newmode_statement .

    END             reduce using rule 6 (statement -> newmode_statement .)
    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    EXIT            reduce using rule 6 (statement -> newmode_statement .)
    IF              reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)


state 27

    (64) location -> array_element .

    ARROW           reduce using rule 64 (location -> array_element .)
    ASSIGN          reduce using rule 64 (location -> array_element .)
    PLUSASSIGN      reduce using rule 64 (location -> array_element .)
    MINUSASSIGN     reduce using rule 64 (location -> array_element .)
    TIMESASSIGN     reduce using rule 64 (location -> array_element .)
    DIVIDEASSIGN    reduce using rule 64 (location -> array_element .)
    PERCASSIGN      reduce using rule 64 (location -> array_element .)
    CONCATASSIGN    reduce using rule 64 (location -> array_element .)
    LBRACK          reduce using rule 64 (location -> array_element .)


state 28

    (126) action -> assignment_action .

    SEMICOL         reduce using rule 126 (action -> assignment_action .)


state 29

    (11) newmode_statement -> TYPE . newmode_list SEMICOL
    (25) newmode_list -> . newmode_list COMMA mode_definition
    (26) newmode_list -> . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier_list                shift and go to state 66
    mode_definition                shift and go to state 67
    newmode_list                   shift and go to state 65
    identifier                     shift and go to state 49

state 30

    (8) statement -> action_statement .

    END             reduce using rule 8 (statement -> action_statement .)
    DCL             reduce using rule 8 (statement -> action_statement .)
    SYN             reduce using rule 8 (statement -> action_statement .)
    TYPE            reduce using rule 8 (statement -> action_statement .)
    ID              reduce using rule 8 (statement -> action_statement .)
    EXIT            reduce using rule 8 (statement -> action_statement .)
    IF              reduce using rule 8 (statement -> action_statement .)
    $end            reduce using rule 8 (statement -> action_statement .)


state 31

    (91) expression -> operand0 .
    (95) operand0 -> operand0 . operator1 operand1
    (96) operator1 -> . relational_operator
    (97) operator1 -> . membership_operator
    (98) relational_operator -> . AND
    (99) relational_operator -> . OR
    (100) relational_operator -> . EQUALS
    (101) relational_operator -> . DIF
    (102) relational_operator -> . GTR
    (103) relational_operator -> . GEQ
    (104) relational_operator -> . LSS
    (105) relational_operator -> . LEQ
    (106) membership_operator -> . IN

    COLON           reduce using rule 91 (expression -> operand0 .)
    SEMICOL         reduce using rule 91 (expression -> operand0 .)
    RBRACK          reduce using rule 91 (expression -> operand0 .)
    COMMA           reduce using rule 91 (expression -> operand0 .)
    RPAREN          reduce using rule 91 (expression -> operand0 .)
    THEN            reduce using rule 91 (expression -> operand0 .)
    AND             shift and go to state 68
    OR              shift and go to state 72
    EQUALS          shift and go to state 70
    DIF             shift and go to state 74
    GTR             shift and go to state 79
    GEQ             shift and go to state 71
    LSS             shift and go to state 76
    LEQ             shift and go to state 78
    IN              shift and go to state 77

    relational_operator            shift and go to state 75
    operator1                      shift and go to state 69
    membership_operator            shift and go to state 73

state 32

    (137) if_action -> IF boolean_expression . then_clause else_clause FI
    (138) if_action -> IF boolean_expression . then_clause FI
    (139) then_clause -> . THEN action_statement_list
    (140) then_clause -> . THEN empty

    THEN            shift and go to state 80

    then_clause                    shift and go to state 81

state 33

    (117) operand3 -> monadic_operator . operand4
    (121) operand4 -> . ICONST

    ICONST          shift and go to state 35

    operand4                       shift and go to state 82

state 34

    (118) operand3 -> operand4 .

    TIMES           reduce using rule 118 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 118 (operand3 -> operand4 .)
    PERC            reduce using rule 118 (operand3 -> operand4 .)
    PLUS            reduce using rule 118 (operand3 -> operand4 .)
    MINUS           reduce using rule 118 (operand3 -> operand4 .)
    AND             reduce using rule 118 (operand3 -> operand4 .)
    OR              reduce using rule 118 (operand3 -> operand4 .)
    EQUALS          reduce using rule 118 (operand3 -> operand4 .)
    DIF             reduce using rule 118 (operand3 -> operand4 .)
    GTR             reduce using rule 118 (operand3 -> operand4 .)
    GEQ             reduce using rule 118 (operand3 -> operand4 .)
    LSS             reduce using rule 118 (operand3 -> operand4 .)
    LEQ             reduce using rule 118 (operand3 -> operand4 .)
    IN              reduce using rule 118 (operand3 -> operand4 .)
    THEN            reduce using rule 118 (operand3 -> operand4 .)
    RBRACK          reduce using rule 118 (operand3 -> operand4 .)
    COLON           reduce using rule 118 (operand3 -> operand4 .)
    SEMICOL         reduce using rule 118 (operand3 -> operand4 .)
    COMMA           reduce using rule 118 (operand3 -> operand4 .)
    RPAREN          reduce using rule 118 (operand3 -> operand4 .)


state 35

    (121) operand4 -> ICONST .

    TIMES           reduce using rule 121 (operand4 -> ICONST .)
    DIVIDE          reduce using rule 121 (operand4 -> ICONST .)
    PERC            reduce using rule 121 (operand4 -> ICONST .)
    PLUS            reduce using rule 121 (operand4 -> ICONST .)
    MINUS           reduce using rule 121 (operand4 -> ICONST .)
    AND             reduce using rule 121 (operand4 -> ICONST .)
    OR              reduce using rule 121 (operand4 -> ICONST .)
    EQUALS          reduce using rule 121 (operand4 -> ICONST .)
    DIF             reduce using rule 121 (operand4 -> ICONST .)
    GTR             reduce using rule 121 (operand4 -> ICONST .)
    GEQ             reduce using rule 121 (operand4 -> ICONST .)
    LSS             reduce using rule 121 (operand4 -> ICONST .)
    LEQ             reduce using rule 121 (operand4 -> ICONST .)
    IN              reduce using rule 121 (operand4 -> ICONST .)
    RPAREN          reduce using rule 121 (operand4 -> ICONST .)
    RBRACK          reduce using rule 121 (operand4 -> ICONST .)
    COMMA           reduce using rule 121 (operand4 -> ICONST .)
    COLON           reduce using rule 121 (operand4 -> ICONST .)
    SEMICOL         reduce using rule 121 (operand4 -> ICONST .)
    THEN            reduce using rule 121 (operand4 -> ICONST .)


state 36

    (93) boolean_expression -> expression .

    THEN            reduce using rule 93 (boolean_expression -> expression .)


state 37

    (112) operand2 -> operand3 .

    TIMES           reduce using rule 112 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 112 (operand2 -> operand3 .)
    PERC            reduce using rule 112 (operand2 -> operand3 .)
    PLUS            reduce using rule 112 (operand2 -> operand3 .)
    MINUS           reduce using rule 112 (operand2 -> operand3 .)
    AND             reduce using rule 112 (operand2 -> operand3 .)
    OR              reduce using rule 112 (operand2 -> operand3 .)
    EQUALS          reduce using rule 112 (operand2 -> operand3 .)
    DIF             reduce using rule 112 (operand2 -> operand3 .)
    GTR             reduce using rule 112 (operand2 -> operand3 .)
    GEQ             reduce using rule 112 (operand2 -> operand3 .)
    LSS             reduce using rule 112 (operand2 -> operand3 .)
    LEQ             reduce using rule 112 (operand2 -> operand3 .)
    IN              reduce using rule 112 (operand2 -> operand3 .)
    RBRACK          reduce using rule 112 (operand2 -> operand3 .)
    COLON           reduce using rule 112 (operand2 -> operand3 .)
    SEMICOL         reduce using rule 112 (operand2 -> operand3 .)
    COMMA           reduce using rule 112 (operand2 -> operand3 .)
    THEN            reduce using rule 112 (operand2 -> operand3 .)
    RPAREN          reduce using rule 112 (operand2 -> operand3 .)


state 38

    (107) operand1 -> operand2 .
    (113) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (114) arithmetic_multiplicative_operator -> . TIMES
    (115) arithmetic_multiplicative_operator -> . DIVIDE
    (116) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 107 (operand1 -> operand2 .)
    MINUS           reduce using rule 107 (operand1 -> operand2 .)
    AND             reduce using rule 107 (operand1 -> operand2 .)
    OR              reduce using rule 107 (operand1 -> operand2 .)
    EQUALS          reduce using rule 107 (operand1 -> operand2 .)
    DIF             reduce using rule 107 (operand1 -> operand2 .)
    GTR             reduce using rule 107 (operand1 -> operand2 .)
    GEQ             reduce using rule 107 (operand1 -> operand2 .)
    LSS             reduce using rule 107 (operand1 -> operand2 .)
    LEQ             reduce using rule 107 (operand1 -> operand2 .)
    IN              reduce using rule 107 (operand1 -> operand2 .)
    COLON           reduce using rule 107 (operand1 -> operand2 .)
    RBRACK          reduce using rule 107 (operand1 -> operand2 .)
    SEMICOL         reduce using rule 107 (operand1 -> operand2 .)
    COMMA           reduce using rule 107 (operand1 -> operand2 .)
    THEN            reduce using rule 107 (operand1 -> operand2 .)
    RPAREN          reduce using rule 107 (operand1 -> operand2 .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 84
    PERC            shift and go to state 86

    arithmetic_multiplicative_operator shift and go to state 83

state 39

    (94) operand0 -> operand1 .
    (108) operand1 -> operand1 . operator2 operand2
    (109) operator2 -> . arithmetic_additive_operator
    (110) arithmetic_additive_operator -> . PLUS
    (111) arithmetic_additive_operator -> . MINUS

    AND             reduce using rule 94 (operand0 -> operand1 .)
    OR              reduce using rule 94 (operand0 -> operand1 .)
    EQUALS          reduce using rule 94 (operand0 -> operand1 .)
    DIF             reduce using rule 94 (operand0 -> operand1 .)
    GTR             reduce using rule 94 (operand0 -> operand1 .)
    GEQ             reduce using rule 94 (operand0 -> operand1 .)
    LSS             reduce using rule 94 (operand0 -> operand1 .)
    LEQ             reduce using rule 94 (operand0 -> operand1 .)
    IN              reduce using rule 94 (operand0 -> operand1 .)
    COLON           reduce using rule 94 (operand0 -> operand1 .)
    RPAREN          reduce using rule 94 (operand0 -> operand1 .)
    RBRACK          reduce using rule 94 (operand0 -> operand1 .)
    COMMA           reduce using rule 94 (operand0 -> operand1 .)
    THEN            reduce using rule 94 (operand0 -> operand1 .)
    SEMICOL         reduce using rule 94 (operand0 -> operand1 .)
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89

    arithmetic_additive_operator   shift and go to state 87
    operator2                      shift and go to state 90

state 40

    (119) monadic_operator -> MINUS .

    ICONST          reduce using rule 119 (monadic_operator -> MINUS .)


state 41

    (120) monadic_operator -> NOT .

    ICONST          reduce using rule 120 (monadic_operator -> NOT .)


state 42

    (68) string_element -> string_location LBRACK . start_element RBRACK
    (70) string_slice -> string_location LBRACK . left_element COLON right_element RBRACK
    (69) start_element -> . integer_expression
    (72) left_element -> . integer_expression
    (92) integer_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    start_element                  shift and go to state 91
    operand0                       shift and go to state 31
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    integer_expression             shift and go to state 92
    expression                     shift and go to state 93
    operand3                       shift and go to state 37
    operand2                       shift and go to state 38
    left_element                   shift and go to state 94

state 43

    (145) exit_action -> EXIT label_id .

    SEMICOL         reduce using rule 145 (exit_action -> EXIT label_id .)


state 44

    (124) label_id -> identifier .

    SEMICOL         reduce using rule 124 (label_id -> identifier .)


state 45

    (12) procedure_statement -> label_id COLON . procedure_definition SEMICOL
    (13) action_statement -> label_id COLON . action SEMICOL
    (146) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (147) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (148) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (149) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL statement_list END
    (150) procedure_definition -> . PROC LPAREN formal_parameter_list RPAREN SEMICOL END
    (151) procedure_definition -> . PROC LPAREN RPAREN result_spec SEMICOL END
    (152) procedure_definition -> . PROC LPAREN RPAREN SEMICOL statement_list END
    (153) procedure_definition -> . PROC LPAREN RPAREN SEMICOL END
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (59) identifier -> . ID
    (71) string_location -> . location
    (76) array_location -> . location

    PROC            shift and go to state 96
    EXIT            shift and go to state 5
    IF              shift and go to state 2
    ID              shift and go to state 24

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 97
    location_name                  shift and go to state 4
    location                       shift and go to state 21
    if_action                      shift and go to state 22
    string_slice                   shift and go to state 6
    dereferenced_reference         shift and go to state 18
    procedure_definition           shift and go to state 95
    exit_action                    shift and go to state 17
    array_slice                    shift and go to state 12
    array_location                 shift and go to state 25
    array_element                  shift and go to state 27
    assignment_action              shift and go to state 28
    action                         shift and go to state 98
    bracketed_action               shift and go to state 13

state 46

    (9) declaration_statement -> DCL declaration_list . SEMICOL
    (15) declaration_list -> declaration_list . COMMA declaration

    SEMICOL         shift and go to state 100
    COMMA           shift and go to state 99


state 47

    (17) declaration -> identifier_list . mode initialization
    (18) declaration -> identifier_list . mode
    (58) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    COMMA           shift and go to state 104
    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    array_mode                     shift and go to state 116
    mode_name                      shift and go to state 101
    string_mode                    shift and go to state 105
    integer_mode                   shift and go to state 107
    discrete_mode                  shift and go to state 114
    mode                           shift and go to state 108
    boolean_mode                   shift and go to state 115
    character_mode                 shift and go to state 106
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111

state 48

    (16) declaration_list -> declaration .

    SEMICOL         reduce using rule 16 (declaration_list -> declaration .)
    COMMA           reduce using rule 16 (declaration_list -> declaration .)


state 49

    (57) identifier_list -> identifier .

    COMMA           reduce using rule 57 (identifier_list -> identifier .)
    REF             reduce using rule 57 (identifier_list -> identifier .)
    ID              reduce using rule 57 (identifier_list -> identifier .)
    INT             reduce using rule 57 (identifier_list -> identifier .)
    BOOL            reduce using rule 57 (identifier_list -> identifier .)
    CHAR            reduce using rule 57 (identifier_list -> identifier .)
    CHARS           reduce using rule 57 (identifier_list -> identifier .)
    ARRAY           reduce using rule 57 (identifier_list -> identifier .)
    ASSIGN          reduce using rule 57 (identifier_list -> identifier .)


state 50

    (10) synonym_statement -> SYN synonym_list . SEMICOL
    (20) synonym_list -> synonym_list . COMMA synonym_definition

    SEMICOL         shift and go to state 122
    COMMA           shift and go to state 121


state 51

    (21) synonym_list -> synonym_definition .

    SEMICOL         reduce using rule 21 (synonym_list -> synonym_definition .)
    COMMA           reduce using rule 21 (synonym_list -> synonym_definition .)


state 52

    (22) synonym_definition -> identifier_list . mode ASSIGN constant_expression
    (23) synonym_definition -> identifier_list . ASSIGN constant_expression
    (58) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    ASSIGN          shift and go to state 124
    COMMA           shift and go to state 104
    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    array_mode                     shift and go to state 116
    mode_name                      shift and go to state 101
    string_mode                    shift and go to state 105
    integer_mode                   shift and go to state 107
    discrete_mode                  shift and go to state 114
    mode                           shift and go to state 123
    boolean_mode                   shift and go to state 115
    character_mode                 shift and go to state 106
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111

state 53

    (14) action_statement -> action SEMICOL .

    DCL             reduce using rule 14 (action_statement -> action SEMICOL .)
    SYN             reduce using rule 14 (action_statement -> action SEMICOL .)
    TYPE            reduce using rule 14 (action_statement -> action SEMICOL .)
    ID              reduce using rule 14 (action_statement -> action SEMICOL .)
    EXIT            reduce using rule 14 (action_statement -> action SEMICOL .)
    IF              reduce using rule 14 (action_statement -> action SEMICOL .)
    $end            reduce using rule 14 (action_statement -> action SEMICOL .)
    END             reduce using rule 14 (action_statement -> action SEMICOL .)
    FI              reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSE            reduce using rule 14 (action_statement -> action SEMICOL .)
    ELSIF           reduce using rule 14 (action_statement -> action SEMICOL .)


state 54

    (135) assigning_operator -> PERCASSIGN .

    MINUS           reduce using rule 135 (assigning_operator -> PERCASSIGN .)
    NOT             reduce using rule 135 (assigning_operator -> PERCASSIGN .)
    ICONST          reduce using rule 135 (assigning_operator -> PERCASSIGN .)


state 55

    (129) assignment_action -> location assigning_operator . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 125
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31

state 56

    (136) assigning_operator -> CONCATASSIGN .

    MINUS           reduce using rule 136 (assigning_operator -> CONCATASSIGN .)
    NOT             reduce using rule 136 (assigning_operator -> CONCATASSIGN .)
    ICONST          reduce using rule 136 (assigning_operator -> CONCATASSIGN .)


state 57

    (130) assigning_operator -> ASSIGN .

    MINUS           reduce using rule 130 (assigning_operator -> ASSIGN .)
    NOT             reduce using rule 130 (assigning_operator -> ASSIGN .)
    ICONST          reduce using rule 130 (assigning_operator -> ASSIGN .)


state 58

    (67) dereferenced_reference -> location ARROW .

    ARROW           reduce using rule 67 (dereferenced_reference -> location ARROW .)
    ASSIGN          reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PLUSASSIGN      reduce using rule 67 (dereferenced_reference -> location ARROW .)
    MINUSASSIGN     reduce using rule 67 (dereferenced_reference -> location ARROW .)
    TIMESASSIGN     reduce using rule 67 (dereferenced_reference -> location ARROW .)
    DIVIDEASSIGN    reduce using rule 67 (dereferenced_reference -> location ARROW .)
    PERCASSIGN      reduce using rule 67 (dereferenced_reference -> location ARROW .)
    CONCATASSIGN    reduce using rule 67 (dereferenced_reference -> location ARROW .)
    LBRACK          reduce using rule 67 (dereferenced_reference -> location ARROW .)


state 59

    (134) assigning_operator -> DIVIDEASSIGN .

    MINUS           reduce using rule 134 (assigning_operator -> DIVIDEASSIGN .)
    NOT             reduce using rule 134 (assigning_operator -> DIVIDEASSIGN .)
    ICONST          reduce using rule 134 (assigning_operator -> DIVIDEASSIGN .)


state 60

    (131) assigning_operator -> PLUSASSIGN .

    MINUS           reduce using rule 131 (assigning_operator -> PLUSASSIGN .)
    NOT             reduce using rule 131 (assigning_operator -> PLUSASSIGN .)
    ICONST          reduce using rule 131 (assigning_operator -> PLUSASSIGN .)


state 61

    (132) assigning_operator -> MINUSASSIGN .

    MINUS           reduce using rule 132 (assigning_operator -> MINUSASSIGN .)
    NOT             reduce using rule 132 (assigning_operator -> MINUSASSIGN .)
    ICONST          reduce using rule 132 (assigning_operator -> MINUSASSIGN .)


state 62

    (133) assigning_operator -> TIMESASSIGN .

    MINUS           reduce using rule 133 (assigning_operator -> TIMESASSIGN .)
    NOT             reduce using rule 133 (assigning_operator -> TIMESASSIGN .)
    ICONST          reduce using rule 133 (assigning_operator -> TIMESASSIGN .)


state 63

    (2) statement_list -> statement_list statement .

    END             reduce using rule 2 (statement_list -> statement_list statement .)
    DCL             reduce using rule 2 (statement_list -> statement_list statement .)
    SYN             reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 64

    (74) array_element -> array_location LBRACK . expression_list RBRACK
    (75) array_slice -> array_location LBRACK . lower_bound COLON upper_bound RBRACK
    (89) expression_list -> . expression_list COMMA expression
    (90) expression_list -> . expression
    (44) lower_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    expression_list                shift and go to state 126
    lower_bound                    shift and go to state 127
    operand4                       shift and go to state 34
    expression                     shift and go to state 128
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31

state 65

    (11) newmode_statement -> TYPE newmode_list . SEMICOL
    (25) newmode_list -> newmode_list . COMMA mode_definition

    SEMICOL         shift and go to state 130
    COMMA           shift and go to state 129


state 66

    (27) mode_definition -> identifier_list . ASSIGN mode
    (58) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 131
    COMMA           shift and go to state 104


state 67

    (26) newmode_list -> mode_definition .

    SEMICOL         reduce using rule 26 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 26 (newmode_list -> mode_definition .)


state 68

    (98) relational_operator -> AND .

    MINUS           reduce using rule 98 (relational_operator -> AND .)
    NOT             reduce using rule 98 (relational_operator -> AND .)
    ICONST          reduce using rule 98 (relational_operator -> AND .)


state 69

    (95) operand0 -> operand0 operator1 . operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand2                       shift and go to state 38
    operand1                       shift and go to state 132
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34

state 70

    (100) relational_operator -> EQUALS .

    MINUS           reduce using rule 100 (relational_operator -> EQUALS .)
    NOT             reduce using rule 100 (relational_operator -> EQUALS .)
    ICONST          reduce using rule 100 (relational_operator -> EQUALS .)


state 71

    (103) relational_operator -> GEQ .

    MINUS           reduce using rule 103 (relational_operator -> GEQ .)
    NOT             reduce using rule 103 (relational_operator -> GEQ .)
    ICONST          reduce using rule 103 (relational_operator -> GEQ .)


state 72

    (99) relational_operator -> OR .

    MINUS           reduce using rule 99 (relational_operator -> OR .)
    NOT             reduce using rule 99 (relational_operator -> OR .)
    ICONST          reduce using rule 99 (relational_operator -> OR .)


state 73

    (97) operator1 -> membership_operator .

    MINUS           reduce using rule 97 (operator1 -> membership_operator .)
    NOT             reduce using rule 97 (operator1 -> membership_operator .)
    ICONST          reduce using rule 97 (operator1 -> membership_operator .)


state 74

    (101) relational_operator -> DIF .

    MINUS           reduce using rule 101 (relational_operator -> DIF .)
    NOT             reduce using rule 101 (relational_operator -> DIF .)
    ICONST          reduce using rule 101 (relational_operator -> DIF .)


state 75

    (96) operator1 -> relational_operator .

    MINUS           reduce using rule 96 (operator1 -> relational_operator .)
    NOT             reduce using rule 96 (operator1 -> relational_operator .)
    ICONST          reduce using rule 96 (operator1 -> relational_operator .)


state 76

    (104) relational_operator -> LSS .

    MINUS           reduce using rule 104 (relational_operator -> LSS .)
    NOT             reduce using rule 104 (relational_operator -> LSS .)
    ICONST          reduce using rule 104 (relational_operator -> LSS .)


state 77

    (106) membership_operator -> IN .

    MINUS           reduce using rule 106 (membership_operator -> IN .)
    NOT             reduce using rule 106 (membership_operator -> IN .)
    ICONST          reduce using rule 106 (membership_operator -> IN .)


state 78

    (105) relational_operator -> LEQ .

    MINUS           reduce using rule 105 (relational_operator -> LEQ .)
    NOT             reduce using rule 105 (relational_operator -> LEQ .)
    ICONST          reduce using rule 105 (relational_operator -> LEQ .)


state 79

    (102) relational_operator -> GTR .

    MINUS           reduce using rule 102 (relational_operator -> GTR .)
    NOT             reduce using rule 102 (relational_operator -> GTR .)
    ICONST          reduce using rule 102 (relational_operator -> GTR .)


state 80

    (139) then_clause -> THEN . action_statement_list
    (140) then_clause -> THEN . empty
    (122) action_statement_list -> . action_statement_list action_statement
    (123) action_statement_list -> . action_statement
    (163) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 163 (empty -> .)
    ELSE            reduce using rule 163 (empty -> .)
    ELSIF           reduce using rule 163 (empty -> .)
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    action_statement_list          shift and go to state 133
    empty                          shift and go to state 134
    dereferenced_reference         shift and go to state 18
    location                       shift and go to state 21
    if_action                      shift and go to state 22
    string_slice                   shift and go to state 6
    location_name                  shift and go to state 4
    array_slice                    shift and go to state 12
    array_location                 shift and go to state 25
    label_id                       shift and go to state 135
    array_element                  shift and go to state 27
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    bracketed_action               shift and go to state 13
    action_statement               shift and go to state 136

state 81

    (137) if_action -> IF boolean_expression then_clause . else_clause FI
    (138) if_action -> IF boolean_expression then_clause . FI
    (141) else_clause -> . ELSE action_statement_list
    (142) else_clause -> . ELSE empty
    (143) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (144) else_clause -> . ELSIF boolean_expression then_clause

    FI              shift and go to state 140
    ELSE            shift and go to state 138
    ELSIF           shift and go to state 139

    else_clause                    shift and go to state 137

state 82

    (117) operand3 -> monadic_operator operand4 .

    TIMES           reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    DIVIDE          reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    PERC            reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    PLUS            reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    MINUS           reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    AND             reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    OR              reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    EQUALS          reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    DIF             reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    GTR             reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    GEQ             reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    LSS             reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    LEQ             reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    IN              reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    THEN            reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    RBRACK          reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    COLON           reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    SEMICOL         reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    COMMA           reduce using rule 117 (operand3 -> monadic_operator operand4 .)
    RPAREN          reduce using rule 117 (operand3 -> monadic_operator operand4 .)


state 83

    (113) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    operand3                       shift and go to state 141

state 84

    (115) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 115 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 115 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 115 (arithmetic_multiplicative_operator -> DIVIDE .)


state 85

    (114) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 114 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 114 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 114 (arithmetic_multiplicative_operator -> TIMES .)


state 86

    (116) arithmetic_multiplicative_operator -> PERC .

    MINUS           reduce using rule 116 (arithmetic_multiplicative_operator -> PERC .)
    NOT             reduce using rule 116 (arithmetic_multiplicative_operator -> PERC .)
    ICONST          reduce using rule 116 (arithmetic_multiplicative_operator -> PERC .)


state 87

    (109) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 109 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 109 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 109 (operator2 -> arithmetic_additive_operator .)


state 88

    (110) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 110 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 110 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 110 (arithmetic_additive_operator -> PLUS .)


state 89

    (111) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 111 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 111 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 111 (arithmetic_additive_operator -> MINUS .)


state 90

    (108) operand1 -> operand1 operator2 . operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand2                       shift and go to state 142
    operand3                       shift and go to state 37
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34

state 91

    (68) string_element -> string_location LBRACK start_element . RBRACK

    RBRACK          shift and go to state 143


state 92

    (69) start_element -> integer_expression .
    (72) left_element -> integer_expression .

    RBRACK          reduce using rule 69 (start_element -> integer_expression .)
    COLON           reduce using rule 72 (left_element -> integer_expression .)


state 93

    (92) integer_expression -> expression .

    RBRACK          reduce using rule 92 (integer_expression -> expression .)
    COLON           reduce using rule 92 (integer_expression -> expression .)


state 94

    (70) string_slice -> string_location LBRACK left_element . COLON right_element RBRACK

    COLON           shift and go to state 144


state 95

    (12) procedure_statement -> label_id COLON procedure_definition . SEMICOL

    SEMICOL         shift and go to state 145


state 96

    (146) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (147) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN result_spec SEMICOL END
    (148) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL statement_list END
    (149) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL statement_list END
    (150) procedure_definition -> PROC . LPAREN formal_parameter_list RPAREN SEMICOL END
    (151) procedure_definition -> PROC . LPAREN RPAREN result_spec SEMICOL END
    (152) procedure_definition -> PROC . LPAREN RPAREN SEMICOL statement_list END
    (153) procedure_definition -> PROC . LPAREN RPAREN SEMICOL END

    LPAREN          shift and go to state 146


state 97

    (66) location_name -> identifier .

    ARROW           reduce using rule 66 (location_name -> identifier .)
    ASSIGN          reduce using rule 66 (location_name -> identifier .)
    PLUSASSIGN      reduce using rule 66 (location_name -> identifier .)
    MINUSASSIGN     reduce using rule 66 (location_name -> identifier .)
    TIMESASSIGN     reduce using rule 66 (location_name -> identifier .)
    DIVIDEASSIGN    reduce using rule 66 (location_name -> identifier .)
    PERCASSIGN      reduce using rule 66 (location_name -> identifier .)
    CONCATASSIGN    reduce using rule 66 (location_name -> identifier .)
    LBRACK          reduce using rule 66 (location_name -> identifier .)


state 98

    (13) action_statement -> label_id COLON action . SEMICOL

    SEMICOL         shift and go to state 147


state 99

    (15) declaration_list -> declaration_list COMMA . declaration
    (17) declaration -> . identifier_list mode initialization
    (18) declaration -> . identifier_list mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 49
    identifier_list                shift and go to state 47
    declaration                    shift and go to state 148

state 100

    (9) declaration_statement -> DCL declaration_list SEMICOL .

    END             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    DCL             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    SYN             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    TYPE            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    ID              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    EXIT            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    IF              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)
    $end            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMICOL .)


state 101

    (28) mode -> mode_name .

    ASSIGN          reduce using rule 28 (mode -> mode_name .)
    SEMICOL         reduce using rule 28 (mode -> mode_name .)
    COMMA           reduce using rule 28 (mode -> mode_name .)
    LOC             reduce using rule 28 (mode -> mode_name .)
    RPAREN          reduce using rule 28 (mode -> mode_name .)


state 102

    (41) mode_name -> identifier .
    (42) discrete_mode_name -> identifier .

    SEMICOL         reduce using rule 41 (mode_name -> identifier .)
    COMMA           reduce using rule 41 (mode_name -> identifier .)
    RPAREN          reduce using rule 41 (mode_name -> identifier .)
    LOC             reduce using rule 41 (mode_name -> identifier .)
    ASSIGN          reduce using rule 41 (mode_name -> identifier .)
    LPAREN          reduce using rule 42 (discrete_mode_name -> identifier .)


state 103

    (35) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    SEMICOL         reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RBRACK          reduce using rule 35 (discrete_mode -> discrete_range_mode .)


state 104

    (58) identifier_list -> identifier_list COMMA . identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 149

state 105

    (47) composite_mode -> string_mode .

    RPAREN          reduce using rule 47 (composite_mode -> string_mode .)
    LOC             reduce using rule 47 (composite_mode -> string_mode .)
    COMMA           reduce using rule 47 (composite_mode -> string_mode .)
    ASSIGN          reduce using rule 47 (composite_mode -> string_mode .)
    SEMICOL         reduce using rule 47 (composite_mode -> string_mode .)


state 106

    (34) discrete_mode -> character_mode .

    LPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 34 (discrete_mode -> character_mode .)
    LOC             reduce using rule 34 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 34 (discrete_mode -> character_mode .)
    SEMICOL         reduce using rule 34 (discrete_mode -> character_mode .)
    RBRACK          reduce using rule 34 (discrete_mode -> character_mode .)


state 107

    (32) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 32 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> integer_mode .)
    SEMICOL         reduce using rule 32 (discrete_mode -> integer_mode .)
    RBRACK          reduce using rule 32 (discrete_mode -> integer_mode .)


state 108

    (17) declaration -> identifier_list mode . initialization
    (18) declaration -> identifier_list mode .
    (19) initialization -> . ASSIGN expression

    SEMICOL         reduce using rule 18 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 18 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 151

    initialization                 shift and go to state 150

state 109

    (49) string_mode -> CHARS . LBRACK string_length RBRACK

    LBRACK          shift and go to state 152


state 110

    (38) character_mode -> CHAR .

    LPAREN          reduce using rule 38 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 38 (character_mode -> CHAR .)
    SEMICOL         reduce using rule 38 (character_mode -> CHAR .)
    COMMA           reduce using rule 38 (character_mode -> CHAR .)
    LOC             reduce using rule 38 (character_mode -> CHAR .)
    RPAREN          reduce using rule 38 (character_mode -> CHAR .)
    RBRACK          reduce using rule 38 (character_mode -> CHAR .)


state 111

    (31) mode -> composite_mode .

    ASSIGN          reduce using rule 31 (mode -> composite_mode .)
    SEMICOL         reduce using rule 31 (mode -> composite_mode .)
    COMMA           reduce using rule 31 (mode -> composite_mode .)
    LOC             reduce using rule 31 (mode -> composite_mode .)
    RPAREN          reduce using rule 31 (mode -> composite_mode .)


state 112

    (37) boolean_mode -> BOOL .

    LPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 37 (boolean_mode -> BOOL .)
    SEMICOL         reduce using rule 37 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 37 (boolean_mode -> BOOL .)
    LOC             reduce using rule 37 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    RBRACK          reduce using rule 37 (boolean_mode -> BOOL .)


state 113

    (46) reference_mode -> REF . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    array_mode                     shift and go to state 116
    mode_name                      shift and go to state 101
    string_mode                    shift and go to state 105
    integer_mode                   shift and go to state 107
    mode                           shift and go to state 153
    discrete_mode                  shift and go to state 114
    character_mode                 shift and go to state 106
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111
    boolean_mode                   shift and go to state 115

state 114

    (29) mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 29 (mode -> discrete_mode .)
    SEMICOL         reduce using rule 29 (mode -> discrete_mode .)
    COMMA           reduce using rule 29 (mode -> discrete_mode .)
    LOC             reduce using rule 29 (mode -> discrete_mode .)
    RPAREN          reduce using rule 29 (mode -> discrete_mode .)
    LPAREN          shift and go to state 154


state 115

    (33) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 33 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 33 (discrete_mode -> boolean_mode .)
    SEMICOL         reduce using rule 33 (discrete_mode -> boolean_mode .)
    RBRACK          reduce using rule 33 (discrete_mode -> boolean_mode .)


state 116

    (48) composite_mode -> array_mode .

    RPAREN          reduce using rule 48 (composite_mode -> array_mode .)
    LOC             reduce using rule 48 (composite_mode -> array_mode .)
    COMMA           reduce using rule 48 (composite_mode -> array_mode .)
    ASSIGN          reduce using rule 48 (composite_mode -> array_mode .)
    SEMICOL         reduce using rule 48 (composite_mode -> array_mode .)


state 117

    (51) array_mode -> ARRAY . LBRACK index_mode_list RBRACK element_mode

    LBRACK          shift and go to state 155


state 118

    (39) discrete_range_mode -> discrete_mode_name . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 156


state 119

    (30) mode -> reference_mode .

    ASSIGN          reduce using rule 30 (mode -> reference_mode .)
    SEMICOL         reduce using rule 30 (mode -> reference_mode .)
    COMMA           reduce using rule 30 (mode -> reference_mode .)
    LOC             reduce using rule 30 (mode -> reference_mode .)
    RPAREN          reduce using rule 30 (mode -> reference_mode .)


state 120

    (36) integer_mode -> INT .

    LPAREN          reduce using rule 36 (integer_mode -> INT .)
    ASSIGN          reduce using rule 36 (integer_mode -> INT .)
    SEMICOL         reduce using rule 36 (integer_mode -> INT .)
    COMMA           reduce using rule 36 (integer_mode -> INT .)
    RPAREN          reduce using rule 36 (integer_mode -> INT .)
    LOC             reduce using rule 36 (integer_mode -> INT .)
    RBRACK          reduce using rule 36 (integer_mode -> INT .)


state 121

    (20) synonym_list -> synonym_list COMMA . synonym_definition
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (23) synonym_definition -> . identifier_list ASSIGN constant_expression
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 49
    synonym_definition             shift and go to state 157
    identifier_list                shift and go to state 52

state 122

    (10) synonym_statement -> SYN synonym_list SEMICOL .

    END             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    DCL             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    SYN             reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    TYPE            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    ID              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    EXIT            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    IF              reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)
    $end            reduce using rule 10 (synonym_statement -> SYN synonym_list SEMICOL .)


state 123

    (22) synonym_definition -> identifier_list mode . ASSIGN constant_expression

    ASSIGN          shift and go to state 158


state 124

    (23) synonym_definition -> identifier_list ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 159
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31
    constant_expression            shift and go to state 160

state 125

    (129) assignment_action -> location assigning_operator expression .

    SEMICOL         reduce using rule 129 (assignment_action -> location assigning_operator expression .)


state 126

    (74) array_element -> array_location LBRACK expression_list . RBRACK
    (89) expression_list -> expression_list . COMMA expression

    RBRACK          shift and go to state 161
    COMMA           shift and go to state 162


state 127

    (75) array_slice -> array_location LBRACK lower_bound . COLON upper_bound RBRACK

    COLON           shift and go to state 163


state 128

    (90) expression_list -> expression .
    (44) lower_bound -> expression .

    RBRACK          reduce using rule 90 (expression_list -> expression .)
    COMMA           reduce using rule 90 (expression_list -> expression .)
    COLON           reduce using rule 44 (lower_bound -> expression .)


state 129

    (25) newmode_list -> newmode_list COMMA . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier_list                shift and go to state 66
    mode_definition                shift and go to state 164
    identifier                     shift and go to state 49

state 130

    (11) newmode_statement -> TYPE newmode_list SEMICOL .

    END             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    DCL             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    SYN             reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    TYPE            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    ID              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    EXIT            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    IF              reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)
    $end            reduce using rule 11 (newmode_statement -> TYPE newmode_list SEMICOL .)


state 131

    (27) mode_definition -> identifier_list ASSIGN . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    array_mode                     shift and go to state 116
    mode_name                      shift and go to state 101
    string_mode                    shift and go to state 105
    integer_mode                   shift and go to state 107
    mode                           shift and go to state 165
    discrete_mode                  shift and go to state 114
    boolean_mode                   shift and go to state 115
    character_mode                 shift and go to state 106
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111

state 132

    (95) operand0 -> operand0 operator1 operand1 .
    (108) operand1 -> operand1 . operator2 operand2
    (109) operator2 -> . arithmetic_additive_operator
    (110) arithmetic_additive_operator -> . PLUS
    (111) arithmetic_additive_operator -> . MINUS

    AND             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    EQUALS          reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    DIF             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    GTR             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    GEQ             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    LSS             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    LEQ             reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    RBRACK          reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    THEN            reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    SEMICOL         reduce using rule 95 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89

    arithmetic_additive_operator   shift and go to state 87
    operator2                      shift and go to state 90

state 133

    (139) then_clause -> THEN action_statement_list .
    (122) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 139 (then_clause -> THEN action_statement_list .)
    ELSE            reduce using rule 139 (then_clause -> THEN action_statement_list .)
    ELSIF           reduce using rule 139 (then_clause -> THEN action_statement_list .)
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    location                       shift and go to state 21
    if_action                      shift and go to state 22
    string_slice                   shift and go to state 6
    location_name                  shift and go to state 4
    array_slice                    shift and go to state 12
    array_location                 shift and go to state 25
    label_id                       shift and go to state 135
    array_element                  shift and go to state 27
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    bracketed_action               shift and go to state 13
    action_statement               shift and go to state 166

state 134

    (140) then_clause -> THEN empty .

    FI              reduce using rule 140 (then_clause -> THEN empty .)
    ELSE            reduce using rule 140 (then_clause -> THEN empty .)
    ELSIF           reduce using rule 140 (then_clause -> THEN empty .)


state 135

    (13) action_statement -> label_id . COLON action SEMICOL

    COLON           shift and go to state 167


state 136

    (123) action_statement_list -> action_statement .

    ID              reduce using rule 123 (action_statement_list -> action_statement .)
    EXIT            reduce using rule 123 (action_statement_list -> action_statement .)
    IF              reduce using rule 123 (action_statement_list -> action_statement .)
    FI              reduce using rule 123 (action_statement_list -> action_statement .)
    ELSE            reduce using rule 123 (action_statement_list -> action_statement .)
    ELSIF           reduce using rule 123 (action_statement_list -> action_statement .)


state 137

    (137) if_action -> IF boolean_expression then_clause else_clause . FI

    FI              shift and go to state 168


state 138

    (141) else_clause -> ELSE . action_statement_list
    (142) else_clause -> ELSE . empty
    (122) action_statement_list -> . action_statement_list action_statement
    (123) action_statement_list -> . action_statement
    (163) empty -> .
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 163 (empty -> .)
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    action_statement_list          shift and go to state 169
    empty                          shift and go to state 170
    dereferenced_reference         shift and go to state 18
    location                       shift and go to state 21
    if_action                      shift and go to state 22
    string_slice                   shift and go to state 6
    location_name                  shift and go to state 4
    array_slice                    shift and go to state 12
    array_location                 shift and go to state 25
    label_id                       shift and go to state 135
    array_element                  shift and go to state 27
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    bracketed_action               shift and go to state 13
    action_statement               shift and go to state 136

state 139

    (143) else_clause -> ELSIF . boolean_expression then_clause else_clause
    (144) else_clause -> ELSIF . boolean_expression then_clause
    (93) boolean_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    boolean_expression             shift and go to state 171
    operand3                       shift and go to state 37
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 36
    operand2                       shift and go to state 38
    operand1                       shift and go to state 39
    operand0                       shift and go to state 31

state 140

    (138) if_action -> IF boolean_expression then_clause FI .

    SEMICOL         reduce using rule 138 (if_action -> IF boolean_expression then_clause FI .)


state 141

    (113) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PERC            reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUALS          reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIF             reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GTR             reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GEQ             reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LSS             reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LEQ             reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACK          reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMICOL         reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    THEN            reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 113 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 142

    (108) operand1 -> operand1 operator2 operand2 .
    (113) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (114) arithmetic_multiplicative_operator -> . TIMES
    (115) arithmetic_multiplicative_operator -> . DIVIDE
    (116) arithmetic_multiplicative_operator -> . PERC

    PLUS            reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    EQUALS          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    DIF             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    GTR             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    GEQ             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    LSS             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    LEQ             reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    RBRACK          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    SEMICOL         reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    THEN            reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 108 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 84
    PERC            shift and go to state 86

    arithmetic_multiplicative_operator shift and go to state 83

state 143

    (68) string_element -> string_location LBRACK start_element RBRACK .

    ARROW           reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    ASSIGN          reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    PLUSASSIGN      reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    MINUSASSIGN     reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    TIMESASSIGN     reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    PERCASSIGN      reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    CONCATASSIGN    reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)
    LBRACK          reduce using rule 68 (string_element -> string_location LBRACK start_element RBRACK .)


state 144

    (70) string_slice -> string_location LBRACK left_element COLON . right_element RBRACK
    (73) right_element -> . integer_expression
    (92) integer_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand0                       shift and go to state 31
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    integer_expression             shift and go to state 172
    right_element                  shift and go to state 173
    expression                     shift and go to state 93
    operand3                       shift and go to state 37
    operand2                       shift and go to state 38

state 145

    (12) procedure_statement -> label_id COLON procedure_definition SEMICOL .

    DCL             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    SYN             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    TYPE            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    ID              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    EXIT            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    IF              reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    $end            reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)
    END             reduce using rule 12 (procedure_statement -> label_id COLON procedure_definition SEMICOL .)


state 146

    (146) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL statement_list END
    (147) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN result_spec SEMICOL END
    (148) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL statement_list END
    (149) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL statement_list END
    (150) procedure_definition -> PROC LPAREN . formal_parameter_list RPAREN SEMICOL END
    (151) procedure_definition -> PROC LPAREN . RPAREN result_spec SEMICOL END
    (152) procedure_definition -> PROC LPAREN . RPAREN SEMICOL statement_list END
    (153) procedure_definition -> PROC LPAREN . RPAREN SEMICOL END
    (154) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (155) formal_parameter_list -> . formal_parameter
    (156) formal_parameter -> . identifier_list parameter_spec
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    RPAREN          shift and go to state 174
    ID              shift and go to state 24

    formal_parameter_list          shift and go to state 175
    identifier                     shift and go to state 49
    formal_parameter               shift and go to state 176
    identifier_list                shift and go to state 177

state 147

    (13) action_statement -> label_id COLON action SEMICOL .

    DCL             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    SYN             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    TYPE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ID              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    EXIT            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    IF              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    $end            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    END             reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    FI              reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSE            reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)
    ELSIF           reduce using rule 13 (action_statement -> label_id COLON action SEMICOL .)


state 148

    (15) declaration_list -> declaration_list COMMA declaration .

    SEMICOL         reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 15 (declaration_list -> declaration_list COMMA declaration .)


state 149

    (58) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)
    ASSIGN          reduce using rule 58 (identifier_list -> identifier_list COMMA identifier .)


state 150

    (17) declaration -> identifier_list mode initialization .

    SEMICOL         reduce using rule 17 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 17 (declaration -> identifier_list mode initialization .)


state 151

    (19) initialization -> ASSIGN . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    expression                     shift and go to state 178
    operand3                       shift and go to state 37
    operand0                       shift and go to state 31
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    operand2                       shift and go to state 38

state 152

    (49) string_mode -> CHARS LBRACK . string_length RBRACK
    (50) string_length -> . integer_literal
    (83) integer_literal -> . ICONST

    ICONST          shift and go to state 181

    integer_literal                shift and go to state 180
    string_length                  shift and go to state 179

state 153

    (46) reference_mode -> REF mode .

    LOC             reduce using rule 46 (reference_mode -> REF mode .)
    RPAREN          reduce using rule 46 (reference_mode -> REF mode .)
    COMMA           reduce using rule 46 (reference_mode -> REF mode .)
    ASSIGN          reduce using rule 46 (reference_mode -> REF mode .)
    SEMICOL         reduce using rule 46 (reference_mode -> REF mode .)


state 154

    (40) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (43) literal_range -> . lower_bound COLON upper_bound
    (44) lower_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    literal_range                  shift and go to state 182
    operand2                       shift and go to state 38
    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 183
    lower_bound                    shift and go to state 184
    operand0                       shift and go to state 31

state 155

    (51) array_mode -> ARRAY LBRACK . index_mode_list RBRACK element_mode
    (52) index_mode_list -> . index_mode_list COMMA index_mode
    (53) index_mode_list -> . index_mode
    (54) index_mode -> . discrete_mode
    (55) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (43) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (44) lower_bound -> . expression
    (42) discrete_mode_name -> . identifier
    (91) expression -> . operand0
    (59) identifier -> . ID
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    ID              shift and go to state 24
    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    index_mode                     shift and go to state 185
    identifier                     shift and go to state 186
    monadic_operator               shift and go to state 33
    index_mode_list                shift and go to state 187
    lower_bound                    shift and go to state 184
    operand4                       shift and go to state 34
    operand3                       shift and go to state 37
    character_mode                 shift and go to state 106
    literal_range                  shift and go to state 188
    discrete_range_mode            shift and go to state 103
    operand0                       shift and go to state 31
    operand1                       shift and go to state 39
    integer_mode                   shift and go to state 107
    discrete_mode                  shift and go to state 189
    expression                     shift and go to state 183
    boolean_mode                   shift and go to state 115
    discrete_mode_name             shift and go to state 118
    operand2                       shift and go to state 38

state 156

    (39) discrete_range_mode -> discrete_mode_name LPAREN . literal_range RPAREN
    (43) literal_range -> . lower_bound COLON upper_bound
    (44) lower_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    literal_range                  shift and go to state 190
    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    lower_bound                    shift and go to state 184
    expression                     shift and go to state 183
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31

state 157

    (20) synonym_list -> synonym_list COMMA synonym_definition .

    SEMICOL         reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)
    COMMA           reduce using rule 20 (synonym_list -> synonym_list COMMA synonym_definition .)


state 158

    (22) synonym_definition -> identifier_list mode ASSIGN . constant_expression
    (24) constant_expression -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 159
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31
    constant_expression            shift and go to state 191

state 159

    (24) constant_expression -> expression .

    SEMICOL         reduce using rule 24 (constant_expression -> expression .)
    COMMA           reduce using rule 24 (constant_expression -> expression .)


state 160

    (23) synonym_definition -> identifier_list ASSIGN constant_expression .

    SEMICOL         reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)
    COMMA           reduce using rule 23 (synonym_definition -> identifier_list ASSIGN constant_expression .)


state 161

    (74) array_element -> array_location LBRACK expression_list RBRACK .

    ARROW           reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    ASSIGN          reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    PLUSASSIGN      reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    MINUSASSIGN     reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    TIMESASSIGN     reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    DIVIDEASSIGN    reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    PERCASSIGN      reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    CONCATASSIGN    reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)
    LBRACK          reduce using rule 74 (array_element -> array_location LBRACK expression_list RBRACK .)


state 162

    (89) expression_list -> expression_list COMMA . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    expression                     shift and go to state 192
    operand3                       shift and go to state 37
    operand0                       shift and go to state 31
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    operand2                       shift and go to state 38

state 163

    (75) array_slice -> array_location LBRACK lower_bound COLON . upper_bound RBRACK
    (45) upper_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 193
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31
    upper_bound                    shift and go to state 194

state 164

    (25) newmode_list -> newmode_list COMMA mode_definition .

    SEMICOL         reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)


state 165

    (27) mode_definition -> identifier_list ASSIGN mode .

    SEMICOL         reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)


state 166

    (122) action_statement_list -> action_statement_list action_statement .

    ID              reduce using rule 122 (action_statement_list -> action_statement_list action_statement .)
    EXIT            reduce using rule 122 (action_statement_list -> action_statement_list action_statement .)
    IF              reduce using rule 122 (action_statement_list -> action_statement_list action_statement .)
    FI              reduce using rule 122 (action_statement_list -> action_statement_list action_statement .)
    ELSE            reduce using rule 122 (action_statement_list -> action_statement_list action_statement .)
    ELSIF           reduce using rule 122 (action_statement_list -> action_statement_list action_statement .)


state 167

    (13) action_statement -> label_id COLON . action SEMICOL
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (59) identifier -> . ID
    (71) string_location -> . location
    (76) array_location -> . location

    EXIT            shift and go to state 5
    IF              shift and go to state 2
    ID              shift and go to state 24

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 97
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    location                       shift and go to state 21
    if_action                      shift and go to state 22
    string_slice                   shift and go to state 6
    location_name                  shift and go to state 4
    array_slice                    shift and go to state 12
    array_location                 shift and go to state 25
    array_element                  shift and go to state 27
    assignment_action              shift and go to state 28
    action                         shift and go to state 98
    bracketed_action               shift and go to state 13

state 168

    (137) if_action -> IF boolean_expression then_clause else_clause FI .

    SEMICOL         reduce using rule 137 (if_action -> IF boolean_expression then_clause else_clause FI .)


state 169

    (141) else_clause -> ELSE action_statement_list .
    (122) action_statement_list -> action_statement_list . action_statement
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    FI              reduce using rule 141 (else_clause -> ELSE action_statement_list .)
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    location                       shift and go to state 21
    if_action                      shift and go to state 22
    string_slice                   shift and go to state 6
    location_name                  shift and go to state 4
    array_slice                    shift and go to state 12
    array_location                 shift and go to state 25
    label_id                       shift and go to state 135
    array_element                  shift and go to state 27
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    bracketed_action               shift and go to state 13
    action_statement               shift and go to state 166

state 170

    (142) else_clause -> ELSE empty .

    FI              reduce using rule 142 (else_clause -> ELSE empty .)


state 171

    (143) else_clause -> ELSIF boolean_expression . then_clause else_clause
    (144) else_clause -> ELSIF boolean_expression . then_clause
    (139) then_clause -> . THEN action_statement_list
    (140) then_clause -> . THEN empty

    THEN            shift and go to state 80

    then_clause                    shift and go to state 195

state 172

    (73) right_element -> integer_expression .

    RBRACK          reduce using rule 73 (right_element -> integer_expression .)


state 173

    (70) string_slice -> string_location LBRACK left_element COLON right_element . RBRACK

    RBRACK          shift and go to state 196


state 174

    (149) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL statement_list END
    (151) procedure_definition -> PROC LPAREN RPAREN . result_spec SEMICOL END
    (152) procedure_definition -> PROC LPAREN RPAREN . SEMICOL statement_list END
    (153) procedure_definition -> PROC LPAREN RPAREN . SEMICOL END
    (160) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (161) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 199
    RETURNS         shift and go to state 197

    result_spec                    shift and go to state 198

state 175

    (146) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL statement_list END
    (147) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN result_spec SEMICOL END
    (148) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL statement_list END
    (150) procedure_definition -> PROC LPAREN formal_parameter_list . RPAREN SEMICOL END
    (154) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 200
    COMMA           shift and go to state 201


state 176

    (155) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 155 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 155 (formal_parameter_list -> formal_parameter .)


state 177

    (156) formal_parameter -> identifier_list . parameter_spec
    (58) identifier_list -> identifier_list . COMMA identifier
    (157) parameter_spec -> . mode parameter_attribute
    (158) parameter_spec -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    COMMA           shift and go to state 104
    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    array_mode                     shift and go to state 116
    mode_name                      shift and go to state 101
    string_mode                    shift and go to state 105
    integer_mode                   shift and go to state 107
    discrete_mode                  shift and go to state 114
    mode                           shift and go to state 202
    boolean_mode                   shift and go to state 115
    character_mode                 shift and go to state 106
    parameter_spec                 shift and go to state 203
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111

state 178

    (19) initialization -> ASSIGN expression .

    SEMICOL         reduce using rule 19 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 19 (initialization -> ASSIGN expression .)


state 179

    (49) string_mode -> CHARS LBRACK string_length . RBRACK

    RBRACK          shift and go to state 204


state 180

    (50) string_length -> integer_literal .

    RBRACK          reduce using rule 50 (string_length -> integer_literal .)


state 181

    (83) integer_literal -> ICONST .

    RBRACK          reduce using rule 83 (integer_literal -> ICONST .)


state 182

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 205


state 183

    (44) lower_bound -> expression .

    COLON           reduce using rule 44 (lower_bound -> expression .)


state 184

    (43) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 206


state 185

    (53) index_mode_list -> index_mode .

    RBRACK          reduce using rule 53 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 53 (index_mode_list -> index_mode .)


state 186

    (42) discrete_mode_name -> identifier .

    LPAREN          reduce using rule 42 (discrete_mode_name -> identifier .)


state 187

    (51) array_mode -> ARRAY LBRACK index_mode_list . RBRACK element_mode
    (52) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACK          shift and go to state 207
    COMMA           shift and go to state 208


state 188

    (55) index_mode -> literal_range .

    RBRACK          reduce using rule 55 (index_mode -> literal_range .)
    COMMA           reduce using rule 55 (index_mode -> literal_range .)


state 189

    (54) index_mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACK          reduce using rule 54 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 54 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 154


state 190

    (39) discrete_range_mode -> discrete_mode_name LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 209


state 191

    (22) synonym_definition -> identifier_list mode ASSIGN constant_expression .

    SEMICOL         reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)
    COMMA           reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)


state 192

    (89) expression_list -> expression_list COMMA expression .

    RBRACK          reduce using rule 89 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 89 (expression_list -> expression_list COMMA expression .)


state 193

    (45) upper_bound -> expression .

    RPAREN          reduce using rule 45 (upper_bound -> expression .)
    RBRACK          reduce using rule 45 (upper_bound -> expression .)
    COMMA           reduce using rule 45 (upper_bound -> expression .)


state 194

    (75) array_slice -> array_location LBRACK lower_bound COLON upper_bound . RBRACK

    RBRACK          shift and go to state 210


state 195

    (143) else_clause -> ELSIF boolean_expression then_clause . else_clause
    (144) else_clause -> ELSIF boolean_expression then_clause .
    (141) else_clause -> . ELSE action_statement_list
    (142) else_clause -> . ELSE empty
    (143) else_clause -> . ELSIF boolean_expression then_clause else_clause
    (144) else_clause -> . ELSIF boolean_expression then_clause

    FI              reduce using rule 144 (else_clause -> ELSIF boolean_expression then_clause .)
    ELSE            shift and go to state 138
    ELSIF           shift and go to state 139

    else_clause                    shift and go to state 211

state 196

    (70) string_slice -> string_location LBRACK left_element COLON right_element RBRACK .

    ARROW           reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    ASSIGN          reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PLUSASSIGN      reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    MINUSASSIGN     reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    TIMESASSIGN     reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    DIVIDEASSIGN    reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    PERCASSIGN      reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    CONCATASSIGN    reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)
    LBRACK          reduce using rule 70 (string_slice -> string_location LBRACK left_element COLON right_element RBRACK .)


state 197

    (160) result_spec -> RETURNS . LPAREN mode result_attribute RPAREN
    (161) result_spec -> RETURNS . LPAREN mode RPAREN

    LPAREN          shift and go to state 212


state 198

    (149) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL statement_list END
    (151) procedure_definition -> PROC LPAREN RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 213


state 199

    (152) procedure_definition -> PROC LPAREN RPAREN SEMICOL . statement_list END
    (153) procedure_definition -> PROC LPAREN RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 214
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    statement                      shift and go to state 20
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    statement_list                 shift and go to state 215
    declaration_statement          shift and go to state 7
    newmode_statement              shift and go to state 26
    location_name                  shift and go to state 4
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    label_id                       shift and go to state 8
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 200

    (146) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL statement_list END
    (147) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . result_spec SEMICOL END
    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL statement_list END
    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN . SEMICOL END
    (160) result_spec -> . RETURNS LPAREN mode result_attribute RPAREN
    (161) result_spec -> . RETURNS LPAREN mode RPAREN

    SEMICOL         shift and go to state 217
    RETURNS         shift and go to state 197

    result_spec                    shift and go to state 216

state 201

    (154) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (156) formal_parameter -> . identifier_list parameter_spec
    (57) identifier_list -> . identifier
    (58) identifier_list -> . identifier_list COMMA identifier
    (59) identifier -> . ID

    ID              shift and go to state 24

    identifier_list                shift and go to state 177
    identifier                     shift and go to state 49
    formal_parameter               shift and go to state 218

state 202

    (157) parameter_spec -> mode . parameter_attribute
    (158) parameter_spec -> mode .
    (159) parameter_attribute -> . LOC

    RPAREN          reduce using rule 158 (parameter_spec -> mode .)
    COMMA           reduce using rule 158 (parameter_spec -> mode .)
    LOC             shift and go to state 220

    parameter_attribute            shift and go to state 219

state 203

    (156) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 156 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 156 (formal_parameter -> identifier_list parameter_spec .)


state 204

    (49) string_mode -> CHARS LBRACK string_length RBRACK .

    ASSIGN          reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    SEMICOL         reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    COMMA           reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    RPAREN          reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)
    LOC             reduce using rule 49 (string_mode -> CHARS LBRACK string_length RBRACK .)


state 205

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 206

    (43) literal_range -> lower_bound COLON . upper_bound
    (45) upper_bound -> . expression
    (91) expression -> . operand0
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    operand3                       shift and go to state 37
    operand1                       shift and go to state 39
    monadic_operator               shift and go to state 33
    operand4                       shift and go to state 34
    expression                     shift and go to state 193
    operand2                       shift and go to state 38
    operand0                       shift and go to state 31
    upper_bound                    shift and go to state 221

state 207

    (51) array_mode -> ARRAY LBRACK index_mode_list RBRACK . element_mode
    (56) element_mode -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    element_mode                   shift and go to state 222
    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    string_mode                    shift and go to state 105
    mode_name                      shift and go to state 101
    integer_mode                   shift and go to state 107
    mode                           shift and go to state 223
    discrete_mode                  shift and go to state 114
    character_mode                 shift and go to state 106
    array_mode                     shift and go to state 116
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111
    boolean_mode                   shift and go to state 115

state 208

    (52) index_mode_list -> index_mode_list COMMA . index_mode
    (54) index_mode -> . discrete_mode
    (55) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (43) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (44) lower_bound -> . expression
    (42) discrete_mode_name -> . identifier
    (91) expression -> . operand0
    (59) identifier -> . ID
    (94) operand0 -> . operand1
    (95) operand0 -> . operand0 operator1 operand1
    (107) operand1 -> . operand2
    (108) operand1 -> . operand1 operator2 operand2
    (112) operand2 -> . operand3
    (113) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (117) operand3 -> . monadic_operator operand4
    (118) operand3 -> . operand4
    (119) monadic_operator -> . MINUS
    (120) monadic_operator -> . NOT
    (121) operand4 -> . ICONST

    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    ID              shift and go to state 24
    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    ICONST          shift and go to state 35

    index_mode                     shift and go to state 224
    identifier                     shift and go to state 186
    monadic_operator               shift and go to state 33
    lower_bound                    shift and go to state 184
    operand4                       shift and go to state 34
    operand3                       shift and go to state 37
    character_mode                 shift and go to state 106
    literal_range                  shift and go to state 188
    discrete_range_mode            shift and go to state 103
    operand0                       shift and go to state 31
    operand1                       shift and go to state 39
    integer_mode                   shift and go to state 107
    discrete_mode                  shift and go to state 189
    expression                     shift and go to state 183
    boolean_mode                   shift and go to state 115
    discrete_mode_name             shift and go to state 118
    operand2                       shift and go to state 38

state 209

    (39) discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RBRACK          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    SEMICOL         reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    LOC             reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN .)


state 210

    (75) array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .

    ARROW           reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    ASSIGN          reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PLUSASSIGN      reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    MINUSASSIGN     reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    TIMESASSIGN     reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    DIVIDEASSIGN    reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    PERCASSIGN      reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    CONCATASSIGN    reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)
    LBRACK          reduce using rule 75 (array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK .)


state 211

    (143) else_clause -> ELSIF boolean_expression then_clause else_clause .

    FI              reduce using rule 143 (else_clause -> ELSIF boolean_expression then_clause else_clause .)


state 212

    (160) result_spec -> RETURNS LPAREN . mode result_attribute RPAREN
    (161) result_spec -> RETURNS LPAREN . mode RPAREN
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (46) reference_mode -> . REF mode
    (47) composite_mode -> . string_mode
    (48) composite_mode -> . array_mode
    (59) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . discrete_mode_name LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (49) string_mode -> . CHARS LBRACK string_length RBRACK
    (51) array_mode -> . ARRAY LBRACK index_mode_list RBRACK element_mode
    (42) discrete_mode_name -> . identifier

    REF             shift and go to state 113
    ID              shift and go to state 24
    INT             shift and go to state 120
    BOOL            shift and go to state 112
    CHAR            shift and go to state 110
    CHARS           shift and go to state 109
    ARRAY           shift and go to state 117

    identifier                     shift and go to state 102
    discrete_range_mode            shift and go to state 103
    array_mode                     shift and go to state 116
    mode_name                      shift and go to state 101
    string_mode                    shift and go to state 105
    integer_mode                   shift and go to state 107
    mode                           shift and go to state 225
    discrete_mode                  shift and go to state 114
    boolean_mode                   shift and go to state 115
    character_mode                 shift and go to state 106
    discrete_mode_name             shift and go to state 118
    reference_mode                 shift and go to state 119
    composite_mode                 shift and go to state 111

state 213

    (149) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . statement_list END
    (151) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 226
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    statement                      shift and go to state 20
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    statement_list                 shift and go to state 227
    declaration_statement          shift and go to state 7
    newmode_statement              shift and go to state 26
    location_name                  shift and go to state 4
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    label_id                       shift and go to state 8
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 214

    (153) procedure_definition -> PROC LPAREN RPAREN SEMICOL END .

    SEMICOL         reduce using rule 153 (procedure_definition -> PROC LPAREN RPAREN SEMICOL END .)


state 215

    (152) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 228
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    statement                      shift and go to state 63
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    declaration_statement          shift and go to state 7
    newmode_statement              shift and go to state 26
    location_name                  shift and go to state 4
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    label_id                       shift and go to state 8
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 216

    (146) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL statement_list END
    (147) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec . SEMICOL END

    SEMICOL         shift and go to state 229


state 217

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . statement_list END
    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 230
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    statement                      shift and go to state 20
    location_name                  shift and go to state 4
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    statement_list                 shift and go to state 231
    label_id                       shift and go to state 8
    declaration_statement          shift and go to state 7
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    newmode_statement              shift and go to state 26
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 218

    (154) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 154 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 154 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 219

    (157) parameter_spec -> mode parameter_attribute .

    RPAREN          reduce using rule 157 (parameter_spec -> mode parameter_attribute .)
    COMMA           reduce using rule 157 (parameter_spec -> mode parameter_attribute .)


state 220

    (159) parameter_attribute -> LOC .

    RPAREN          reduce using rule 159 (parameter_attribute -> LOC .)
    COMMA           reduce using rule 159 (parameter_attribute -> LOC .)


state 221

    (43) literal_range -> lower_bound COLON upper_bound .

    RPAREN          reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)
    RBRACK          reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 43 (literal_range -> lower_bound COLON upper_bound .)


state 222

    (51) array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .

    ASSIGN          reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    SEMICOL         reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    COMMA           reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    LOC             reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)
    RPAREN          reduce using rule 51 (array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode .)


state 223

    (56) element_mode -> mode .

    ASSIGN          reduce using rule 56 (element_mode -> mode .)
    SEMICOL         reduce using rule 56 (element_mode -> mode .)
    COMMA           reduce using rule 56 (element_mode -> mode .)
    LOC             reduce using rule 56 (element_mode -> mode .)
    RPAREN          reduce using rule 56 (element_mode -> mode .)


state 224

    (52) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACK          reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)


state 225

    (160) result_spec -> RETURNS LPAREN mode . result_attribute RPAREN
    (161) result_spec -> RETURNS LPAREN mode . RPAREN
    (162) result_attribute -> . LOC

    RPAREN          shift and go to state 233
    LOC             shift and go to state 234

    result_attribute               shift and go to state 232

state 226

    (151) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 151 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END .)


state 227

    (149) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 235
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    statement                      shift and go to state 63
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    declaration_statement          shift and go to state 7
    newmode_statement              shift and go to state 26
    location_name                  shift and go to state 4
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    label_id                       shift and go to state 8
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 228

    (152) procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 152 (procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END .)


state 229

    (146) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . statement_list END
    (147) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL . END
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 236
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    statement                      shift and go to state 20
    location_name                  shift and go to state 4
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    statement_list                 shift and go to state 237
    label_id                       shift and go to state 8
    declaration_statement          shift and go to state 7
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    newmode_statement              shift and go to state 26
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 230

    (150) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .

    SEMICOL         reduce using rule 150 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END .)


state 231

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 238
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    statement                      shift and go to state 63
    location_name                  shift and go to state 4
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    label_id                       shift and go to state 8
    declaration_statement          shift and go to state 7
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    newmode_statement              shift and go to state 26
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 232

    (160) result_spec -> RETURNS LPAREN mode result_attribute . RPAREN

    RPAREN          shift and go to state 239


state 233

    (161) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMICOL         reduce using rule 161 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 234

    (162) result_attribute -> LOC .

    RPAREN          reduce using rule 162 (result_attribute -> LOC .)


state 235

    (149) procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 149 (procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END .)


state 236

    (147) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .

    SEMICOL         reduce using rule 147 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END .)


state 237

    (146) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list . END
    (2) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMICOL
    (10) synonym_statement -> . SYN synonym_list SEMICOL
    (11) newmode_statement -> . TYPE newmode_list SEMICOL
    (12) procedure_statement -> . label_id COLON procedure_definition SEMICOL
    (13) action_statement -> . label_id COLON action SEMICOL
    (14) action_statement -> . action SEMICOL
    (124) label_id -> . identifier
    (125) action -> . bracketed_action
    (126) action -> . assignment_action
    (127) action -> . exit_action
    (59) identifier -> . ID
    (128) bracketed_action -> . if_action
    (129) assignment_action -> . location assigning_operator expression
    (145) exit_action -> . EXIT label_id
    (137) if_action -> . IF boolean_expression then_clause else_clause FI
    (138) if_action -> . IF boolean_expression then_clause FI
    (60) location -> . location_name
    (61) location -> . dereferenced_reference
    (62) location -> . string_element
    (63) location -> . string_slice
    (64) location -> . array_element
    (65) location -> . array_slice
    (66) location_name -> . identifier
    (67) dereferenced_reference -> . location ARROW
    (68) string_element -> . string_location LBRACK start_element RBRACK
    (70) string_slice -> . string_location LBRACK left_element COLON right_element RBRACK
    (74) array_element -> . array_location LBRACK expression_list RBRACK
    (75) array_slice -> . array_location LBRACK lower_bound COLON upper_bound RBRACK
    (71) string_location -> . location
    (76) array_location -> . location

    END             shift and go to state 240
    DCL             shift and go to state 9
    SYN             shift and go to state 14
    TYPE            shift and go to state 29
    ID              shift and go to state 24
    EXIT            shift and go to state 5
    IF              shift and go to state 2

    string_location                shift and go to state 3
    string_element                 shift and go to state 15
    identifier                     shift and go to state 16
    statement                      shift and go to state 63
    location_name                  shift and go to state 4
    location                       shift and go to state 21
    array_slice                    shift and go to state 12
    if_action                      shift and go to state 22
    label_id                       shift and go to state 8
    declaration_statement          shift and go to state 7
    exit_action                    shift and go to state 17
    dereferenced_reference         shift and go to state 18
    array_element                  shift and go to state 27
    procedure_statement            shift and go to state 11
    newmode_statement              shift and go to state 26
    synonym_statement              shift and go to state 10
    assignment_action              shift and go to state 28
    action                         shift and go to state 19
    string_slice                   shift and go to state 6
    bracketed_action               shift and go to state 13
    array_location                 shift and go to state 25
    action_statement               shift and go to state 30

state 238

    (148) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .

    SEMICOL         reduce using rule 148 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END .)


state 239

    (160) result_spec -> RETURNS LPAREN mode result_attribute RPAREN .

    SEMICOL         reduce using rule 160 (result_spec -> RETURNS LPAREN mode result_attribute RPAREN .)


state 240

    (146) procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .

    SEMICOL         reduce using rule 146 (procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 21 resolved using rule (string_location -> location)
WARNING: rejected rule (array_location -> location) in state 21
WARNING: Rule (array_location -> location) is never reduced
