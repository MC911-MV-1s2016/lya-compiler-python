
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '427C1DBC92AA2699227434E48CA9832C'
    
_lr_action_items = {'ARROW':([7,9,10,11,12,13,17,20,22,25,27,30,32,36,37,57,59,66,67,70,72,85,89,90,91,92,93,94,95,96,97,98,101,104,108,111,127,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,158,161,203,215,220,221,222,227,229,230,231,234,235,237,238,240,241,245,247,254,256,260,277,296,302,304,308,309,312,314,],[-65,-62,56,-64,-58,-189,-61,90,-63,56,-60,-188,-66,-59,56,56,-65,90,56,56,-66,56,56,-67,-152,-157,-156,-151,-155,56,-154,-153,56,56,56,56,90,-129,-131,56,-130,-126,-124,-123,-122,56,-125,-118,-110,-111,-116,56,-119,-113,-115,-109,-112,-114,-117,56,-202,-191,56,56,-201,56,-190,56,-73,56,56,56,56,56,56,-68,56,56,56,56,56,56,-66,56,-74,56,56,-70,56,56,]),'LEQ':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,141,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'TYPE':([0,1,14,15,26,35,41,47,49,54,123,186,205,251,252,322,340,343,344,348,349,352,355,],[3,3,-5,-6,-7,-3,-8,-4,-2,-14,-11,-9,-10,-13,-12,3,3,3,3,3,3,3,3,]),'PRINT':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[4,4,4,-5,-6,4,-7,-3,4,4,-8,-4,-2,-14,4,4,4,4,4,4,-152,-157,-156,-151,-155,4,-154,-153,4,4,4,4,-140,4,4,-11,-129,-131,4,-130,-126,-124,-123,-122,4,-125,-118,-110,-111,-116,4,-119,-113,-115,-109,-112,-114,-117,4,4,-9,4,-139,4,4,-10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-13,-12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DOWN':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,127,134,153,158,161,190,200,201,212,213,216,217,220,222,229,240,259,285,286,287,299,302,309,315,325,326,332,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-101,-180,244,-94,-128,-121,-108,-201,-190,-73,-68,-91,-181,313,-184,-99,-74,-70,336,-100,-92,-182,]),'LPAREN':([4,6,8,10,12,16,18,23,24,25,32,37,39,46,48,57,67,70,72,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,169,170,171,172,175,176,178,179,183,203,208,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,277,278,288,289,296,304,305,306,308,310,312,314,320,],[-210,-208,-203,57,-58,89,-207,101,-206,57,-195,57,-205,-209,-204,57,57,57,-195,57,57,-152,-157,-156,-151,-155,57,-154,-153,57,57,57,57,-129,-131,57,-130,-126,-124,-123,-122,57,-125,-118,-110,-111,-116,57,-119,-113,-115,-109,-112,-114,-117,57,-38,-34,-37,-36,-33,234,-35,237,-32,57,253,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,234,237,237,234,57,57,-39,-40,57,237,57,57,342,]),'THEN':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,102,103,127,133,134,153,158,161,212,213,216,217,220,222,229,240,259,263,295,299,302,309,324,325,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,162,-102,-138,215,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,162,215,-99,-74,-70,215,-100,-92,]),'ELSE':([9,11,12,13,17,22,27,30,36,54,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,115,127,134,153,158,161,162,163,195,212,213,214,216,217,220,222,223,224,229,240,251,255,258,259,299,301,302,309,323,325,326,346,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-14,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-140,-138,-132,-133,-202,-191,-228,228,-139,-94,-128,256,-121,-108,-201,-190,-161,-160,-73,-68,-13,256,-103,-91,-99,228,-74,-70,-106,-100,-92,-105,]),'READ':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[46,46,46,-5,-6,46,-7,-3,46,46,-8,-4,-2,-14,46,46,46,46,46,46,-152,-157,-156,-151,-155,46,-154,-153,46,46,46,46,-140,46,46,-11,-129,-131,46,-130,-126,-124,-123,-122,46,-125,-118,-110,-111,-116,46,-119,-113,-115,-109,-112,-114,-117,46,46,-9,46,-139,46,46,-10,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-13,-12,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NUM':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[8,8,8,-5,-6,8,-7,-3,8,8,-8,-4,-2,-14,8,8,8,8,8,8,-152,-157,-156,-151,-155,8,-154,-153,8,8,8,8,-140,8,8,-11,-129,-131,8,-130,-126,-124,-123,-122,8,-125,-118,-110,-111,-116,8,-119,-113,-115,-109,-112,-114,-117,8,8,-9,8,-139,8,8,-10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-13,-12,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'TIMESASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,72,90,158,161,220,222,229,240,302,309,],[-65,-62,-64,-58,-189,-61,97,-63,-60,-188,-66,-59,-66,-67,-202,-191,-201,-190,-73,-68,-74,-70,]),'RESULT':([0,1,14,15,26,35,38,41,47,49,54,115,116,122,123,162,186,191,195,196,205,224,228,243,251,252,264,322,340,343,344,348,349,352,355,],[10,10,-5,-6,-7,-3,10,-8,-4,-2,-14,-140,10,10,-11,10,-9,10,-139,10,-10,10,10,10,-13,-12,10,10,10,10,10,10,10,10,10,]),'SCONST':([10,25,37,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[73,73,73,73,73,73,73,73,-152,-157,-156,-151,-155,73,-154,-153,73,73,73,73,-129,-131,73,-130,-126,-124,-123,-122,73,-125,-118,-110,-111,-116,73,-119,-113,-115,-109,-112,-114,-117,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'ARRAY':([12,53,105,119,126,173,210,291,307,342,],[-58,-56,180,180,180,180,-57,180,180,180,]),'TIMES':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,72,73,74,75,76,77,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,129,-65,-83,-134,-89,-136,-78,-86,-135,-137,-66,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,129,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'PERC':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,72,73,74,75,76,77,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,130,-65,-83,-134,-89,-136,-78,-86,-135,-137,-66,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,130,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'PERCASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,72,90,158,161,220,222,229,240,302,309,],[-65,-62,-64,-58,-189,-61,93,-63,-60,-188,-66,-59,-66,-67,-202,-191,-201,-190,-73,-68,-74,-70,]),'NULL':([10,25,37,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[62,62,62,62,62,62,62,62,-152,-157,-156,-151,-155,62,-154,-153,62,62,62,62,-129,-131,62,-130,-126,-124,-123,-122,62,-125,-118,-110,-111,-116,62,-119,-113,-115,-109,-112,-114,-117,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'SEMICOL':([2,5,7,9,11,12,13,17,19,22,27,30,33,34,36,37,40,43,45,50,52,55,58,59,60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,90,99,100,103,106,107,109,110,112,113,114,120,121,127,134,153,158,159,161,168,169,170,171,172,174,175,176,177,178,179,181,182,183,184,192,193,194,197,198,199,206,207,209,211,212,213,216,217,220,222,226,229,233,236,239,240,242,248,249,250,259,262,274,283,287,288,290,294,299,302,303,305,306,309,310,311,318,321,325,326,329,330,333,334,335,339,345,347,350,353,354,356,357,358,361,362,363,],[-147,54,-144,-62,-64,-58,-189,-61,-143,-63,-60,-188,-149,-148,-59,-198,-145,-146,-142,123,-26,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-199,-107,-66,-90,-77,-85,-76,-84,-97,-200,-98,-88,-81,-80,-79,-87,-82,-67,-141,-196,-102,186,-16,-197,191,-172,-171,-169,205,-21,-138,-132,-133,-202,-150,-191,-30,-38,-34,-37,-36,-28,-33,-41,-18,-35,-29,-47,-31,-32,-46,-187,-170,-168,-175,-174,-173,251,252,-25,-27,-94,-128,-121,-108,-201,-190,-159,-73,-45,-17,-15,-68,-167,-23,-24,-20,-91,-158,-19,-166,-184,-186,-22,322,-99,-74,-48,-39,-40,-70,-185,-179,340,343,-100,-92,-50,-55,-178,-183,-177,348,-218,-176,-215,-216,-217,-212,-213,-226,-214,-211,-225,]),'LOC':([12,168,169,170,171,172,174,175,176,178,179,181,182,183,184,233,303,305,306,317,329,330,351,],[-58,-30,-38,-34,-37,-36,-28,-33,-41,-35,-29,-47,-31,-32,-46,-45,-48,-39,-40,338,-50,-55,359,]),'ID':([0,1,3,10,12,14,15,21,25,26,29,35,37,38,41,42,47,49,53,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,105,108,111,115,116,118,119,122,123,124,125,126,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,173,185,186,191,195,196,203,204,205,210,215,221,224,227,228,230,231,234,235,237,238,241,243,245,246,247,251,252,253,254,256,260,264,284,291,296,304,307,308,312,314,319,322,340,342,343,344,348,349,352,355,],[12,12,12,12,-58,-5,-6,12,12,-7,12,-3,12,12,-8,12,-4,-2,-56,-14,12,12,12,12,12,12,-152,-157,-156,-151,-155,12,-154,-153,12,12,12,12,12,-140,12,12,12,12,-11,12,12,12,-129,-131,12,-130,-126,-124,-123,-122,12,-125,-118,-110,-111,-116,12,-119,-113,-115,-109,-112,-114,-117,12,12,12,12,-9,12,-139,12,12,12,-10,-57,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-13,-12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FALSE':([10,25,37,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[65,65,65,65,65,65,65,65,-152,-157,-156,-151,-155,65,-154,-153,65,65,65,65,-129,-131,65,-130,-126,-124,-123,-122,65,-125,-118,-110,-111,-116,65,-119,-113,-115,-109,-112,-114,-117,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MINUSASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,72,90,158,161,220,222,229,240,302,309,],[-65,-62,-64,-58,-189,-61,98,-63,-60,-188,-66,-59,-66,-67,-202,-191,-201,-190,-73,-68,-74,-70,]),'DIF':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,151,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'SUCC':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[39,39,39,-5,-6,39,-7,-3,39,39,-8,-4,-2,-14,39,39,39,39,39,39,-152,-157,-156,-151,-155,39,-154,-153,39,39,39,39,-140,39,39,-11,-129,-131,39,-130,-126,-124,-123,-122,39,-125,-118,-110,-111,-116,39,-119,-113,-115,-109,-112,-114,-117,39,39,-9,39,-139,39,39,-10,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-13,-12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'IN':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,200,201,212,213,216,217,220,222,229,240,244,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,146,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-180,246,-94,-128,-121,-108,-201,-190,-73,-68,284,-91,-66,-74,-70,-92,]),'DIVIDE':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,72,73,74,75,76,77,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,132,-65,-83,-134,-89,-136,-78,-86,-135,-137,-66,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,132,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'CHAR':([12,53,105,119,126,173,210,238,246,284,291,307,308,342,],[-58,-56,169,169,169,169,-57,169,169,169,169,169,169,169,]),'LOWER':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[18,18,18,-5,-6,18,-7,-3,18,18,-8,-4,-2,-14,18,18,18,18,18,18,-152,-157,-156,-151,-155,18,-154,-153,18,18,18,18,-140,18,18,-11,-129,-131,18,-130,-126,-124,-123,-122,18,-125,-118,-110,-111,-116,18,-119,-113,-115,-109,-112,-114,-117,18,18,-9,18,-139,18,18,-10,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-13,-12,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'EXIT':([0,1,14,15,26,35,38,41,47,49,54,115,116,122,123,162,186,191,195,196,205,224,228,243,251,252,264,322,340,343,344,348,349,352,355,],[21,21,-5,-6,-7,-3,21,-8,-4,-2,-14,-140,21,21,-11,21,-9,21,-139,21,-10,21,21,21,-13,-12,21,21,21,21,21,21,21,21,21,]),'RPAREN':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,89,90,101,127,128,134,153,155,156,157,158,160,161,168,169,170,171,172,174,175,176,178,179,181,182,183,184,212,213,216,217,220,222,229,233,240,253,259,261,268,273,275,292,293,299,302,303,305,306,309,316,317,325,326,328,329,330,337,338,341,351,359,360,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,158,-67,161,-138,212,-132,-133,220,-194,-193,-202,222,-191,-30,-38,-34,-37,-36,-28,-33,-41,-35,-29,-47,-31,-32,-46,-94,-128,-121,-108,-201,-190,-73,-45,-68,294,-91,-192,-44,305,306,318,-220,-99,-74,-48,-39,-40,-70,-221,-223,-100,-92,-42,-50,-55,-222,-224,-219,358,-227,363,]),'COMMA':([9,11,12,13,17,22,27,30,36,50,51,52,53,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,105,106,107,119,120,121,127,134,153,155,156,157,158,160,161,164,166,168,169,170,171,172,174,175,176,177,178,179,181,182,183,184,209,210,211,212,213,216,217,218,220,222,229,233,236,239,240,248,249,250,259,261,266,268,274,276,278,279,280,290,291,292,293,299,302,303,305,306,309,316,317,325,326,328,329,330,331,337,338,341,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,124,125,-26,-56,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,125,185,-16,125,204,-21,-138,-132,-133,221,-194,-193,-202,221,-191,230,-96,-30,-38,-34,-37,-36,-28,-33,-41,-18,-35,-29,-47,-31,-32,-46,-25,-57,-27,-94,-128,-121,-108,230,-201,-190,-73,-45,-17,-15,-68,-23,-24,-20,-91,-192,-95,-44,-19,308,-53,-54,-52,-22,125,319,-220,-99,-74,-48,-39,-40,-70,-221,-223,-100,-92,-42,-50,-55,-51,-222,-224,-219,]),'CONCAT':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,135,-66,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,135,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'ELSIF':([9,11,12,13,17,22,27,30,36,54,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,115,127,134,153,158,161,162,163,195,212,213,214,216,217,220,222,223,224,229,240,251,255,258,259,299,301,302,309,323,325,326,346,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-14,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-140,-138,-132,-133,-202,-191,-228,227,-139,-94,-128,254,-121,-108,-201,-190,-161,-160,-73,-68,-13,296,-103,-91,-99,227,-74,-70,-106,-100,-92,-105,]),'DIVIDEASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,72,90,158,161,220,222,229,240,302,309,],[-65,-62,-64,-58,-189,-61,95,-63,-60,-188,-66,-59,-66,-67,-202,-191,-201,-190,-73,-68,-74,-70,]),'IF':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,57,67,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[25,25,67,-5,-6,67,-7,-3,67,25,-8,-4,-2,-14,67,67,67,-152,-157,-156,-151,-155,67,-154,-153,67,67,67,67,-140,25,25,-11,67,25,-9,25,-139,25,67,-10,67,67,25,67,25,67,67,67,67,67,67,67,25,67,67,-13,-12,67,67,67,25,67,67,67,67,67,25,25,25,25,25,25,25,25,]),'UPPER':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[24,24,24,-5,-6,24,-7,-3,24,24,-8,-4,-2,-14,24,24,24,24,24,24,-152,-157,-156,-151,-155,24,-154,-153,24,24,24,24,-140,24,24,-11,-129,-131,24,-130,-126,-124,-123,-122,24,-125,-118,-110,-111,-116,24,-119,-113,-115,-109,-112,-114,-117,24,24,-9,24,-139,24,24,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-13,-12,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FI':([9,11,12,13,17,22,27,30,36,54,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,115,127,134,153,158,161,162,163,195,212,213,216,217,220,222,223,224,225,228,229,240,251,257,259,264,265,297,298,299,301,302,309,325,326,327,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-14,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-140,-138,-132,-133,-202,-191,-228,226,-139,-94,-128,-121,-108,-201,-190,-161,-160,262,-228,-73,-68,-13,299,-91,-162,-163,325,-104,-99,-165,-74,-70,-100,-92,-164,]),'CONCATASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,72,90,158,161,220,222,229,240,302,309,],[-65,-62,-64,-58,-189,-61,92,-63,-60,-188,-66,-59,-66,-67,-202,-191,-201,-190,-73,-68,-74,-70,]),'DCL':([0,1,14,15,26,35,41,47,49,54,123,186,205,251,252,322,340,343,344,348,349,352,355,],[29,29,-5,-6,-7,-3,-8,-4,-2,-14,-11,-9,-10,-13,-12,29,29,29,29,29,29,29,29,]),'BOOL':([12,53,105,119,126,173,210,238,246,284,291,307,308,342,],[-58,-56,171,171,171,171,-57,171,171,171,171,171,171,171,]),'EQUALS':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,147,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'TRUE':([10,25,37,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[86,86,86,86,86,86,86,86,-152,-157,-156,-151,-155,86,-154,-153,86,86,86,86,-129,-131,86,-130,-126,-124,-123,-122,86,-125,-118,-110,-111,-116,86,-119,-113,-115,-109,-112,-114,-117,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'MINUS':([9,10,11,12,13,17,22,25,27,30,36,37,55,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,81,82,83,84,86,87,89,90,91,92,93,94,95,96,97,98,101,104,108,111,127,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,161,203,212,213,215,216,217,220,221,222,227,229,230,231,234,235,237,238,240,241,245,247,254,256,259,260,277,296,302,304,308,309,312,314,326,],[-62,70,-64,-58,-189,-61,-63,70,-60,-188,-59,70,-127,70,-120,-65,-83,-134,-89,-136,-78,-86,-135,70,-137,140,-66,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,70,-67,-152,-157,-156,-151,-155,70,-154,-153,70,70,70,70,-138,-129,-131,70,-130,-132,-126,-124,-123,-122,70,-125,-118,-110,-111,-116,70,-119,-113,-115,-109,-112,-114,-117,-133,70,-202,-191,70,-94,-128,70,-121,140,-201,70,-190,70,-73,70,70,70,70,70,70,-68,70,70,70,70,70,-91,70,-66,70,-74,70,70,-70,70,70,-92,]),'GTR':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,148,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'$end':([1,14,15,26,31,35,41,47,49,54,123,186,205,251,252,],[-1,-5,-6,-7,0,-3,-8,-4,-2,-14,-11,-9,-10,-13,-12,]),'RETURNS':([294,318,],[320,320,]),'WHILE':([9,11,12,13,17,22,27,30,36,38,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,112,127,134,153,158,161,169,170,171,172,175,178,183,197,198,199,212,213,216,217,220,222,229,240,259,287,288,299,302,305,306,309,310,311,325,326,333,334,335,347,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,111,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,111,-138,-132,-133,-202,-191,-38,-34,-37,-36,-33,-35,-32,-175,-174,-173,-94,-128,-121,-108,-201,-190,-73,-68,-91,-184,-186,-99,-74,-39,-40,-70,-185,-179,-100,-92,-178,-183,-177,-176,]),'ICONST':([10,25,37,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,232,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[75,75,75,75,75,75,75,75,-152,-157,-156,-151,-155,75,-154,-153,75,75,75,75,-129,-131,75,-130,-126,-124,-123,-122,75,-125,-118,-110,-111,-116,75,-119,-113,-115,-109,-112,-114,-117,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'REF':([12,53,105,119,126,173,210,291,307,342,],[-58,-56,173,173,173,173,-57,173,173,173,]),'INT':([12,53,105,119,126,173,210,238,246,284,291,307,308,342,],[-58,-56,172,172,172,172,-57,172,172,172,172,172,172,172,]),'PROC':([122,],[208,]),'LBRACK':([7,9,11,12,13,17,20,22,27,28,30,32,36,59,60,62,64,65,66,68,72,73,74,75,76,77,81,82,83,84,86,87,88,90,127,158,161,167,180,212,220,222,229,240,259,277,302,309,326,],[-65,-62,-64,-58,-189,-61,-75,-63,-60,104,-188,108,-59,-65,-83,-89,-78,-86,-75,-93,108,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,154,-67,-75,-202,-191,232,238,-94,-201,-190,-73,-68,-91,108,-74,-70,-92,]),'RETURN':([0,1,14,15,26,35,38,41,47,49,54,115,116,122,123,162,186,191,195,196,205,224,228,243,251,252,264,322,340,343,344,348,349,352,355,],[37,37,-5,-6,-7,-3,37,-8,-4,-2,-14,-140,37,37,-11,37,-9,37,-139,37,-10,37,37,37,-13,-12,37,37,37,37,37,37,37,37,37,]),'PLUSASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,72,90,158,161,220,222,229,240,302,309,],[-65,-62,-64,-58,-189,-61,91,-63,-60,-188,-66,-59,-66,-67,-202,-191,-201,-190,-73,-68,-74,-70,]),'LENGTH':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[6,6,6,-5,-6,6,-7,-3,6,6,-8,-4,-2,-14,6,6,6,6,6,6,-152,-157,-156,-151,-155,6,-154,-153,6,6,6,6,-140,6,6,-11,-129,-131,6,-130,-126,-124,-123,-122,6,-125,-118,-110,-111,-116,6,-119,-113,-115,-109,-112,-114,-117,6,6,-9,6,-139,6,6,-10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-13,-12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'CHARS':([12,53,105,119,126,173,210,291,307,342,],[-58,-56,167,167,167,167,-57,167,167,167,]),'BY':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,285,286,287,299,302,309,325,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-181,312,-184,-99,-74,-70,-100,-92,]),'AND':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,143,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'GEQ':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,144,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'DO':([0,1,14,15,26,35,38,41,47,49,54,115,116,122,123,162,186,191,195,196,205,224,228,243,251,252,264,322,340,343,344,348,349,352,355,],[38,38,-5,-6,-7,-3,38,-8,-4,-2,-14,-140,38,38,-11,38,-9,38,-139,38,-10,38,38,38,-13,-12,38,38,38,38,38,38,38,38,38,]),'END':([14,15,26,35,41,47,49,54,123,186,205,251,252,322,340,343,344,348,349,352,355,],[-5,-6,-7,-3,-8,-4,-2,-14,-11,-9,-10,-13,-12,345,350,353,354,356,357,361,362,]),'RBRACK':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,127,134,153,158,161,164,166,169,170,171,172,175,178,183,187,188,190,212,213,216,217,218,220,222,229,240,259,266,267,268,269,270,276,278,279,280,281,282,299,300,302,305,306,309,325,326,328,331,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,229,-96,-38,-34,-37,-36,-33,-35,-32,-69,240,-101,-94,-128,-121,-108,259,-201,-190,-73,-68,-91,-95,302,-44,-49,303,307,-53,-54,-52,-72,309,-99,326,-74,-39,-40,-70,-100,-92,-42,-51,]),'CCONST':([10,25,37,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[81,81,81,81,81,81,81,81,-152,-157,-156,-151,-155,81,-154,-153,81,81,81,81,-129,-131,81,-130,-126,-124,-123,-122,81,-125,-118,-110,-111,-116,81,-119,-113,-115,-109,-112,-114,-117,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'TO':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,127,134,153,158,161,190,212,213,216,217,220,222,229,240,259,285,286,287,299,302,309,313,315,325,326,332,336,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-101,-94,-128,-121,-108,-201,-190,-73,-68,-91,-181,314,-184,-99,-74,-70,314,314,-100,-92,-182,314,]),'SYN':([0,1,14,15,26,35,41,47,49,54,123,186,205,251,252,322,340,343,344,348,349,352,355,],[42,42,-5,-6,-7,-3,-8,-4,-2,-14,-11,-9,-10,-13,-12,42,42,42,42,42,42,42,42,]),'OD':([38,54,115,116,191,195,243,251,],[114,-14,-140,194,242,-139,283,-13,]),'ASSIGN':([7,9,11,12,13,17,20,22,27,30,32,36,51,53,72,90,119,158,161,168,169,170,171,172,174,175,176,177,178,179,181,182,183,184,200,201,202,210,220,222,229,233,240,302,303,305,306,309,329,330,],[-65,-62,-64,-58,-189,-61,94,-63,-60,-188,-66,-59,126,-56,-66,-67,203,-202,-191,-30,-38,-34,-37,-36,-28,-33,-41,235,-35,-29,-47,-31,-32,-46,-180,245,247,-57,-201,-190,-73,-45,-68,-74,-48,-39,-40,-70,-50,-55,]),'NOT':([10,25,37,57,67,89,91,92,93,94,95,96,97,98,101,104,108,111,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[85,85,85,85,85,85,-152,-157,-156,-151,-155,85,-154,-153,85,85,85,85,-129,-131,85,-130,-126,-124,-123,-122,85,-125,-118,-110,-111,-116,85,-119,-113,-115,-109,-112,-114,-117,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'FOR':([38,],[118,]),'PLUS':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,136,-66,-90,-77,-85,-76,-84,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,136,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'LSS':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,152,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),'PRED':([0,1,10,14,15,25,26,35,37,38,41,47,49,54,56,57,67,70,85,89,91,92,93,94,95,96,97,98,101,104,108,111,115,116,122,123,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,186,191,195,196,203,205,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,251,252,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[48,48,48,-5,-6,48,-7,-3,48,48,-8,-4,-2,-14,48,48,48,48,48,48,-152,-157,-156,-151,-155,48,-154,-153,48,48,48,48,-140,48,48,-11,-129,-131,48,-130,-126,-124,-123,-122,48,-125,-118,-110,-111,-116,48,-119,-113,-115,-109,-112,-114,-117,48,48,-9,48,-139,48,48,-10,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-13,-12,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'COLON':([9,11,12,13,17,22,27,30,32,36,44,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,80,81,82,83,84,86,87,90,117,127,134,153,158,161,165,166,187,189,190,212,213,216,217,219,220,222,229,240,259,271,272,277,299,302,309,325,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-141,-59,122,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,-97,-98,-88,-81,-80,-79,-87,-82,-67,196,-138,-132,-133,-202,-191,231,-43,-71,241,-101,-94,-128,-121,-108,260,-201,-190,-73,-68,-91,304,-43,-66,-99,-74,-70,-100,-92,]),'OR':([9,11,12,13,17,22,27,30,36,55,58,59,60,61,62,63,64,65,66,68,71,72,73,74,75,76,77,78,81,82,83,84,86,87,90,127,134,153,158,161,212,213,216,217,220,222,229,240,259,277,302,309,326,],[-62,-64,-58,-189,-61,-63,-60,-188,-59,-127,-120,-65,-83,-134,-89,-136,-78,-86,-135,-137,-107,-66,-90,-77,-85,-76,-84,150,-88,-81,-80,-79,-87,-82,-67,-138,-132,-133,-202,-191,-94,-128,-121,-108,-201,-190,-73,-68,-91,-66,-74,-70,-92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'array_slice':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'result_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'constant_expression':([203,247,],[248,290,]),'action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[5,5,5,5,206,5,5,206,5,5,5,5,5,5,5,5,5,5,5,5,]),'reference_mode':([105,119,126,173,291,307,342,],[168,168,168,168,168,168,168,]),'range_enumeration':([118,],[198,]),'literal':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'mode':([105,119,126,173,291,307,342,],[177,202,211,233,317,330,351,]),'procedure_definition':([122,],[207,]),'relational_operator':([78,],[149,]),'for_control':([38,],[112,]),'arithmetic_multiplicative_operator':([58,216,],[131,131,]),'control_part':([38,],[110,]),'discrete_expression':([245,314,],[285,334,]),'while_control':([38,112,],[113,193,]),'value_array_slice':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'builtin_call':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'newmode_statement':([0,1,322,340,343,344,348,349,352,355,],[15,15,15,15,15,15,15,15,15,15,]),'empty_literal':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'operator1':([78,],[145,]),'string_element':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'declaration_list':([29,],[106,]),'formal_parameter':([253,319,],[293,341,]),'step_enumeration':([118,],[197,]),'location':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[20,20,66,66,66,20,127,66,66,66,66,66,66,66,66,66,66,20,20,66,66,66,66,20,20,20,66,66,66,20,66,20,66,66,66,66,66,66,66,20,66,66,66,66,66,20,66,66,66,66,66,20,20,20,20,20,20,20,20,]),'index_mode_list':([238,],[276,]),'array_primitive_value':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'upper_bound':([231,260,304,],[267,300,328,]),'boolean_expression':([25,67,111,227,254,296,],[102,133,192,263,295,324,]),'start_value':([245,],[286,]),'procedure_statement':([0,1,322,340,343,344,348,349,352,355,],[26,26,26,26,26,26,26,26,26,26,]),'primitive_value':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'array_element':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'character_mode':([105,119,126,173,238,246,284,291,307,308,342,],[170,170,170,170,170,170,170,170,170,170,170,]),'arithmetic_additive_operator':([71,217,],[138,138,]),'procedure_call':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'operand1':([10,25,37,57,67,89,96,101,104,108,111,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[71,71,71,71,71,71,71,71,71,71,71,217,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'right_element':([241,],[282,]),'declaration':([29,185,],[107,239,]),'boolean_mode':([105,119,126,173,238,246,284,291,307,308,342,],[175,175,175,175,175,175,175,175,175,175,175,]),'identifier':([0,1,3,10,21,25,29,37,38,42,56,57,67,70,85,89,96,101,104,105,108,111,116,118,119,122,124,125,126,131,139,145,154,162,173,185,191,196,203,204,215,221,224,227,228,230,231,234,235,237,238,241,243,245,246,247,253,254,256,260,264,284,291,296,304,307,308,312,314,319,322,340,342,343,344,348,349,352,355,],[32,32,53,72,99,72,53,72,32,53,72,72,72,72,72,72,72,72,72,176,72,72,32,200,176,72,53,210,176,72,72,72,72,32,176,53,32,72,72,53,72,72,32,72,32,72,72,72,72,72,277,72,32,72,289,72,53,72,72,72,32,289,176,72,72,176,277,72,72,53,32,32,176,32,32,32,32,32,32,]),'lower_bound':([104,154,234,237,238,308,],[165,219,271,271,271,271,]),'do_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'string_concatenation_operator':([71,217,],[137,137,]),'result_attribute':([351,],[360,]),'parameter_list':([89,101,],[155,160,]),'elsif_expression':([214,],[255,]),'location_name':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'initialization':([177,],[236,]),'integer_expression':([108,241,312,],[187,281,332,]),'conditional_expression':([10,25,37,57,67,89,96,101,104,108,111,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'parameter':([89,101,221,],[157,157,261,]),'discrete_mode':([105,119,126,173,238,246,284,291,307,308,342,],[179,179,179,179,278,288,310,179,179,278,179,]),'operator2':([71,217,],[139,139,]),'literal_range':([234,237,238,308,],[273,275,279,279,]),'else_expression':([214,255,],[257,297,]),'index_mode':([238,308,],[280,331,]),'iteration':([118,],[199,]),'parameter_attribute':([317,],[337,]),'return_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'parenthesized_expression':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'bracketed_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'operand3':([10,25,37,57,67,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[55,55,55,55,55,55,55,55,55,55,55,213,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'declaration_statement':([0,1,322,340,343,344,348,349,352,355,],[47,47,47,47,47,47,47,47,47,47,]),'loop_counter':([118,],[201,]),'then_clause':([102,263,],[163,301,]),'statement_list':([0,322,340,343,348,],[1,344,349,352,355,]),'array_location':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expression_list':([104,154,],[164,218,]),'operand2':([10,25,37,57,67,89,96,101,104,108,111,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[58,58,58,58,58,58,58,58,58,58,58,216,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'call_action':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[7,7,59,59,59,7,59,59,59,59,59,59,59,59,59,59,59,7,7,59,59,59,59,7,7,7,59,59,59,7,59,7,59,59,59,59,59,59,59,7,59,59,59,59,59,7,59,59,59,59,59,7,7,7,7,7,7,7,7,]),'discrete_range_mode':([105,119,126,173,238,246,284,291,307,308,342,],[178,178,178,178,178,178,178,178,178,178,178,]),'string_slice':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'procedure_name':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'parameter_spec':([291,],[316,]),'dereferenced_reference':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'operand4':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[61,61,61,61,61,134,153,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'element_mode':([307,],[329,]),'referenced_location':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'synonym_statement':([0,1,322,340,343,344,348,349,352,355,],[14,14,14,14,14,14,14,14,14,14,]),'identifier_list':([3,29,42,124,185,204,253,319,],[51,105,119,51,105,119,291,291,]),'builtin_name':([0,1,10,25,37,38,56,57,67,70,85,89,96,101,104,108,111,116,122,131,139,145,154,162,191,196,203,215,221,224,227,228,230,231,234,235,237,238,241,243,245,247,254,256,260,264,296,304,308,312,314,322,340,343,344,348,349,352,355,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'string_length':([232,],[270,]),'assigning_operator':([20,],[96,]),'assignment_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'else_clause':([163,301,],[225,327,]),'end_value':([286,313,315,336,],[311,333,335,347,]),'start_element':([108,],[188,]),'string_mode':([105,119,126,173,291,307,342,],[184,184,184,184,184,184,184,]),'membership_operator':([78,],[142,]),'result':([10,37,],[69,109,]),'mode_definition':([3,124,],[52,209,]),'then_expression':([133,295,324,],[214,323,346,]),'synonym_definition':([42,204,],[121,250,]),'composite_mode':([105,119,126,173,291,307,342,],[182,182,182,182,182,182,182,]),'program':([0,],[31,]),'if_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'result_spec':([294,318,],[321,339,]),'left_element':([108,],[189,]),'newmode_list':([3,],[50,]),'step_value':([286,],[315,]),'value_array_element':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'synonym_list':([42,],[120,]),'character_string_literal':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'operand0':([10,25,37,57,67,89,96,101,104,108,111,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'formal_parameter_list':([253,],[292,]),'expression':([10,25,37,57,67,89,96,101,104,108,111,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[79,103,79,128,103,156,159,156,166,190,103,166,249,258,156,103,266,268,272,274,272,272,190,287,249,103,298,268,103,268,272,190,287,]),'exit_action':([0,1,38,116,122,162,191,196,224,228,243,264,322,340,343,344,348,349,352,355,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'action_statement':([0,1,38,116,162,191,224,228,243,264,322,340,343,344,348,349,352,355,],[41,41,115,195,115,115,195,115,195,195,41,41,41,41,41,41,41,41,]),'action_statement_list':([38,162,191,228,],[116,224,243,264,]),'boolean_literal':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'integer_literal':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,232,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,269,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'array_mode':([105,119,126,173,291,307,342,],[181,181,181,181,181,181,181,]),'statement':([0,1,322,340,343,344,348,349,352,355,],[35,49,35,35,35,49,35,49,49,49,]),'empty':([162,228,],[223,265,]),'mode_name':([105,119,126,173,291,307,342,],[174,174,174,174,174,174,174,]),'label_id':([0,1,21,38,116,162,191,224,228,243,264,322,340,343,344,348,349,352,355,],[44,44,100,117,117,117,117,117,117,117,117,44,44,44,44,44,44,44,44,]),'integer_mode':([105,119,126,173,238,246,284,291,307,308,342,],[183,183,183,183,183,183,183,183,183,183,183,]),'character_literal':([10,25,37,57,67,70,85,89,96,101,104,108,111,131,139,145,154,203,215,221,227,230,231,234,235,237,238,241,245,247,254,256,260,296,304,308,312,314,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',59),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',66),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',73),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',74),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',75),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',76),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',77),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyaparser.py',81),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyaparser.py',86),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyaparser.py',91),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyaparser.py',96),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyaparser.py',101),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyaparser.py',105),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',111),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',112),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',119),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',120),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',127),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',133),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',134),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyaparser.py',141),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyaparser.py',142),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',149),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',155),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',156),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',163),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',167),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',168),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',169),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',170),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',174),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',175),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',176),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',177),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',181),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',185),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',189),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',193),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',194),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',198),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',206),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',210),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',214),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',218),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',222),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',223),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyaparser.py',227),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyaparser.py',231),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyaparser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',239),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',240),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',247),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',248),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',252),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',258),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',259),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',266),
  ('location -> location_name','location',1,'p_location','lyaparser.py',272),
  ('location -> dereferenced_reference','location',1,'p_location','lyaparser.py',273),
  ('location -> string_element','location',1,'p_location','lyaparser.py',274),
  ('location -> string_slice','location',1,'p_location','lyaparser.py',275),
  ('location -> array_element','location',1,'p_location','lyaparser.py',276),
  ('location -> array_slice','location',1,'p_location','lyaparser.py',277),
  ('location -> call_action','location',1,'p_location','lyaparser.py',278),
  ('location_name -> identifier','location_name',1,'p_location_name','lyaparser.py',282),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaparser.py',286),
  ('string_element -> identifier LBRACK start_element RBRACK','string_element',4,'p_string_element','lyaparser.py',290),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyaparser.py',294),
  ('string_slice -> identifier LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyaparser.py',298),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyaparser.py',306),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyaparser.py',310),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyaparser.py',314),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyaparser.py',318),
  ('array_location -> location','array_location',1,'p_array_location','lyaparser.py',322),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',328),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',329),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',330),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',331),
  ('literal -> integer_literal','literal',1,'p_literal','lyaparser.py',335),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaparser.py',336),
  ('literal -> character_literal','literal',1,'p_literal','lyaparser.py',337),
  ('literal -> empty_literal','literal',1,'p_literal','lyaparser.py',338),
  ('literal -> character_string_literal','literal',1,'p_literal','lyaparser.py',339),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyaparser.py',343),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaparser.py',347),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaparser.py',348),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyaparser.py',352),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaparser.py',356),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyaparser.py',360),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyaparser.py',366),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyaparser.py',370),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',374),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',380),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',384),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',385),
  ('expression -> operand0','expression',1,'p_expression','lyaparser.py',392),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',393),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',397),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyaparser.py',401),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaparser.py',405),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',409),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',413),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',417),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyaparser.py',421),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',425),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaparser.py',429),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyaparser.py',433),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaparser.py',437),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaparser.py',438),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaparser.py',442),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaparser.py',443),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyaparser.py',444),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyaparser.py',445),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyaparser.py',446),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyaparser.py',447),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyaparser.py',448),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyaparser.py',449),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaparser.py',453),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaparser.py',457),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyaparser.py',461),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaparser.py',465),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaparser.py',466),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',470),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',471),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyaparser.py',475),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaparser.py',479),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyaparser.py',483),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',487),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',488),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',489),
  ('operand3 -> MINUS operand4','operand3',2,'p_operand3_uminus','lyaparser.py',493),
  ('operand3 -> NOT operand4','operand3',2,'p_operand3_monadic','lyaparser.py',497),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaparser.py',501),
  ('operand4 -> location','operand4',1,'p_operand4','lyaparser.py',506),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaparser.py',507),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaparser.py',508),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',512),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',518),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',519),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',526),
  ('action -> bracketed_action','action',1,'p_action','lyaparser.py',530),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',531),
  ('action -> call_action','action',1,'p_action','lyaparser.py',532),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',533),
  ('action -> return_action','action',1,'p_action','lyaparser.py',534),
  ('action -> result_action','action',1,'p_action','lyaparser.py',535),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',539),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',540),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',544),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',549),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',550),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',551),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',552),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',553),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',554),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',555),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyaparser.py',561),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',565),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',569),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyaparser.py',573),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',577),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyaparser.py',581),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyaparser.py',585),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyaparser.py',589),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyaparser.py',593),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyaparser.py',597),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',601),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyaparser.py',605),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyaparser.py',609),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',613),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',614),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',618),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',622),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',623),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyaparser.py',627),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyaparser.py',631),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyaparser.py',635),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',639),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',643),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',647),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaparser.py',651),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',655),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',659),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration_down','lyaparser.py',663),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',667),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',671),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',677),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',678),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyaparser.py',682),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',686),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyaparser.py',690),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaparser.py',691),
  ('parameter -> expression','parameter',1,'p_parameter','lyaparser.py',698),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyaparser.py',702),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyaparser.py',706),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyaparser.py',710),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',714),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaparser.py',718),
  ('result -> expression','result',1,'p_result','lyaparser.py',722),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyaparser.py',726),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',730),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',734),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',735),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',736),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',737),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',738),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',739),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',740),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',741),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyaparser.py',747),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyaparser.py',751),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyaparser.py',755),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyaparser.py',759),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyaparser.py',763),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyaparser.py',767),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyaparser.py',771),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyaparser.py',775),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',779),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',780),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',787),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaparser.py',791),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',792),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaparser.py',799),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','lyaparser.py',803),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaparser.py',807),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaparser.py',811),
  ('empty -> <empty>','empty',0,'p_empty','lyaparser.py',817),
]
