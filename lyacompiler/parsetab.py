
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '11562F538A2AA760108F2850BD1E28FD'
    
_lr_action_items = {'RETURN':([0,2,12,15,18,26,27,29,35,54,69,76,103,134,140,156,157,163,165,166,195,198,199,213,225,229,230,235,236,240,243,],[6,-8,-7,-6,-3,-4,6,-5,-14,6,-2,-11,-10,6,-9,-12,-13,6,6,-125,6,-124,6,6,6,6,6,6,6,6,6,]),'MINUSASSIGN':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,55,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'ASSIGN':([5,7,11,13,14,19,23,31,34,36,39,52,62,104,106,108,109,110,111,113,114,115,116,117,119,120,122,123,126,138,142,151,159,171,207,208,209,217,219,221,222,],[-63,-61,-64,59,-65,-66,-59,-62,-60,-57,78,105,-67,-37,150,-35,-47,-32,-41,-33,-29,-36,-34,-48,-28,-31,-38,-30,-66,173,-58,-46,-68,-74,-40,-49,-39,-70,-75,-56,-51,]),'REF':([23,36,52,72,78,107,142,190,205,227,],[-59,-57,107,107,107,107,-58,107,107,107,]),'RPAREN':([23,43,44,46,48,49,50,79,104,108,109,110,111,113,114,115,116,117,119,120,122,123,144,145,146,151,158,183,187,188,191,201,207,208,209,215,216,221,222,223,224,231,232,237,244,245,],[-59,-91,-114,-123,-94,-120,-107,-119,-37,-35,-47,-32,-41,-33,-29,-36,-34,-48,-28,-31,-38,-30,-95,-108,-115,-46,189,207,209,211,-163,-45,-40,-49,-39,-166,-164,-56,-51,-43,-162,-165,-167,246,-170,249,]),'TYPE':([0,2,12,15,18,26,27,29,35,69,76,103,140,156,157,213,225,229,230,235,236,240,243,],[4,-8,-7,-6,-3,-4,4,-5,-14,-2,-11,-10,-9,-12,-13,4,4,4,4,4,4,4,4,]),'LBRACK':([5,7,11,13,14,19,20,23,24,31,34,62,112,118,126,159,171,217,219,],[-63,-61,-64,-71,-65,-66,65,-59,68,-62,-60,-67,152,154,-66,-68,-74,-70,-75,]),'OR':([43,44,46,48,49,50,79,144,145,146,],[80,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'TIMESASSIGN':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,58,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'LEQ':([43,44,46,48,49,50,79,144,145,146,],[90,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'SYN':([0,2,12,15,18,26,27,29,35,69,76,103,140,156,157,213,225,229,230,235,236,240,243,],[9,-8,-7,-6,-3,-4,9,-5,-14,-2,-11,-10,-9,-12,-13,9,9,9,9,9,9,9,9,]),'THEN':([43,44,46,48,49,50,66,67,79,144,145,146,194,],[-91,-114,-123,-94,-120,-107,134,-93,-119,-95,-108,-115,134,]),'INT':([23,36,52,72,78,107,142,152,190,204,205,227,],[-59,-57,115,115,115,115,-58,115,115,115,115,115,]),'EQUALS':([43,44,46,48,49,50,79,144,145,146,],[82,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'CONCATASSIGN':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,63,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'NOT':([6,16,22,55,56,57,58,59,60,61,63,65,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,150,152,153,155,160,161,169,170,173,204,206,],[45,45,45,-136,-139,-138,-137,-134,-135,45,-140,45,45,-99,-102,-100,-103,-96,-98,-97,-106,-104,45,-105,-101,-109,-112,-110,-113,45,-111,-116,-118,-117,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'GEQ':([43,44,46,48,49,50,79,144,145,146,],[83,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'ICONST':([6,16,22,40,42,45,55,56,57,58,59,60,61,63,65,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,150,152,153,154,155,160,161,169,170,173,204,206,],[46,46,46,-121,46,-122,-136,-139,-138,-137,-134,-135,46,-140,46,46,-99,-102,-100,-103,-96,-98,-97,-106,-104,46,-105,-101,-109,-112,-110,-113,46,-111,-116,-118,-117,46,46,46,46,46,184,46,46,46,46,46,46,46,46,]),'$end':([2,12,15,18,21,26,27,29,35,69,76,103,140,156,157,],[-8,-7,-6,-3,0,-4,-1,-5,-14,-2,-11,-10,-9,-12,-13,]),'PERCASSIGN':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,56,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'CHAR':([23,36,52,72,78,107,142,152,190,204,205,227,],[-59,-57,122,122,122,122,-58,122,122,122,122,122,]),'RESULT':([0,2,12,15,18,26,27,29,35,54,69,76,103,134,140,156,157,163,165,166,195,198,199,213,225,229,230,235,236,240,243,],[16,-8,-7,-6,-3,-4,16,-5,-14,16,-2,-11,-10,16,-9,-12,-13,16,16,-125,16,-124,16,16,16,16,16,16,16,16,16,]),'IN':([43,44,46,48,49,50,79,144,145,146,],[87,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'LOC':([23,104,108,109,110,111,113,114,115,116,117,119,120,122,123,151,207,208,209,215,221,222,237,],[-59,-37,-35,-47,-32,-41,-33,-29,-36,-34,-48,-28,-31,-38,-30,-46,-40,-49,-39,232,-56,-51,244,]),'RBRACK':([43,44,46,48,49,50,79,104,108,110,113,115,116,122,129,130,131,136,137,144,145,146,176,177,178,181,184,185,186,192,193,200,201,202,207,209,220,223,],[-91,-114,-123,-94,-120,-107,-119,-37,-35,-32,-33,-36,-34,-38,-69,159,-92,171,-90,-95,-108,-115,-53,-54,205,-55,-83,208,-50,-73,217,219,-45,-89,-40,-39,-52,-43,]),'CONCAT':([44,46,48,49,50,79,144,145,146,],[-114,-123,95,-120,-107,-119,95,-108,-115,]),'COLON':([10,19,23,43,44,46,48,49,50,79,129,131,132,135,137,144,145,146,168,180,182,],[54,-126,-59,-91,-114,-123,-94,-120,-107,-119,-72,-92,160,169,-44,-95,-108,-115,199,-44,206,]),'ID':([0,2,4,9,12,15,18,23,26,27,29,32,33,35,36,52,54,69,72,75,76,77,78,102,103,107,134,139,140,142,152,156,157,158,163,165,166,190,195,198,199,204,205,210,213,225,227,229,230,235,236,240,243,],[23,-8,23,23,-7,-6,-3,-59,-4,23,-5,23,23,-14,-57,23,23,-2,23,23,-11,23,23,23,-10,23,23,23,-9,-58,23,-12,-13,23,23,23,-125,23,23,-124,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'DIF':([43,44,46,48,49,50,79,144,145,146,],[91,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'GTR':([43,44,46,48,49,50,79,144,145,146,],[81,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'COMMA':([23,36,37,38,39,43,44,46,48,49,50,51,52,53,72,73,74,79,104,108,109,110,111,113,114,115,116,117,119,120,122,123,136,137,138,141,142,143,144,145,146,147,148,149,151,172,174,175,176,177,178,181,188,190,191,201,202,203,207,208,209,215,216,220,221,222,223,224,231,232,],[-59,-57,75,-26,77,-91,-114,-123,-94,-120,-107,102,77,-21,77,139,-16,-119,-37,-35,-47,-32,-41,-33,-29,-36,-34,-48,-28,-31,-38,-30,170,-90,-18,-25,-58,-27,-95,-108,-115,-20,-24,-23,-46,-17,-15,-22,-53,-54,204,-55,210,77,-163,-45,-89,-19,-40,-49,-39,-166,-164,-52,-56,-51,-43,-162,-165,-167,]),'IF':([0,2,12,15,18,26,27,29,35,54,69,76,103,134,140,156,157,163,165,166,195,198,199,213,225,229,230,235,236,240,243,],[22,-8,-7,-6,-3,-4,22,-5,-14,22,-2,-11,-10,22,-9,-12,-13,22,22,-125,22,-124,22,22,22,22,22,22,22,22,22,]),'ARRAY':([23,36,52,72,78,107,142,190,205,227,],[-59,-57,112,112,112,112,-58,112,112,112,]),'BOOL':([23,36,52,72,78,107,142,152,190,204,205,227,],[-59,-57,104,104,104,104,-58,104,104,104,104,104,]),'PROC':([54,],[127,]),'DIVIDEASSIGN':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,57,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'ELSIF':([35,133,134,157,165,166,167,198,218,],[-14,161,-171,-13,-143,-125,-144,-124,161,]),'DIVIDE':([44,46,49,50,79,145,146,],[-114,-123,-120,100,-119,100,-115,]),'LSS':([43,44,46,48,49,50,79,144,145,146,],[88,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'RETURNS':([189,211,],[212,212,]),'MINUS':([6,16,22,44,46,48,49,50,55,56,57,58,59,60,61,63,65,68,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,144,145,146,150,152,153,155,160,161,169,170,173,204,206,],[40,40,40,-114,-123,93,-120,-107,-136,-139,-138,-137,-134,-135,40,-140,40,40,-119,-99,-102,-100,-103,-96,-98,-97,-106,-104,40,-105,-101,-109,-112,-110,-113,40,-111,-116,-118,-117,40,40,93,-108,-115,40,40,40,40,40,40,40,40,40,40,40,]),'FI':([35,133,134,157,163,164,165,166,167,195,196,198,218,233,],[-14,162,-171,-13,-171,197,-143,-125,-144,-145,-146,-124,-148,-147,]),'END':([2,12,15,18,26,29,35,69,76,103,140,156,157,213,225,229,230,235,236,240,243,],[-8,-7,-6,-3,-4,-5,-14,-2,-11,-10,-9,-12,-13,228,234,238,239,241,242,247,248,]),'PLUSASSIGN':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,60,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'TIMES':([44,46,49,50,79,145,146,],[-114,-123,-120,98,-119,98,-115,]),'CHARS':([23,36,52,72,78,107,142,190,205,227,],[-59,-57,118,118,118,118,-58,118,118,118,]),'ELSE':([35,133,134,157,165,166,167,198,218,],[-14,163,-171,-13,-143,-125,-144,-124,163,]),'AND':([43,44,46,48,49,50,79,144,145,146,],[85,-114,-123,-94,-120,-107,-119,-95,-108,-115,]),'PERC':([44,46,49,50,79,145,146,],[-114,-123,-120,99,-119,99,-115,]),'LPAREN':([23,104,108,110,111,113,114,115,116,121,122,127,177,179,207,209,212,],[-59,-37,-35,-32,-42,-33,153,-36,-34,155,-38,158,153,-42,-40,-39,227,]),'EXIT':([0,2,12,15,18,26,27,29,35,54,69,76,103,134,140,156,157,163,165,166,195,198,199,213,225,229,230,235,236,240,243,],[32,-8,-7,-6,-3,-4,32,-5,-14,32,-2,-11,-10,32,-9,-12,-13,32,32,-125,32,-124,32,32,32,32,32,32,32,32,32,]),'PLUS':([44,46,48,49,50,79,144,145,146,],[-114,-123,97,-120,-107,-119,97,-108,-115,]),'SEMICOL':([1,3,6,8,17,23,25,28,30,37,38,41,43,44,46,47,48,49,50,51,53,64,70,71,73,74,79,104,108,109,110,111,113,114,115,116,117,119,120,122,123,124,125,128,138,141,143,144,145,146,147,148,149,151,162,172,174,175,189,197,203,207,208,209,211,214,221,222,226,228,234,238,239,241,242,246,247,248,249,],[35,-127,-151,-128,-130,-59,-129,-131,-132,76,-26,-150,-91,-114,-123,-153,-94,-120,-107,103,-21,-152,-126,-149,140,-16,-119,-37,-35,-47,-32,-41,-33,-29,-36,-34,-48,-28,-31,-38,-30,156,157,-133,-18,-25,-27,-95,-108,-115,-20,-24,-23,-46,-142,-17,-15,-22,213,-141,-19,-40,-49,-39,225,230,-56,-51,236,-161,-158,-160,-159,-156,-155,-169,-157,-154,-168,]),'ARROW':([5,7,11,13,14,19,23,31,34,62,126,159,171,217,219,],[-63,-61,-64,62,-65,-66,-59,-62,-60,-67,-66,-68,-74,-70,-75,]),'DCL':([0,2,12,15,18,26,27,29,35,69,76,103,140,156,157,213,225,229,230,235,236,240,243,],[33,-8,-7,-6,-3,-4,33,-5,-14,-2,-11,-10,-9,-12,-13,33,33,33,33,33,33,33,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'action_statement_list':([134,163,],[165,195,]),'action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[1,1,125,1,1,1,1,125,1,1,1,1,1,1,1,1,]),'action_statement':([0,27,134,163,165,195,213,225,229,230,235,236,240,243,],[2,2,166,166,198,198,2,2,2,2,2,2,2,2,]),'bracketed_action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'element_mode':([205,],[222,]),'operand3':([6,16,22,61,65,68,89,96,101,105,150,152,153,155,160,161,169,170,173,204,206,],[44,44,44,44,44,44,44,44,146,44,44,44,44,44,44,44,44,44,44,44,44,]),'string_slice':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'discrete_range_mode':([52,72,78,107,152,190,204,205,227,],[108,108,108,108,108,108,108,108,108,]),'operator2':([48,144,],[96,96,]),'integer_expression':([65,160,],[129,192,]),'integer_mode':([52,72,78,107,152,190,204,205,227,],[110,110,110,110,110,110,110,110,110,]),'assignment_action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'result':([6,16,],[41,64,]),'label_id':([0,27,32,134,163,165,195,213,225,229,230,235,236,240,243,],[10,10,71,168,168,168,168,10,10,10,10,10,10,10,10,]),'else_clause':([133,218,],[164,233,]),'boolean_mode':([52,72,78,107,152,190,204,205,227,],[113,113,113,113,113,113,113,113,113,]),'monadic_operator':([6,16,22,61,65,68,89,96,101,105,150,152,153,155,160,161,169,170,173,204,206,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'procedure_statement':([0,27,213,225,229,230,235,236,240,243,],[12,12,12,12,12,12,12,12,12,12,]),'index_mode_list':([152,],[178,]),'result_spec':([189,211,],[214,226,]),'upper_bound':([169,206,],[200,223,]),'array_slice':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'newmode_statement':([0,27,213,225,229,230,235,236,240,243,],[15,15,15,15,15,15,15,15,15,15,]),'dereferenced_reference':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'operator1':([43,],[89,]),'return_action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string_location':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'mode':([52,72,78,107,190,205,227,],[106,138,143,151,215,221,237,]),'program':([0,],[21,]),'index_mode':([152,204,],[176,220,]),'arithmetic_additive_operator':([48,144,],[92,92,]),'string_mode':([52,72,78,107,190,205,227,],[109,109,109,109,109,109,109,]),'composite_mode':([52,72,78,107,190,205,227,],[120,120,120,120,120,120,120,]),'operand2':([6,16,22,61,65,68,89,96,105,150,152,153,155,160,161,169,170,173,204,206,],[50,50,50,50,50,50,50,145,50,50,50,50,50,50,50,50,50,50,50,50,]),'discrete_mode':([52,72,78,107,152,190,204,205,227,],[114,114,114,114,177,114,177,114,114,]),'exit_action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'boolean_expression':([22,161,],[66,194,]),'formal_parameter_list':([158,],[188,]),'string_concatenation_operator':([48,144,],[94,94,]),'declaration_statement':([0,27,213,225,229,230,235,236,240,243,],[26,26,26,26,26,26,26,26,26,26,]),'parameter_attribute':([215,],[231,]),'initialization':([138,],[172,]),'synonym_statement':([0,27,213,225,229,230,235,236,240,243,],[29,29,29,29,29,29,29,29,29,29,]),'string_length':([154,],[185,]),'identifier_list':([4,9,33,75,102,139,158,210,],[39,52,72,39,52,72,190,190,]),'declaration':([33,139,],[74,174,]),'reference_mode':([52,72,78,107,190,205,227,],[123,123,123,123,123,123,123,]),'procedure_definition':([54,],[124,]),'start_element':([65,],[130,]),'newmode_list':([4,],[37,]),'synonym_definition':([9,102,],[53,147,]),'then_clause':([66,194,],[133,218,]),'empty':([134,163,],[167,196,]),'operand4':([6,16,22,42,61,65,68,89,96,101,105,150,152,153,155,160,161,169,170,173,204,206,],[49,49,49,79,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'discrete_mode_name':([52,72,78,107,152,190,204,205,227,],[121,121,121,121,121,121,121,121,121,]),'integer_literal':([154,],[186,]),'synonym_list':([9,],[51,]),'array_element':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'formal_parameter':([158,210,],[191,224,]),'location':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'string_element':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'operand0':([6,16,22,61,65,68,105,150,152,153,155,160,161,169,170,173,204,206,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'mode_name':([52,72,78,107,190,205,227,],[119,119,119,119,119,119,119,]),'literal_range':([152,153,155,204,],[181,183,187,181,]),'mode_definition':([4,75,],[38,141,]),'constant_expression':([105,150,],[149,175,]),'statement':([0,27,213,225,229,230,235,236,240,243,],[18,69,18,18,69,18,69,18,69,69,]),'identifier':([0,4,9,27,32,33,52,54,72,75,77,78,102,107,134,139,152,158,163,165,190,195,199,204,205,210,213,225,227,229,230,235,236,240,243,],[19,36,36,19,70,36,111,126,111,36,142,111,36,111,19,36,179,36,19,19,111,19,126,179,111,36,19,19,111,19,19,19,19,19,19,]),'right_element':([160,],[193,]),'assigning_operator':([13,],[61,]),'expression_list':([68,],[136,]),'operand1':([6,16,22,61,65,68,89,105,150,152,153,155,160,161,169,170,173,204,206,],[48,48,48,48,48,48,144,48,48,48,48,48,48,48,48,48,48,48,48,]),'parameter_spec':([190,],[216,]),'result_attribute':([237,],[245,]),'character_mode':([52,72,78,107,152,190,204,205,227,],[116,116,116,116,116,116,116,116,116,]),'left_element':([65,],[132,]),'array_location':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array_mode':([52,72,78,107,190,205,227,],[117,117,117,117,117,117,117,]),'statement_list':([0,213,225,230,236,],[27,229,235,240,243,]),'arithmetic_multiplicative_operator':([50,145,],[101,101,]),'result_action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'if_action':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'relational_operator':([43,],[84,]),'expression':([6,16,22,61,65,68,105,150,152,153,155,160,161,169,170,173,204,206,],[47,47,67,128,131,137,148,148,180,180,180,131,67,201,202,203,180,201,]),'membership_operator':([43,],[86,]),'lower_bound':([68,152,153,155,204,],[135,182,182,182,182,]),'declaration_list':([33,],[73,]),'location_name':([0,27,54,134,163,165,195,199,213,225,229,230,235,236,240,243,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',68),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',69),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',74),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',82),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','parser.py',86),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','parser.py',90),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','parser.py',94),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',100),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',101),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',108),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',109),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',120),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',126),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',127),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',134),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',135),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',146),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',152),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',153),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',160),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',164),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',165),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',166),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',167),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',171),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',172),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',173),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',174),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',178),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',182),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',186),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',191),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',195),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',199),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',203),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',207),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',211),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',215),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','parser.py',219),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','parser.py',220),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','parser.py',224),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',228),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','parser.py',232),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',237),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',244),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',245),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',255),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',256),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',263),
  ('location -> location_name','location',1,'p_location','parser.py',269),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',270),
  ('location -> string_element','location',1,'p_location','parser.py',271),
  ('location -> string_slice','location',1,'p_location','parser.py',272),
  ('location -> array_element','location',1,'p_location','parser.py',273),
  ('location -> array_slice','location',1,'p_location','parser.py',274),
  ('location_name -> identifier','location_name',1,'p_location_name','parser.py',279),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',283),
  ('string_element -> string_location LBRACK start_element RBRACK','string_element',4,'p_string_element','parser.py',287),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',291),
  ('string_slice -> string_location LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','parser.py',295),
  ('string_location -> location','string_location',1,'p_string_location','parser.py',299),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',303),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',307),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','parser.py',311),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','parser.py',315),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',319),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',325),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',332),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',333),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',334),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',335),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',336),
  ('integer_literal -> ICONST','integer_literal',1,'p_intger_literal','parser.py',340),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',344),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',345),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',349),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',353),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','parser.py',357),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',363),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',364),
  ('expression -> operand0','expression',1,'p_expression','parser.py',371),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',383),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',387),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',407),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',411),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',415),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',416),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',420),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',421),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',422),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',423),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',424),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',425),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',426),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',427),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',431),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',435),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',439),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',443),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',444),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',448),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',449),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',453),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',457),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',461),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',465),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',466),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',467),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',471),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',475),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',480),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',481),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',485),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',496),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',497),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',504),
  ('action -> bracketed_action','action',1,'p_action','parser.py',508),
  ('action -> assignment_action','action',1,'p_action','parser.py',509),
  ('action -> exit_action','action',1,'p_action','parser.py',510),
  ('action -> return_action','action',1,'p_action','parser.py',511),
  ('action -> result_action','action',1,'p_action','parser.py',512),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',518),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',523),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',528),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',529),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',530),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',531),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',532),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',533),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',534),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','parser.py',540),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',544),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',548),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','parser.py',552),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',556),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','parser.py',560),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','parser.py',564),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','parser.py',568),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',602),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','parser.py',606),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',610),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',614),
  ('result -> expression','result',1,'p_result','parser.py',618),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','parser.py',636),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','parser.py',640),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','parser.py',644),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','parser.py',648),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','parser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','parser.py',656),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','parser.py',660),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','parser.py',664),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',668),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',669),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',676),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',680),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',681),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',688),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','parser.py',692),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',696),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',700),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',706),
]
