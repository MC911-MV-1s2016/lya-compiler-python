
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '52F7D4465BEDCAB5C64673D41101FEFB'
    
_lr_action_items = {'BOOL':([12,16,19,25,47,52,61,64,84,131,132,141,],[-56,-54,30,30,30,30,30,-55,30,30,30,30,]),'LSS':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,116,-82,-73,-78,-60,]),'PERC':([74,76,77,78,120,135,136,],[104,-77,-83,-86,-82,104,-78,]),'GEQ':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,117,-82,-73,-78,-60,]),'NOT':([55,60,61,63,67,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,129,131,],[73,73,73,73,73,73,-76,73,-74,-75,-81,-80,73,-79,-70,-64,-63,-67,-66,-61,-71,-65,-69,-68,73,-62,73,73,]),'RETURNS':([83,127,],[124,124,]),'RBRACK':([30,33,36,37,39,42,46,71,74,76,77,78,79,90,91,93,94,96,97,98,120,130,134,135,136,137,147,148,149,],[-34,-32,-29,-31,-33,-30,-35,-59,-72,-77,-83,-86,-58,-50,-52,132,-51,-47,-57,133,-82,-36,-37,-73,-78,-60,-42,-40,-49,]),'LBRACK':([38,48,],[61,66,]),'PROC':([15,],[27,]),'DIF':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,112,-82,-73,-78,-60,]),'DIVIDE':([74,76,77,78,120,135,136,],[105,-77,-83,-86,-82,105,-78,]),'REF':([12,16,19,25,47,52,64,84,132,141,],[-56,-54,47,47,47,47,-55,47,47,47,]),'AND':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,110,-82,-73,-78,-60,]),'COMMA':([12,16,17,18,19,20,21,22,23,24,25,30,32,33,34,35,36,37,39,40,41,42,43,44,46,49,59,62,64,65,68,69,70,71,72,74,76,77,78,79,80,84,85,86,90,91,93,94,95,120,121,125,126,130,133,134,135,136,137,142,143,146,147,148,149,150,151,],[-56,-54,28,-13,45,50,45,-23,-18,53,45,-34,-25,-32,-44,-27,-29,-31,-33,-28,-15,-30,-45,-38,-35,-26,-12,-14,-55,-43,-22,-24,-17,-59,-21,-72,-77,-83,-86,-58,-20,45,128,-97,-50,-52,131,-51,-16,-82,-19,-98,-100,-36,-46,-37,-73,-78,-60,-101,-99,-96,-42,-40,-49,-48,-53,]),'ICONST':([55,60,61,63,66,67,73,75,81,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,129,131,],[78,78,78,78,97,78,-85,-84,78,78,-76,78,-74,-75,-81,-80,78,-79,-70,-64,-63,-67,-66,-61,-71,-65,-69,-68,78,-62,78,78,]),'OR':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,109,-82,-73,-78,-60,]),'COLON':([2,5,12,71,74,76,77,78,79,87,88,120,135,136,137,],[-87,15,-56,-59,-72,-77,-83,-86,-58,129,-41,-82,-73,-78,-60,]),'ID':([0,1,3,6,7,8,9,10,11,12,13,14,16,19,25,28,29,45,47,50,51,52,53,54,57,58,61,64,84,123,128,131,132,138,139,141,145,152,156,157,163,],[12,-3,12,-6,12,12,-7,-5,-4,-56,12,-2,-54,12,12,12,-8,12,12,12,-10,12,12,-9,-11,12,12,-55,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'$end':([1,3,4,6,9,10,11,14,29,51,54,57,],[-3,-1,0,-6,-7,-5,-4,-2,-8,-10,-9,-11,]),'TIMES':([74,76,77,78,120,135,136,],[107,-77,-83,-86,-82,107,-78,]),'ARRAY':([12,16,19,25,47,52,64,84,132,141,],[-56,-54,38,38,38,38,-55,38,38,38,]),'ASSIGN':([12,16,21,25,30,32,33,34,35,36,37,39,40,41,42,43,44,46,49,56,64,65,130,133,134,150,151,],[-56,-54,52,55,-34,-25,-32,-44,-27,-29,-31,-33,-28,63,-30,-45,-38,-35,-26,82,-55,-43,-36,-46,-37,-48,-53,]),'IN':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,114,-82,-73,-78,-60,]),'SYN':([0,1,3,6,9,10,11,14,29,51,54,57,123,138,139,145,152,156,157,163,],[13,-3,13,-6,-7,-5,-4,-2,-8,-10,-9,-11,13,13,13,13,13,13,13,13,]),'LOC':([12,30,32,33,34,35,36,37,39,40,42,43,44,46,49,65,126,130,133,134,150,151,155,],[-56,-34,-25,-32,-44,-27,-29,-31,-33,-28,-30,-45,-38,-35,-26,-43,142,-36,-46,-37,-48,-53,162,]),'LEQ':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,108,-82,-73,-78,-60,]),'RPAREN':([12,30,32,33,34,35,36,37,39,40,42,43,44,46,49,58,65,71,74,76,77,78,79,85,86,89,99,120,125,126,130,133,134,135,136,137,142,143,146,147,148,150,151,155,160,162,],[-56,-34,-25,-32,-44,-27,-29,-31,-33,-28,-30,-45,-38,-35,-26,83,-43,-59,-72,-77,-83,-86,-58,127,-97,130,134,-82,-98,-100,-36,-46,-37,-73,-78,-60,-101,-99,-96,-42,-40,-48,-53,161,166,-104,]),'LPAREN':([12,27,30,31,33,36,37,39,42,44,46,49,92,94,124,130,134,],[-56,58,-34,60,-32,-29,-31,-33,-30,-39,-35,67,-39,67,141,-36,-37,]),'CHARS':([12,16,19,25,47,52,64,84,132,141,],[-56,-54,48,48,48,48,-55,48,48,48,]),'DCL':([0,1,3,6,9,10,11,14,29,51,54,57,123,138,139,145,152,156,157,163,],[7,-3,7,-6,-7,-5,-4,-2,-8,-10,-9,-11,7,7,7,7,7,7,7,7,]),'INT':([12,16,19,25,47,52,61,64,84,131,132,141,],[-56,-54,39,39,39,39,39,-55,39,39,39,39,]),'MINUS':([55,60,61,63,67,71,74,76,77,78,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,129,131,135,136,137,],[75,75,75,75,75,100,-72,-77,-83,-86,75,-76,75,-74,-75,-81,-80,75,-79,-70,-64,-63,-67,-66,-61,-71,-65,-69,-68,75,-62,-82,75,75,-73,-78,100,]),'EQUALS':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,115,-82,-73,-78,-60,]),'CHAR':([12,16,19,25,47,52,61,64,84,131,132,141,],[-56,-54,46,46,46,46,46,-55,46,46,46,46,]),'GTR':([71,74,76,77,78,79,120,135,136,137,],[-59,-72,-77,-83,-86,111,-82,-73,-78,-60,]),'TYPE':([0,1,3,6,9,10,11,14,29,51,54,57,123,138,139,145,152,156,157,163,],[8,-3,8,-6,-7,-5,-4,-2,-8,-10,-9,-11,8,8,8,8,8,8,8,8,]),'PLUS':([71,74,76,77,78,120,135,136,137,],[103,-72,-77,-83,-86,-82,-73,-78,103,]),'END':([1,6,9,10,11,14,29,51,54,57,123,138,139,145,152,156,157,163,],[-3,-6,-7,-5,-4,-2,-8,-10,-9,-11,140,153,154,158,159,164,165,167,]),'SEMICOL':([12,17,18,20,22,23,24,26,30,32,33,34,35,36,37,39,40,41,42,43,44,46,49,59,62,65,68,69,70,71,72,74,76,77,78,79,80,83,95,120,121,122,127,130,133,134,135,136,137,140,144,150,151,153,154,158,159,161,164,165,166,167,],[-56,29,-13,51,-23,-18,54,57,-34,-25,-32,-44,-27,-29,-31,-33,-28,-15,-30,-45,-38,-35,-26,-12,-14,-43,-22,-24,-17,-59,-21,-72,-77,-83,-86,-58,-20,123,-16,-82,-19,138,145,-36,-46,-37,-73,-78,-60,-95,156,-48,-53,-93,-94,-92,-91,-103,-89,-90,-102,-88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initialization':([41,],[62,]),'parameter_attribute':([126,],[143,]),'operator2':([71,137,],[101,101,]),'result_spec':([83,127,],[122,144,]),'declaration':([7,28,],[18,59,]),'parameter_spec':([84,],[125,]),'identifier_list':([7,8,13,28,50,53,58,128,],[19,21,25,19,21,25,84,84,]),'mode_name':([19,25,47,52,84,132,141,],[32,32,32,32,32,32,32,]),'discrete_range_mode':([19,25,47,52,61,84,131,132,141,],[33,33,33,33,33,33,33,33,33,]),'operand4':([55,60,61,63,67,81,82,101,106,118,129,131,],[77,77,77,77,77,120,77,77,77,77,77,77,]),'mode_definition':([8,50,],[22,68,]),'statement_list':([0,123,138,145,156,],[3,139,152,157,163,]),'arithmetic_multiplicative_operator':([74,135,],[106,106,]),'constant_expression':([55,82,],[80,121,]),'lower_bound':([60,61,67,131,],[87,87,87,87,]),'formal_parameter_list':([58,],[85,]),'procedure_definition':([15,],[26,]),'operand1':([55,60,61,63,67,82,118,129,131,],[71,71,71,71,71,71,137,71,71,]),'composite_mode':([19,25,47,52,84,132,141,],[40,40,40,40,40,40,40,]),'expression':([55,60,61,63,67,82,129,131,],[72,88,88,95,88,72,147,88,]),'newmode_list':([8,],[20,]),'boolean_mode':([19,25,47,52,61,84,131,132,141,],[42,42,42,42,42,42,42,42,42,]),'newmode_statement':([0,3,123,138,139,145,152,156,157,163,],[6,6,6,6,6,6,6,6,6,6,]),'identifier':([0,3,7,8,13,19,25,28,45,47,50,52,53,58,61,84,123,128,131,132,138,139,141,145,152,156,157,163,],[2,2,16,16,16,44,44,16,64,44,16,44,16,16,92,44,2,16,92,44,2,2,44,2,2,2,2,2,]),'declaration_statement':([0,3,123,138,139,145,152,156,157,163,],[11,11,11,11,11,11,11,11,11,11,]),'membership_operator':([79,],[119,]),'discrete_mode':([19,25,47,52,61,84,131,132,141,],[49,49,49,49,94,49,94,49,49,]),'label_id':([0,3,123,138,139,145,152,156,157,163,],[5,5,5,5,5,5,5,5,5,5,]),'declaration_list':([7,],[17,]),'index_mode':([61,131,],[90,149,]),'element_mode':([132,],[150,]),'discrete_mode_name':([19,25,47,52,61,84,131,132,141,],[31,31,31,31,31,31,31,31,31,]),'statement':([0,3,123,138,139,145,152,156,157,163,],[1,14,1,1,14,1,14,1,14,14,]),'literal_range':([60,61,67,131,],[89,91,99,91,]),'relational_operator':([79,],[113,]),'string_mode':([19,25,47,52,84,132,141,],[34,34,34,34,34,34,34,]),'reference_mode':([19,25,47,52,84,132,141,],[35,35,35,35,35,35,35,]),'integer_mode':([19,25,47,52,61,84,131,132,141,],[36,36,36,36,36,36,36,36,36,]),'character_mode':([19,25,47,52,61,84,131,132,141,],[37,37,37,37,37,37,37,37,37,]),'synonym_list':([13,],[24,]),'monadic_operator':([55,60,61,63,67,82,101,106,118,129,131,],[81,81,81,81,81,81,81,81,81,81,81,]),'synonym_definition':([13,53,],[23,70,]),'result_attribute':([155,],[160,]),'mode':([19,25,47,52,84,132,141,],[41,56,65,69,126,151,155,]),'upper_bound':([129,],[148,]),'program':([0,],[4,]),'arithmetic_additive_operator':([71,137,],[102,102,]),'operand2':([55,60,61,63,67,82,101,118,129,131,],[74,74,74,74,74,74,135,74,74,74,]),'array_mode':([19,25,47,52,84,132,141,],[43,43,43,43,43,43,43,]),'integer_literal':([66,],[96,]),'operand3':([55,60,61,63,67,82,101,106,118,129,131,],[76,76,76,76,76,76,76,136,76,76,76,]),'formal_parameter':([58,128,],[86,146,]),'procedure_statement':([0,3,123,138,139,145,152,156,157,163,],[9,9,9,9,9,9,9,9,9,9,]),'synonym_statement':([0,3,123,138,139,145,152,156,157,163,],[10,10,10,10,10,10,10,10,10,10,]),'operator1':([79,],[118,]),'index_mode_list':([61,],[93,]),'string_length':([66,],[98,]),'operand0':([55,60,61,63,67,82,129,131,],[79,79,79,79,79,79,79,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',68),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',74),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',82),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','parser.py',86),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',93),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',100),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',101),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',112),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',118),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',126),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',127),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',138),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',144),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',145),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',152),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',156),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',157),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',158),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',159),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',163),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',164),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',165),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',166),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',170),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',174),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',178),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',182),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',183),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',187),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',191),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',195),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',199),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',203),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',207),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','parser.py',212),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','parser.py',216),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',220),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','parser.py',224),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',228),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',236),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',237),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',241),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',247),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',248),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',255),
  ('integer_literal -> ICONST','integer_literal',1,'p_intger_literal','parser.py',261),
  ('expression -> operand0','expression',1,'p_expression','parser.py',267),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',299),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',303),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',307),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',308),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',312),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',313),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',314),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',315),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',316),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',317),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',318),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',319),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',323),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',327),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',331),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',335),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',340),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',341),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',349),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',353),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',357),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',358),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',359),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',363),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',367),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',372),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',373),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',377),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',388),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','parser.py',394),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','parser.py',398),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','parser.py',402),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','parser.py',406),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','parser.py',410),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','parser.py',414),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','parser.py',418),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','parser.py',422),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',426),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',427),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',434),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',438),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',439),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',446),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','parser.py',450),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',454),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',458),
]
