/* Compute the fatorial of an integer */

fat: proc (n int) returns (int);
  if n==0 then
    return 1;
  else
    return n * fat (n-1);
  fi;
end;

dcl x int;
print("give-me a positive integer:");
read(x);
print("fatorial of ", x, " = ", fat(x));

0:	('stp',)        # Start program
1:	('alc', 1)      # Alloc mem
2:	('jmp', 3)      # JMP3 factorial procedure End Label
3:	('lbl', 1)      # LBL1 factorial procedure Start Label
4:	('enf', 1)      # Entering factorial procedure (1 argument)
5:	('ldv', 1, -3)  # n -> mem
6:	('ldc', 0)      # 0 -> mem
7:	('equ',)        # n == 0?
8:	('jof', 4)      # JOF4 Jump to else
9:	('ldc', 1)      # 1 -> mem
10:	('stv', 1, -4)  # ret <- mem
11:	('jmp', 2)      # JMP2 factorial procedure Return Label
12:	('jmp', 5)      # JMP5???
13:	('lbl', 4)      # LBL4 else Label
14:	('ldv', 1, -3)  # n -> mem
15:	('mul',)
16:	('stv', 1, -4)
17:	('jmp', 2)
18:	('lbl', 5)
19:	('lbl', 2)      # LB2 factorial procedure Return Label
20:	('ret', 1, 1)
21:	('lbl', 3)
22:	('prc', 0)
23:	('rdv',)
24:	('stv', 0, 0)
25:	('prc', 1)
26:	('ldv', 0, 0)
27:	('prv',)
28:	('prc', 2)
29:	('alc', 1)
30:	('ldv', 0, 0)
31:	('cfu', 1)
32:	('prv',)
33:	('dlc', 1)
34:	('end',)
