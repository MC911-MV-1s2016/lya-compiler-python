
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\x96\xba\x9a\xa0\x91V8\xe3\x028\xf3\x13\xed\x08\xfb\xb8'
    
_lr_action_items = {'BOOL':([47,61,62,70,145,170,217,219,274,301,302,330,],[-59,-57,135,135,135,135,-58,135,135,135,135,135,]),'LOWER':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[1,1,-5,-6,-3,-7,1,1,1,-4,1,-8,1,1,-156,-161,-160,-158,-157,-155,-159,1,1,-2,1,1,-138,1,1,-137,1,1,-14,1,1,-144,-9,1,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,1,-113,-117,-131,-133,1,-132,1,1,-125,-128,-124,-126,-127,-143,1,1,1,1,1,1,1,1,1,-12,-13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'NUM':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[2,2,-5,-6,-3,-7,2,2,2,-4,2,-8,2,2,-156,-161,-160,-158,-157,-155,-159,2,2,-2,2,2,-138,2,2,-137,2,2,-14,2,2,-144,-9,2,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,2,-113,-117,-131,-133,2,-132,2,2,-125,-128,-124,-126,-127,-143,2,2,2,2,2,2,2,2,2,-12,-13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'DIF':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,172,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'LENGTH':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[3,3,-5,-6,-3,-7,3,3,3,-4,3,-8,3,3,-156,-161,-160,-158,-157,-155,-159,3,3,-2,3,3,-138,3,3,-137,3,3,-14,3,3,-144,-9,3,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,3,-113,-117,-131,-133,3,-132,3,3,-125,-128,-124,-126,-127,-143,3,3,3,3,3,3,3,3,3,-12,-13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'LSS':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,175,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'ELSIF':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,110,120,132,156,195,197,198,200,210,211,212,214,225,227,229,238,239,242,243,245,251,252,280,282,284,298,312,318,325,339,341,342,356,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-14,-144,-195,-206,-142,-82,-134,-143,-232,255,-69,-194,-205,-13,-75,-110,-130,-123,-96,285,-164,-165,-93,-105,315,-71,-76,-101,255,-94,-102,-108,-107,]),'ASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,61,70,73,85,132,134,135,136,137,138,139,140,141,143,144,148,149,150,152,153,156,165,206,209,212,214,217,218,225,229,298,299,303,304,312,327,328,],[58,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-57,164,170,-67,-195,-36,-37,-38,-28,-29,-48,-35,-47,-33,-41,221,-30,-31,-32,-34,-206,234,-184,250,-69,-194,-58,-46,-205,-75,-71,-40,-49,-39,-76,-51,-56,]),'GEQ':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,173,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'SYN':([0,16,21,26,30,32,40,48,66,110,154,167,169,226,227,307,331,332,337,350,353,354,362,],[31,31,-5,-6,-3,-7,-4,-8,-2,-14,-9,-10,-11,-12,-13,31,31,31,31,31,31,31,31,]),'DCL':([0,16,21,26,30,32,40,48,66,110,154,167,169,226,227,307,331,332,337,350,353,354,362,],[7,7,-5,-6,-3,-7,-4,-8,-2,-14,-9,-10,-11,-12,-13,7,7,7,7,7,7,7,7,]),'PERC':([8,10,11,19,22,27,33,47,49,53,75,76,78,79,80,81,83,84,85,86,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-86,-91,-139,184,-66,-140,-67,-82,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-130,184,-96,-67,-93,-71,-76,-94,]),'RBRACK':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,125,126,127,132,134,135,136,140,143,152,153,156,161,162,195,197,198,212,214,225,229,238,239,240,242,243,257,258,263,264,266,267,268,269,276,277,278,280,298,299,304,312,313,318,326,329,339,341,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,212,-70,-103,-195,-36,-37,-38,-35,-33,-32,-34,-206,-98,229,-142,-82,-134,-69,-194,-205,-75,-110,-130,280,-123,-96,-74,298,-54,301,-55,-53,-50,303,-97,312,-45,-93,-71,-40,-39,-76,339,-101,-43,-52,-94,-102,]),'REF':([47,61,62,70,145,170,217,274,301,330,],[-59,-57,145,145,145,145,-58,145,145,145,]),'TO':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,127,132,156,195,197,198,212,214,225,229,238,239,242,243,280,291,292,293,298,312,318,321,323,339,341,344,347,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-103,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-93,322,-188,-185,-71,-76,-101,322,322,-94,-102,322,-186,]),'MINUSASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,85,132,156,212,214,225,229,298,312,],[57,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-67,-195,-206,-69,-194,-205,-75,-71,-76,]),'CHAR':([47,61,62,70,145,170,217,219,274,301,302,330,],[-59,-57,136,136,136,136,-58,136,136,136,136,136,]),'AND':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,181,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'PRED':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[15,15,-5,-6,-3,-7,15,15,15,-4,15,-8,15,15,-156,-161,-160,-158,-157,-155,-159,15,15,-2,15,15,-138,15,15,-137,15,15,-14,15,15,-144,-9,15,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,15,-113,-117,-131,-133,15,-132,15,15,-125,-128,-124,-126,-127,-143,15,15,15,15,15,15,15,15,15,-12,-13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'WHILE':([8,10,11,19,22,27,33,39,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,114,132,156,195,197,198,205,207,208,212,214,225,229,238,239,242,243,280,288,289,292,298,312,318,319,320,339,341,343,345,346,357,],[-62,-63,-60,-192,-193,-61,-65,117,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,117,-195,-206,-142,-82,-134,-177,-178,-179,-69,-194,-205,-75,-110,-130,-123,-96,-93,-42,-190,-188,-71,-76,-101,-189,-183,-94,-102,-181,-187,-182,-180,]),'IN':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,206,209,212,214,225,229,238,239,242,243,249,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,171,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-184,248,-69,-194,-205,-75,-110,-130,-123,-96,290,-67,-93,-71,-76,-94,]),'CONCATASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,85,132,156,212,214,225,229,298,312,],[54,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-67,-195,-206,-69,-194,-205,-75,-71,-76,]),'DO':([0,16,21,26,30,32,39,40,48,66,67,110,112,120,154,167,169,200,202,203,210,226,227,246,251,253,294,307,331,332,337,350,353,354,362,],[39,39,-5,-6,-3,-7,39,-4,-8,-2,39,-14,39,-144,-9,-10,-11,-143,39,39,39,-12,-13,39,39,39,39,39,39,39,39,39,39,39,39,]),'COMMA':([8,10,11,19,22,27,33,47,49,53,61,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,150,152,153,156,157,161,162,195,197,198,212,214,217,218,222,224,225,229,232,233,235,236,237,238,239,240,242,243,259,263,264,266,267,270,273,274,275,276,278,279,280,298,299,303,304,308,309,312,318,326,327,328,329,334,335,338,339,341,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-57,142,155,-16,-21,142,166,168,142,-26,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-197,-198,-195,215,-36,-37,-38,-28,-29,-48,-35,-47,-33,-41,-18,-30,-31,-32,-34,-206,215,-98,230,-142,-82,-134,-69,-194,-58,-46,-17,-15,-205,-75,-24,-23,-20,-25,-27,-110,-130,230,-123,-96,-196,-54,302,-55,-53,-19,-224,142,311,-97,-45,-22,-93,-71,-40,-49,-39,-225,-227,-76,-101,-43,-51,-56,-52,-226,-228,-223,-94,-102,]),'SEMICOL':([8,9,10,11,13,17,19,22,24,25,27,29,33,36,37,41,46,47,49,53,63,64,69,71,72,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,95,96,98,99,101,102,103,104,106,107,108,111,113,114,115,118,121,122,123,129,132,134,135,136,137,138,139,140,141,143,144,148,149,150,152,153,156,158,159,195,197,198,199,201,204,205,207,208,212,214,218,222,224,225,229,232,233,235,236,237,238,239,242,243,247,256,270,272,279,280,287,288,289,292,296,298,299,303,304,306,310,312,318,319,320,327,328,333,336,339,341,343,345,346,351,352,355,357,358,361,363,364,365,366,],[-62,-152,-63,-60,-148,-153,-192,-193,-151,-150,-61,-149,-65,-202,110,-146,-147,-59,-64,-68,154,-16,-21,167,169,-26,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-204,-141,-89,-81,-90,-84,-78,-80,-79,-201,-92,-88,-87,-100,-129,-203,-175,-176,202,-173,-145,-200,-104,-154,-195,-36,-37,-38,-28,-29,-48,-35,-47,-33,-41,-18,-30,-31,-32,-34,-206,226,227,-142,-82,-134,-172,-174,-191,-177,-178,-179,-69,-194,-46,-17,-15,-205,-75,-24,-23,-20,-25,-27,-110,-130,-123,-96,-171,-163,-19,307,-22,-93,-170,-42,-190,-188,-162,-71,-40,-49,-39,331,337,-76,-101,-189,-183,-51,-56,-222,353,-94,-102,-181,-187,-182,-220,-221,-219,-180,-230,-218,-216,-217,-229,-215,]),'FI':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,110,120,132,156,195,197,198,200,210,211,212,214,225,227,229,238,239,242,243,251,252,253,254,280,286,294,295,298,312,314,316,318,325,339,341,348,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-14,-144,-195,-206,-142,-82,-134,-143,-232,256,-69,-194,-205,-13,-75,-110,-130,-123,-96,-164,-165,-232,296,-93,318,-166,-167,-71,-76,-106,341,-101,-169,-94,-102,-168,]),'TIMESASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,85,132,156,212,214,225,229,298,312,],[56,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-67,-195,-206,-69,-194,-205,-75,-71,-76,]),'DIVIDE':([8,10,11,19,22,27,33,47,49,53,75,76,78,79,80,81,83,84,85,86,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-86,-91,-139,186,-66,-140,-67,-82,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-130,186,-96,-67,-93,-71,-76,-94,]),'OR':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,177,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'ELSE':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,110,120,132,156,195,197,198,200,210,211,212,214,225,227,229,238,239,242,243,245,251,252,280,282,284,298,312,318,325,339,341,342,356,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-14,-144,-195,-206,-142,-82,-134,-143,-232,253,-69,-194,-205,-13,-75,-110,-130,-123,-96,283,-164,-165,-93,-105,283,-71,-76,-101,253,-94,-102,-108,-107,]),'COLON':([8,10,11,18,19,20,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,116,126,127,128,132,156,161,163,195,197,198,212,214,225,229,238,239,241,242,243,260,262,265,280,298,312,318,339,341,],[-62,-63,-60,-145,-192,67,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,203,-73,-103,213,-195,-206,-44,231,-142,-82,-134,-69,-194,-205,-75,-110,-130,281,-123,-96,-44,300,-67,-93,-71,-76,-101,-94,-102,]),'TRUE':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,93,94,100,105,109,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[91,91,91,91,91,-156,-161,-160,-158,-157,-155,-159,91,91,91,-138,91,-137,91,91,91,91,-121,-116,-118,-120,-119,-112,-114,-115,-111,91,-113,-117,-131,-133,91,-132,91,91,-125,-128,-124,-126,-127,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'EQUALS':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,178,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'NOT':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,94,105,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[93,93,93,93,93,-156,-161,-160,-158,-157,-155,-159,93,93,93,93,93,93,93,-121,-116,-118,-120,-119,-112,-114,-115,-111,93,-113,-117,-131,-133,93,-132,93,93,-125,-128,-124,-126,-127,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'LPAREN':([1,2,3,6,12,14,15,18,28,34,36,38,43,45,47,50,51,52,54,55,56,57,58,59,60,65,68,85,93,94,100,105,109,117,134,135,136,138,140,143,144,151,152,153,160,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,263,265,281,283,285,299,300,302,304,305,315,322,324,],[-211,-207,-212,60,-214,65,-208,-199,-209,-213,94,94,-210,94,-59,94,94,-156,-161,-160,-158,-157,-155,-159,94,94,94,-199,-138,94,-137,94,94,94,-36,-37,-38,216,-35,-33,-42,223,-32,-34,228,94,-121,-116,-118,-120,-119,-112,-114,-115,-111,94,-113,-117,-131,-133,94,-132,94,94,-125,-128,-124,-126,-127,94,94,94,94,94,94,94,94,94,94,94,94,216,-42,94,94,94,-40,94,94,-39,330,94,94,94,]),'GTR':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,182,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'NULL':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,93,94,100,105,109,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[79,79,79,79,79,-156,-161,-160,-158,-157,-155,-159,79,79,79,-138,79,-137,79,79,79,79,-121,-116,-118,-120,-119,-112,-114,-115,-111,79,-113,-117,-131,-133,79,-132,79,79,-125,-128,-124,-126,-127,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'INT':([47,61,62,70,145,170,217,219,274,301,302,330,],[-59,-57,134,134,134,134,-58,134,134,134,134,134,]),'PLUSASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,85,132,156,212,214,225,229,298,312,],[52,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-67,-195,-206,-69,-194,-205,-75,-71,-76,]),'ARROW':([5,8,10,11,13,18,19,22,27,33,36,38,45,47,49,50,51,52,53,54,55,56,57,58,59,60,65,68,80,83,85,93,94,100,105,109,117,132,156,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,212,213,214,215,216,219,221,223,225,229,230,231,234,244,250,255,265,281,283,285,298,300,302,312,315,322,324,],[53,-62,-63,-60,-66,-67,-192,-193,-61,-65,97,97,97,-59,-64,97,97,-156,-68,-161,-160,-158,-157,-155,-159,97,97,97,53,-66,-67,-138,97,-137,97,97,97,-195,-206,97,-121,-116,-118,-120,-119,-112,-114,-115,-111,97,-113,-117,-131,-133,97,-132,97,97,-125,-128,-124,-126,-127,53,-69,97,-194,97,97,97,97,97,-205,-75,97,97,97,97,97,97,-67,97,97,97,-71,97,97,-76,97,97,97,]),'RPAREN':([8,10,11,19,22,27,33,47,49,53,60,65,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,130,131,132,133,134,135,136,137,138,139,140,141,143,144,149,150,152,153,156,157,194,195,197,198,212,214,218,225,228,229,238,239,242,243,259,261,271,273,275,278,280,298,299,303,304,308,309,312,318,326,327,328,334,335,338,339,341,349,359,360,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,132,156,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-197,-198,-195,214,-36,-37,-38,-28,-29,-48,-35,-47,-33,-41,-30,-31,-32,-34,-206,225,243,-142,-82,-134,-69,-194,-46,-205,272,-75,-110,-130,-123,-96,-196,299,304,-224,310,-45,-93,-71,-40,-49,-39,-225,-227,-76,-101,-43,-51,-56,-226,-228,-223,-94,-102,358,-231,365,]),'LOC':([47,134,135,136,137,138,139,140,141,143,144,149,150,152,153,218,299,303,304,309,327,328,349,],[-59,-36,-37,-38,-28,-29,-48,-35,-47,-33,-41,-30,-31,-32,-34,-46,-40,-49,-39,335,-51,-56,359,]),'RETURNS':([272,310,],[305,305,]),'PERCASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,85,132,156,212,214,225,229,298,312,],[55,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-67,-195,-206,-69,-194,-205,-75,-71,-76,]),'OD':([39,110,112,120,200,202,227,246,],[118,-14,199,-144,-143,247,-13,287,]),'$end':([16,21,26,30,32,40,42,48,66,110,154,167,169,226,227,],[-1,-5,-6,-3,-7,-4,0,-8,-2,-14,-9,-10,-11,-12,-13,]),'LBRACK':([4,5,8,10,11,13,18,19,22,23,27,33,47,49,53,75,76,78,79,80,82,83,85,86,90,91,92,95,96,98,99,101,103,104,106,132,146,147,156,195,197,212,214,225,229,243,265,280,298,312,339,],[50,-72,-62,-63,-60,-66,-67,-192,-193,68,-61,-65,-59,-64,-68,-85,-83,-86,-91,-72,187,-66,-67,-82,-95,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-195,219,220,-206,-72,-82,-69,-194,-205,-75,-96,-67,-93,-71,-76,-94,]),'END':([21,26,30,32,40,48,66,110,154,167,169,226,227,307,331,332,337,350,353,354,362,],[-5,-6,-3,-7,-4,-8,-2,-14,-9,-10,-11,-12,-13,333,351,352,355,361,363,364,366,]),'MINUS':([8,10,11,19,22,27,33,36,38,45,47,49,50,51,52,53,54,55,56,57,58,59,60,65,68,75,76,78,79,80,81,83,84,85,86,87,88,90,91,92,94,95,96,98,99,101,103,104,105,106,108,117,132,156,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,197,198,212,213,214,215,216,219,221,223,225,229,230,231,234,238,239,242,243,244,250,255,265,280,281,283,285,298,300,302,312,315,322,324,339,],[-62,-63,-60,-192,-193,-61,-65,100,100,100,-59,-64,100,100,-156,-68,-161,-160,-158,-157,-155,-159,100,100,100,-85,-83,-86,-91,-139,-122,-66,-140,-67,-82,193,-135,-141,-89,-81,100,-90,-84,-78,-80,-79,-92,-88,100,-87,-129,100,-195,-206,100,-121,-116,-118,-120,-119,-112,-114,-115,-111,100,-113,-117,-131,-133,100,-132,100,100,-125,-128,-124,-126,-127,-142,-82,-134,-69,100,-194,100,100,100,100,100,-205,-75,100,100,100,193,-130,-123,-96,100,100,100,-67,-93,100,100,100,-71,100,100,-76,100,100,100,-94,]),'SCONST':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,93,94,100,105,109,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[103,103,103,103,103,-156,-161,-160,-158,-157,-155,-159,103,103,103,-138,103,-137,103,103,103,103,-121,-116,-118,-120,-119,-112,-114,-115,-111,103,-113,-117,-131,-133,103,-132,103,103,-125,-128,-124,-126,-127,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'DIVIDEASSIGN':([5,8,10,11,13,18,19,22,27,33,47,49,53,85,132,156,212,214,225,229,298,312,],[59,-62,-63,-60,-66,-67,-192,-193,-61,-65,-59,-64,-68,-67,-195,-206,-69,-194,-205,-75,-71,-76,]),'READ':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[34,34,-5,-6,-3,-7,34,34,34,-4,34,-8,34,34,-156,-161,-160,-158,-157,-155,-159,34,34,-2,34,34,-138,34,34,-137,34,34,-14,34,34,-144,-9,34,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,34,-113,-117,-131,-133,34,-132,34,34,-125,-128,-124,-126,-127,-143,34,34,34,34,34,34,34,34,34,-12,-13,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TYPE':([0,16,21,26,30,32,40,48,66,110,154,167,169,226,227,307,331,332,337,350,353,354,362,],[35,35,-5,-6,-3,-7,-4,-8,-2,-14,-9,-10,-11,-12,-13,35,35,35,35,35,35,35,35,]),'RETURN':([0,16,21,26,30,32,39,40,48,66,67,110,112,120,154,167,169,200,202,203,210,226,227,246,251,253,294,307,331,332,337,350,353,354,362,],[36,36,-5,-6,-3,-7,36,-4,-8,-2,36,-14,36,-144,-9,-10,-11,-143,36,36,36,-12,-13,36,36,36,36,36,36,36,36,36,36,36,36,]),'RESULT':([0,16,21,26,30,32,39,40,48,66,67,110,112,120,154,167,169,200,202,203,210,226,227,246,251,253,294,307,331,332,337,350,353,354,362,],[38,38,-5,-6,-3,-7,38,-4,-8,-2,38,-14,38,-144,-9,-10,-11,-143,38,38,38,-12,-13,38,38,38,38,38,38,38,38,38,38,38,38,]),'CCONST':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,93,94,100,105,109,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[95,95,95,95,95,-156,-161,-160,-158,-157,-155,-159,95,95,95,-138,95,-137,95,95,95,95,-121,-116,-118,-120,-119,-112,-114,-115,-111,95,-113,-117,-131,-133,95,-132,95,95,-125,-128,-124,-126,-127,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'SUCC':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[28,28,-5,-6,-3,-7,28,28,28,-4,28,-8,28,28,-156,-161,-160,-158,-157,-155,-159,28,28,-2,28,28,-138,28,28,-137,28,28,-14,28,28,-144,-9,28,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,28,-113,-117,-131,-133,28,-132,28,28,-125,-128,-124,-126,-127,-143,28,28,28,28,28,28,28,28,28,-12,-13,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FOR':([39,],[119,]),'THEN':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,123,124,132,156,195,196,197,198,212,214,225,229,238,239,242,243,280,297,298,312,317,318,339,340,341,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-104,210,-195,-206,-142,244,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-93,210,-71,-76,244,-101,-94,244,-102,]),'PROC':([67,],[160,]),'FALSE':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,93,94,100,105,109,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[104,104,104,104,104,-156,-161,-160,-158,-157,-155,-159,104,104,104,-138,104,-137,104,104,104,104,-121,-116,-118,-120,-119,-112,-114,-115,-111,104,-113,-117,-131,-133,104,-132,104,104,-125,-128,-124,-126,-127,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'LEQ':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,174,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-67,-93,-71,-76,-94,]),'UPPER':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[43,43,-5,-6,-3,-7,43,43,43,-4,43,-8,43,43,-156,-161,-160,-158,-157,-155,-159,43,43,-2,43,43,-138,43,43,-137,43,43,-14,43,43,-144,-9,43,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,43,-113,-117,-131,-133,43,-132,43,43,-125,-128,-124,-126,-127,-143,43,43,43,43,43,43,43,43,43,-12,-13,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'EXIT':([0,16,21,26,30,32,39,40,48,66,67,110,112,120,154,167,169,200,202,203,210,226,227,246,251,253,294,307,331,332,337,350,353,354,362,],[44,44,-5,-6,-3,-7,44,-4,-8,-2,44,-14,44,-144,-9,-10,-11,-143,44,44,44,-12,-13,44,44,44,44,44,44,44,44,44,44,44,44,]),'CONCAT':([8,10,11,19,22,27,33,47,49,53,75,76,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-86,-91,-139,-122,-66,-140,-67,-82,190,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,190,-130,-123,-96,-67,-93,-71,-76,-94,]),'CHARS':([47,61,62,70,145,170,217,274,301,330,],[-59,-57,147,147,147,147,-58,147,147,147,]),'IF':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,94,105,110,112,117,120,154,164,167,169,187,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[45,45,-5,-6,-3,-7,105,105,45,-4,105,-8,105,105,-156,-161,-160,-158,-157,-155,-159,105,105,-2,45,105,105,105,-14,45,105,-144,-9,105,-10,-11,105,-143,45,45,45,105,105,105,105,105,105,-12,-13,105,105,105,105,45,105,45,45,105,105,105,105,45,105,105,45,105,105,105,45,45,45,45,45,45,45,]),'ICONST':([36,38,45,50,51,52,54,55,56,57,58,59,60,65,68,93,94,100,105,109,117,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,219,220,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[106,106,106,106,106,-156,-161,-160,-158,-157,-155,-159,106,106,106,-138,106,-137,106,106,106,106,-121,-116,-118,-120,-119,-112,-114,-115,-111,106,-113,-117,-131,-133,106,-132,106,106,-125,-128,-124,-126,-127,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'PRINT':([0,16,21,26,30,32,36,38,39,40,45,48,50,51,52,54,55,56,57,58,59,60,65,66,67,68,93,94,97,100,105,109,110,112,117,120,154,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,219,221,223,226,227,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[12,12,-5,-6,-3,-7,12,12,12,-4,12,-8,12,12,-156,-161,-160,-158,-157,-155,-159,12,12,-2,12,12,-138,12,12,-137,12,12,-14,12,12,-144,-9,12,-10,-11,-121,-116,-118,-120,-119,-112,-114,-115,-111,12,-113,-117,-131,-133,12,-132,12,12,-125,-128,-124,-126,-127,-143,12,12,12,12,12,12,12,12,12,-12,-13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'TIMES':([8,10,11,19,22,27,33,47,49,53,75,76,78,79,80,81,83,84,85,86,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-86,-91,-139,183,-66,-140,-67,-82,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-130,183,-96,-67,-93,-71,-76,-94,]),'ID':([0,7,16,21,26,30,31,32,35,36,38,39,40,44,45,47,48,50,51,52,54,55,56,57,58,59,60,61,62,65,66,67,68,70,93,94,97,100,105,109,110,112,117,119,120,142,145,154,155,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,202,203,210,213,215,216,217,219,221,223,226,227,228,230,231,234,244,246,248,250,251,253,255,274,281,283,285,290,294,300,301,302,307,311,315,322,324,330,331,332,337,350,353,354,362,],[47,47,47,-5,-6,-3,47,-7,47,47,47,47,-4,47,47,-59,-8,47,47,-156,-161,-160,-158,-157,-155,-159,47,-57,47,47,-2,47,47,47,-138,47,47,-137,47,47,-14,47,47,47,-144,47,47,-9,47,47,47,-10,47,-11,47,-121,-116,-118,-120,-119,-112,-114,-115,-111,47,-113,-117,-131,-133,47,-132,47,47,-125,-128,-124,-126,-127,-143,47,47,47,47,47,47,-58,47,47,47,-12,-13,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ARRAY':([47,61,62,70,145,170,217,274,301,330,],[-59,-57,146,146,146,146,-58,146,146,146,]),'PLUS':([8,10,11,19,22,27,33,47,49,53,75,76,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,108,132,156,195,197,198,212,214,225,229,238,239,242,243,265,280,298,312,339,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-86,-91,-139,-122,-66,-140,-67,-82,192,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,192,-130,-123,-96,-67,-93,-71,-76,-94,]),'DOWN':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,127,132,156,195,197,198,206,209,212,214,225,229,238,239,242,243,280,291,292,293,298,312,318,321,339,341,347,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-103,-195,-206,-142,-82,-134,-184,249,-69,-194,-205,-75,-110,-130,-123,-96,-93,323,-188,-185,-71,-76,-101,344,-94,-102,-186,]),'BY':([8,10,11,19,22,27,33,47,49,53,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,95,96,98,99,101,103,104,106,107,108,132,156,195,197,198,212,214,225,229,238,239,242,243,280,291,292,293,298,312,318,339,341,],[-62,-63,-60,-192,-193,-61,-65,-59,-64,-68,-85,-83,-99,-86,-91,-139,-122,-66,-140,-67,-82,-109,-135,-141,-89,-81,-90,-84,-78,-80,-79,-92,-88,-87,-100,-129,-195,-206,-142,-82,-134,-69,-194,-205,-75,-110,-130,-123,-96,-93,324,-188,-185,-71,-76,-101,-94,-102,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_concatenation_operator':([87,238,],[189,189,]),'arithmetic_additive_operator':([87,238,],[191,191,]),'character_string_literal':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'string_location':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'location':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[5,5,80,80,5,80,80,80,80,80,5,80,80,195,80,80,5,80,80,80,80,80,80,5,5,5,80,80,80,80,80,80,80,80,80,80,5,80,5,5,80,80,80,80,5,80,80,5,80,80,80,5,5,5,5,5,5,5,]),'procedure_name':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'upper_bound':([231,281,300,],[277,313,326,]),'string_element':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'if_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'string_slice':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'location_name':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'end_value':([291,321,323,344,],[320,343,346,357,]),'step_value':([291,],[321,]),'call_action':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[13,13,83,83,13,83,83,83,83,83,13,83,83,83,83,83,13,83,83,83,83,83,83,13,13,13,83,83,83,83,83,83,83,83,83,83,13,83,13,13,83,83,83,83,13,83,83,13,83,83,83,13,13,13,13,13,13,13,]),'result_spec':([272,310,],[306,336,]),'elsif_expression':([245,],[284,]),'loop_counter':([119,],[209,]),'statement_list':([0,307,331,337,353,],[16,332,350,354,362,]),'assigning_operator':([5,],[51,]),'identifier':([0,7,16,31,35,36,38,39,44,45,50,51,60,62,65,67,68,70,94,97,105,109,112,117,119,142,145,155,164,166,168,170,180,185,187,188,202,203,210,213,215,216,219,221,223,228,230,231,234,244,246,248,250,251,253,255,274,281,283,285,290,294,300,301,302,307,311,315,322,324,330,331,332,337,350,353,354,362,],[18,61,18,61,61,85,85,18,121,85,85,85,85,144,85,85,85,144,85,85,85,85,18,85,206,217,144,61,85,61,61,144,85,85,85,85,18,85,18,85,85,85,265,85,85,61,85,85,85,85,18,288,85,18,18,85,144,85,85,85,288,18,85,144,265,18,61,85,85,85,144,18,18,18,18,18,18,18,]),'label_id':([0,16,39,44,112,202,210,246,251,253,294,307,331,332,337,350,353,354,362,],[20,20,116,122,116,116,116,116,116,116,116,20,20,20,20,20,20,20,20,]),'range_enumeration':([119,],[207,]),'builtin_call':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'mode_name':([62,70,145,170,274,301,330,],[137,137,137,137,137,137,137,]),'operand1':([36,38,45,50,51,60,65,68,94,105,117,164,180,187,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[87,87,87,87,87,87,87,87,87,87,87,87,238,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'membership_operator':([77,],[176,]),'return_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'composite_mode':([62,70,145,170,274,301,330,],[150,150,150,150,150,150,150,]),'literal_range':([216,219,223,302,],[261,266,271,266,]),'parenthesized_expression':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'string_length':([220,],[269,]),'character_mode':([62,70,145,170,219,274,301,302,330,],[153,153,153,153,153,153,153,153,153,]),'relational_operator':([77,],[179,]),'parameter_spec':([274,],[308,]),'formal_parameter':([228,311,],[273,338,]),'literal':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'statement':([0,16,307,331,332,337,350,353,354,362,],[30,66,30,30,66,30,66,30,66,66,]),'else_expression':([245,284,],[286,316,]),'operator2':([87,238,],[188,188,]),'newmode_statement':([0,16,307,331,332,337,350,353,354,362,],[26,26,26,26,26,26,26,26,26,26,]),'procedure_statement':([0,16,307,331,332,337,350,353,354,362,],[32,32,32,32,32,32,32,32,32,32,]),'discrete_range_mode':([62,70,145,170,219,274,301,302,330,],[140,140,140,140,140,140,140,140,140,]),'boolean_expression':([45,105,117,255,285,315,],[124,196,204,297,317,340,]),'boolean_literal':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'operator1':([77,],[180,]),'parameter_list':([60,65,],[133,157,]),'formal_parameter_list':([228,],[275,]),'discrete_mode':([62,70,145,170,219,274,301,302,330,],[138,138,138,138,263,138,138,263,138,]),'bracketed_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'else_clause':([211,325,],[254,348,]),'array_mode':([62,70,145,170,274,301,330,],[139,139,139,139,139,139,139,]),'element_mode':([301,],[327,]),'parameter_attribute':([309,],[334,]),'result':([36,38,],[102,111,]),'left_element':([50,],[128,]),'operand2':([36,38,45,50,51,60,65,68,94,105,117,164,180,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,242,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'step_enumeration':([119,],[208,]),'lower_bound':([68,187,216,219,223,302,],[163,241,262,262,262,262,]),'conditional_expression':([36,38,45,50,51,60,65,68,94,105,117,164,187,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'array_element':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'monadic_operator':([36,38,45,50,51,60,65,68,94,105,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'action_statement_list':([39,202,210,253,],[112,246,251,294,]),'empty_literal':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operand0':([36,38,45,50,51,60,65,68,94,105,117,164,187,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'operand3':([36,38,45,50,51,60,65,68,94,105,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[108,108,108,108,108,108,108,108,108,108,108,108,108,239,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'array_slice':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'dereferenced_reference':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'while_control':([39,114,],[113,201,]),'start_value':([250,],[291,]),'result_attribute':([349,],[360,]),'index_mode_list':([219,],[264,]),'array_primitive_value':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'procedure_definition':([67,],[158,]),'declaration_list':([7,],[63,]),'string_mode':([62,70,145,170,274,301,330,],[141,141,141,141,141,141,141,]),'builtin_name':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'start_element':([50,],[125,]),'mode_definition':([35,168,],[74,236,]),'exit_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'do_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'integer_expression':([50,213,324,],[126,257,347,]),'procedure_call':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'parameter':([60,65,215,],[130,130,259,]),'synonym_statement':([0,16,307,331,332,337,350,353,354,362,],[21,21,21,21,21,21,21,21,21,21,]),'right_element':([213,],[258,]),'synonym_list':([31,],[71,]),'array_location':([0,16,36,38,39,45,50,51,60,65,67,68,94,97,105,109,112,117,164,180,185,187,188,202,203,210,213,215,216,219,221,223,230,231,234,244,246,250,251,253,255,281,283,285,294,300,302,307,315,322,324,331,332,337,350,353,354,362,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'result_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'operand4':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[88,88,88,88,88,88,88,88,88,88,198,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'expression':([36,38,45,50,51,60,65,68,94,105,117,164,187,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[89,89,123,127,129,131,131,161,194,123,123,232,161,127,131,260,260,270,260,276,278,232,282,292,123,278,314,123,278,260,123,292,127,]),'discrete_mode_name':([62,70,145,170,219,248,274,290,301,302,330,],[151,151,151,151,151,289,151,319,151,151,151,]),'for_control':([39,],[114,]),'then_expression':([196,317,340,],[245,342,356,]),'integer_mode':([62,70,145,170,219,274,301,302,330,],[152,152,152,152,152,152,152,152,152,]),'declaration':([7,155,],[64,224,]),'expression_list':([68,187,],[162,240,]),'character_literal':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'iteration':([119,],[205,]),'control_part':([39,],[115,]),'identifier_list':([7,31,35,155,166,168,228,311,],[62,70,73,62,70,73,274,274,]),'constant_expression':([164,234,],[233,279,]),'then_clause':([124,297,],[211,325,]),'arithmetic_multiplicative_operator':([81,242,],[185,185,]),'value_array_slice':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'reference_mode':([62,70,145,170,274,301,330,],[149,149,149,149,149,149,149,]),'newmode_list':([35,],[72,]),'index_mode':([219,302,],[267,329,]),'action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[37,37,37,159,37,37,159,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'value_array_element':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'integer_literal':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,220,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[86,86,86,86,86,86,86,86,86,86,197,86,86,86,86,86,86,86,86,86,86,268,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'declaration_statement':([0,16,307,331,332,337,350,353,354,362,],[40,40,40,40,40,40,40,40,40,40,]),'program':([0,],[42,]),'empty':([210,253,],[252,295,]),'synonym_definition':([31,166,],[69,235,]),'primitive_value':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'initialization':([148,],[222,]),'assignment_action':([0,16,39,67,112,202,203,210,246,251,253,294,307,331,332,337,350,353,354,362,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'discrete_expression':([250,322,],[293,345,]),'referenced_location':([36,38,45,50,51,60,65,68,94,105,109,117,164,180,185,187,188,213,215,216,219,221,223,230,231,234,244,250,255,281,283,285,300,302,315,322,324,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'action_statement':([0,16,39,112,202,210,246,251,253,294,307,331,332,337,350,353,354,362,],[48,48,120,200,120,120,200,200,120,200,48,48,48,48,48,48,48,48,]),'boolean_mode':([62,70,145,170,219,274,301,302,330,],[143,143,143,143,143,143,143,143,143,]),'mode':([62,70,145,170,274,301,330,],[148,165,218,237,309,328,349,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyacompiler/lyaparser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyacompiler/lyaparser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyacompiler/lyaparser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','lyacompiler/lyaparser.py',65),
  ('statement -> synonym_statement','statement',1,'p_statement','lyacompiler/lyaparser.py',66),
  ('statement -> newmode_statement','statement',1,'p_statement','lyacompiler/lyaparser.py',67),
  ('statement -> procedure_statement','statement',1,'p_statement','lyacompiler/lyaparser.py',68),
  ('statement -> action_statement','statement',1,'p_statement','lyacompiler/lyaparser.py',69),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyacompiler/lyaparser.py',73),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyacompiler/lyaparser.py',78),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyacompiler/lyaparser.py',83),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyacompiler/lyaparser.py',88),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyacompiler/lyaparser.py',93),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyacompiler/lyaparser.py',97),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyacompiler/lyaparser.py',103),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyacompiler/lyaparser.py',104),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyacompiler/lyaparser.py',111),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyacompiler/lyaparser.py',112),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyacompiler/lyaparser.py',119),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyacompiler/lyaparser.py',125),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyacompiler/lyaparser.py',126),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyacompiler/lyaparser.py',133),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyacompiler/lyaparser.py',134),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyacompiler/lyaparser.py',141),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyacompiler/lyaparser.py',147),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyacompiler/lyaparser.py',148),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyacompiler/lyaparser.py',155),
  ('mode -> mode_name','mode',1,'p_mode','lyacompiler/lyaparser.py',159),
  ('mode -> discrete_mode','mode',1,'p_mode','lyacompiler/lyaparser.py',160),
  ('mode -> reference_mode','mode',1,'p_mode','lyacompiler/lyaparser.py',161),
  ('mode -> composite_mode','mode',1,'p_mode','lyacompiler/lyaparser.py',162),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyacompiler/lyaparser.py',166),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyacompiler/lyaparser.py',167),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyacompiler/lyaparser.py',168),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyacompiler/lyaparser.py',169),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyacompiler/lyaparser.py',173),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyacompiler/lyaparser.py',177),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyacompiler/lyaparser.py',181),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyacompiler/lyaparser.py',185),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyacompiler/lyaparser.py',186),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyacompiler/lyaparser.py',190),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyacompiler/lyaparser.py',194),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyacompiler/lyaparser.py',198),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyacompiler/lyaparser.py',202),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyacompiler/lyaparser.py',206),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyacompiler/lyaparser.py',210),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyacompiler/lyaparser.py',214),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyacompiler/lyaparser.py',215),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyacompiler/lyaparser.py',219),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyacompiler/lyaparser.py',223),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyacompiler/lyaparser.py',227),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyacompiler/lyaparser.py',231),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyacompiler/lyaparser.py',232),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyacompiler/lyaparser.py',239),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyacompiler/lyaparser.py',240),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyacompiler/lyaparser.py',244),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyacompiler/lyaparser.py',250),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyacompiler/lyaparser.py',251),
  ('identifier -> ID','identifier',1,'p_identifier','lyacompiler/lyaparser.py',258),
  ('location -> location_name','location',1,'p_location','lyacompiler/lyaparser.py',264),
  ('location -> dereferenced_reference','location',1,'p_location','lyacompiler/lyaparser.py',265),
  ('location -> string_element','location',1,'p_location','lyacompiler/lyaparser.py',266),
  ('location -> string_slice','location',1,'p_location','lyacompiler/lyaparser.py',267),
  ('location -> array_element','location',1,'p_location','lyacompiler/lyaparser.py',268),
  ('location -> array_slice','location',1,'p_location','lyacompiler/lyaparser.py',269),
  ('location -> call_action','location',1,'p_location','lyacompiler/lyaparser.py',270),
  ('location_name -> identifier','location_name',1,'p_location_name','lyacompiler/lyaparser.py',274),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyacompiler/lyaparser.py',278),
  ('string_element -> string_location LBRACK start_element RBRACK','string_element',4,'p_string_element','lyacompiler/lyaparser.py',282),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyacompiler/lyaparser.py',286),
  ('string_slice -> string_location LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyacompiler/lyaparser.py',290),
  ('string_location -> location','string_location',1,'p_string_location','lyacompiler/lyaparser.py',294),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyacompiler/lyaparser.py',298),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyacompiler/lyaparser.py',302),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyacompiler/lyaparser.py',306),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyacompiler/lyaparser.py',310),
  ('array_location -> location','array_location',1,'p_array_location','lyacompiler/lyaparser.py',314),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyacompiler/lyaparser.py',320),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyacompiler/lyaparser.py',321),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyacompiler/lyaparser.py',322),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyacompiler/lyaparser.py',323),
  ('literal -> integer_literal','literal',1,'p_literal','lyacompiler/lyaparser.py',327),
  ('literal -> boolean_literal','literal',1,'p_literal','lyacompiler/lyaparser.py',328),
  ('literal -> character_literal','literal',1,'p_literal','lyacompiler/lyaparser.py',329),
  ('literal -> empty_literal','literal',1,'p_literal','lyacompiler/lyaparser.py',330),
  ('literal -> character_string_literal','literal',1,'p_literal','lyacompiler/lyaparser.py',331),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyacompiler/lyaparser.py',335),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyacompiler/lyaparser.py',339),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyacompiler/lyaparser.py',340),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyacompiler/lyaparser.py',344),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyacompiler/lyaparser.py',348),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyacompiler/lyaparser.py',352),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyacompiler/lyaparser.py',358),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyacompiler/lyaparser.py',362),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyacompiler/lyaparser.py',366),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyacompiler/lyaparser.py',372),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyacompiler/lyaparser.py',376),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyacompiler/lyaparser.py',377),
  ('expression -> operand0','expression',1,'p_expression','lyacompiler/lyaparser.py',384),
  ('expression -> conditional_expression','expression',1,'p_expression','lyacompiler/lyaparser.py',385),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyacompiler/lyaparser.py',389),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyacompiler/lyaparser.py',393),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyacompiler/lyaparser.py',397),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyacompiler/lyaparser.py',401),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyacompiler/lyaparser.py',405),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyacompiler/lyaparser.py',409),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyacompiler/lyaparser.py',413),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyacompiler/lyaparser.py',417),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyacompiler/lyaparser.py',421),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyacompiler/lyaparser.py',425),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyacompiler/lyaparser.py',429),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyacompiler/lyaparser.py',430),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',434),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',435),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',436),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',437),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',438),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',439),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',440),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyacompiler/lyaparser.py',441),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyacompiler/lyaparser.py',445),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyacompiler/lyaparser.py',449),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyacompiler/lyaparser.py',453),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyacompiler/lyaparser.py',457),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyacompiler/lyaparser.py',458),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyacompiler/lyaparser.py',462),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyacompiler/lyaparser.py',463),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyacompiler/lyaparser.py',467),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyacompiler/lyaparser.py',471),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyacompiler/lyaparser.py',475),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyacompiler/lyaparser.py',479),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyacompiler/lyaparser.py',480),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyacompiler/lyaparser.py',481),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','lyacompiler/lyaparser.py',485),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyacompiler/lyaparser.py',489),
  ('operand3 -> integer_literal','operand3',1,'p_operand3','lyacompiler/lyaparser.py',490),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyacompiler/lyaparser.py',494),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyacompiler/lyaparser.py',495),
  ('operand4 -> location','operand4',1,'p_operand4','lyacompiler/lyaparser.py',499),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyacompiler/lyaparser.py',500),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyacompiler/lyaparser.py',501),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyacompiler/lyaparser.py',505),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyacompiler/lyaparser.py',511),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyacompiler/lyaparser.py',512),
  ('label_id -> identifier','label_id',1,'p_label_id','lyacompiler/lyaparser.py',519),
  ('action -> bracketed_action','action',1,'p_action','lyacompiler/lyaparser.py',523),
  ('action -> assignment_action','action',1,'p_action','lyacompiler/lyaparser.py',524),
  ('action -> call_action','action',1,'p_action','lyacompiler/lyaparser.py',525),
  ('action -> exit_action','action',1,'p_action','lyacompiler/lyaparser.py',526),
  ('action -> return_action','action',1,'p_action','lyacompiler/lyaparser.py',527),
  ('action -> result_action','action',1,'p_action','lyacompiler/lyaparser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyacompiler/lyaparser.py',532),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyacompiler/lyaparser.py',533),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyacompiler/lyaparser.py',537),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',542),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',543),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',544),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',545),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',546),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',547),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyacompiler/lyaparser.py',548),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyacompiler/lyaparser.py',554),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyacompiler/lyaparser.py',558),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyacompiler/lyaparser.py',562),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyacompiler/lyaparser.py',566),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyacompiler/lyaparser.py',570),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyacompiler/lyaparser.py',574),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyacompiler/lyaparser.py',578),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyacompiler/lyaparser.py',582),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyacompiler/lyaparser.py',586),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyacompiler/lyaparser.py',590),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyacompiler/lyaparser.py',594),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyacompiler/lyaparser.py',598),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyacompiler/lyaparser.py',602),
  ('control_part -> while_control','control_part',1,'p_control_part','lyacompiler/lyaparser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyacompiler/lyaparser.py',607),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyacompiler/lyaparser.py',611),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyacompiler/lyaparser.py',615),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyacompiler/lyaparser.py',616),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyacompiler/lyaparser.py',620),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyacompiler/lyaparser.py',624),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyacompiler/lyaparser.py',628),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyacompiler/lyaparser.py',632),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyacompiler/lyaparser.py',636),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyacompiler/lyaparser.py',640),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyacompiler/lyaparser.py',644),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyacompiler/lyaparser.py',648),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyacompiler/lyaparser.py',652),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode_name','range_enumeration',4,'p_range_enumeration_down','lyacompiler/lyaparser.py',656),
  ('range_enumeration -> loop_counter IN discrete_mode_name','range_enumeration',3,'p_range_enumeration','lyacompiler/lyaparser.py',660),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyacompiler/lyaparser.py',664),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyacompiler/lyaparser.py',670),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyacompiler/lyaparser.py',671),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyacompiler/lyaparser.py',675),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyacompiler/lyaparser.py',679),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyacompiler/lyaparser.py',683),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyacompiler/lyaparser.py',684),
  ('parameter -> expression','parameter',1,'p_parameter','lyacompiler/lyaparser.py',691),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyacompiler/lyaparser.py',695),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyacompiler/lyaparser.py',699),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyacompiler/lyaparser.py',703),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyacompiler/lyaparser.py',707),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyacompiler/lyaparser.py',711),
  ('result -> expression','result',1,'p_result','lyacompiler/lyaparser.py',715),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyacompiler/lyaparser.py',719),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyacompiler/lyaparser.py',723),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',727),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',728),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',729),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',730),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',731),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',732),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',733),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyacompiler/lyaparser.py',734),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyacompiler/lyaparser.py',740),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyacompiler/lyaparser.py',744),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyacompiler/lyaparser.py',748),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyacompiler/lyaparser.py',752),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyacompiler/lyaparser.py',756),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyacompiler/lyaparser.py',760),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyacompiler/lyaparser.py',764),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyacompiler/lyaparser.py',768),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyacompiler/lyaparser.py',772),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyacompiler/lyaparser.py',773),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyacompiler/lyaparser.py',780),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyacompiler/lyaparser.py',784),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyacompiler/lyaparser.py',785),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyacompiler/lyaparser.py',792),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','lyacompiler/lyaparser.py',796),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyacompiler/lyaparser.py',800),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyacompiler/lyaparser.py',804),
  ('empty -> <empty>','empty',0,'p_empty','lyacompiler/lyaparser.py',810),
]
