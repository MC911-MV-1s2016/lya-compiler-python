
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '51E59173AD24FD2B79A86C6FE07CCA64'
    
_lr_action_items = {'DCL':([0,3,5,6,7,8,18,37,40,44,],[1,-6,-3,1,-5,-4,-2,-7,-9,-8,]),'ICONST':([43,47,50,51,55,58,59,63,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,],[61,61,61,61,61,-71,61,-70,-67,-65,61,-66,-52,-53,-56,-57,-47,61,-48,-51,-50,-55,-49,-54,61,-60,-61,-62,61,]),'GTR':([56,60,61,62,64,66,78,98,99,100,],[-58,80,-72,-69,-45,-63,-68,-64,-46,-59,]),'IN':([56,60,61,62,64,66,78,98,99,100,],[-58,82,-72,-69,-45,-63,-68,-64,-46,-59,]),'AND':([56,60,61,62,64,66,78,98,99,100,],[-58,89,-72,-69,-45,-63,-68,-64,-46,-59,]),'$end':([3,4,5,6,7,8,18,37,40,44,],[-6,0,-3,-1,-5,-4,-2,-7,-9,-8,]),'EQUALS':([56,60,61,62,64,66,78,98,99,100,],[-58,86,-72,-69,-45,-63,-68,-64,-46,-59,]),'ID':([1,2,9,10,13,14,19,22,29,38,39,41,45,49,],[14,14,14,14,-41,-43,14,14,14,14,14,14,14,-42,]),'REF':([10,13,14,19,22,39,49,],[22,-41,-43,22,22,22,-42,]),'GEQ':([56,60,61,62,64,66,78,98,99,100,],[-58,90,-72,-69,-45,-63,-68,-64,-46,-59,]),'PERC':([56,61,62,66,78,98,100,],[74,-72,-69,-63,-68,-64,74,]),'TIMES':([56,61,62,66,78,98,100,],[75,-72,-69,-63,-68,-64,75,]),'COMMA':([10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,30,31,32,33,35,36,46,48,49,52,53,54,56,57,60,61,62,64,65,66,67,68,73,78,96,97,98,99,100,],[29,-11,38,-41,-43,29,41,-21,29,45,-16,-13,-23,-32,-31,-25,-30,-35,-24,-28,-26,-29,-27,-40,-12,-42,-10,-22,-20,-58,-18,-44,-72,-69,-45,-19,-63,-15,-14,-17,-68,-34,-33,-64,-46,-59,]),'OR':([56,60,61,62,64,66,78,98,99,100,],[-58,87,-72,-69,-45,-63,-68,-64,-46,-59,]),'RPAREN':([56,60,61,62,64,66,71,72,78,98,99,100,101,102,],[-58,-44,-72,-69,-45,-63,96,97,-68,-64,-46,-59,-37,-39,]),'SYN':([0,3,5,6,7,8,18,37,40,44,],[9,-6,-3,9,-5,-4,-2,-7,-9,-8,]),'MINUS':([43,47,50,51,55,56,61,62,64,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,100,],[63,63,63,63,63,-58,-72,-69,94,-63,-67,-65,63,-66,-68,-52,-53,-56,-57,-47,63,-48,-51,-50,-55,-49,-54,63,-60,-61,-62,63,-64,94,-59,]),'SEMICOL':([11,12,14,16,17,20,21,23,24,25,26,27,28,30,31,32,33,35,36,46,48,52,53,54,56,57,60,61,62,64,65,66,67,68,73,78,96,97,98,99,100,],[-11,37,-43,40,-21,44,-16,-13,-23,-32,-31,-25,-30,-35,-24,-28,-26,-29,-27,-40,-12,-10,-22,-20,-58,-18,-44,-72,-69,-45,-19,-63,-15,-14,-17,-68,-34,-33,-64,-46,-59,]),'TYPE':([0,3,5,6,7,8,18,37,40,44,],[2,-6,-3,2,-5,-4,-2,-7,-9,-8,]),'CHAR':([10,13,14,19,22,39,49,],[25,-41,-43,25,25,25,-42,]),'DIF':([56,60,61,62,64,66,78,98,99,100,],[-58,79,-72,-69,-45,-63,-68,-64,-46,-59,]),'LEQ':([56,60,61,62,64,66,78,98,99,100,],[-58,81,-72,-69,-45,-63,-68,-64,-46,-59,]),'LSS':([56,60,61,62,64,66,78,98,99,100,],[-58,88,-72,-69,-45,-63,-68,-64,-46,-59,]),'BOOL':([10,13,14,19,22,39,49,],[26,-41,-43,26,26,26,-42,]),'DIVIDE':([56,61,62,66,78,98,100,],[77,-72,-69,-63,-68,-64,77,]),'COLON':([56,60,61,62,64,66,69,70,78,98,99,100,],[-58,-44,-72,-69,-45,-63,95,-38,-68,-64,-46,-59,]),'ASSIGN':([13,14,15,19,23,24,25,26,27,28,30,31,32,33,35,36,42,46,49,96,97,],[-41,-43,39,43,47,-23,-32,-31,-25,-30,-35,-24,-28,-26,-29,-27,55,-40,-42,-34,-33,]),'INT':([10,13,14,19,22,39,49,],[28,-41,-43,28,28,28,-42,]),'LPAREN':([14,25,26,28,30,31,32,33,34,35,36,96,97,],[-43,-32,-31,-30,-36,50,-28,-26,51,-29,-27,-34,-33,]),'NOT':([43,47,50,51,55,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,],[58,58,58,58,58,-67,-65,58,-66,-52,-53,-56,-57,-47,58,-48,-51,-50,-55,-49,-54,58,-60,-61,-62,58,]),'PLUS':([56,61,62,64,66,78,98,99,100,],[-58,-72,-69,93,-63,-68,-64,93,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,6,],[5,18,]),'expression':([43,47,50,51,55,95,],[65,68,70,70,65,102,]),'mode_name':([10,19,22,39,],[24,24,24,24,]),'operator1':([60,],[84,]),'lower_bound':([50,51,],[69,69,]),'constant_expression':([43,55,],[57,73,]),'program':([0,],[4,]),'statement_list':([0,],[6,]),'synonym_statement':([0,6,],[7,7,]),'operand1':([43,47,50,51,55,84,95,],[64,64,64,64,64,99,64,]),'discrete_mode_name':([10,19,22,39,],[34,34,34,34,]),'operator2':([64,99,],[91,91,]),'integer_mode':([10,19,22,39,],[33,33,33,33,]),'identifier':([1,2,9,10,19,22,29,38,39,41,45,],[13,13,13,30,30,30,49,13,30,13,13,]),'identifier_list':([1,2,9,38,41,45,],[10,15,19,10,15,19,]),'membership_operator':([60,],[85,]),'mode':([10,19,22,39,],[23,42,46,53,]),'operand0':([43,47,50,51,55,95,],[60,60,60,60,60,60,]),'discrete_mode':([10,19,22,39,],[31,31,31,31,]),'synonym_definition':([9,45,],[21,67,]),'mode_definition':([2,41,],[17,54,]),'operand3':([43,47,50,51,55,76,84,91,95,],[66,66,66,66,66,98,66,66,66,]),'operand2':([43,47,50,51,55,84,91,95,],[56,56,56,56,56,56,100,56,]),'declaration':([1,38,],[11,52,]),'boolean_mode':([10,19,22,39,],[36,36,36,36,]),'initialization':([23,],[48,]),'monadic_operator':([43,47,50,51,55,76,84,91,95,],[59,59,59,59,59,59,59,59,59,]),'newmode_statement':([0,6,],[3,3,]),'relational_operator':([60,],[83,]),'arithmetic_multiplicative_operator':([56,100,],[76,76,]),'declaration_list':([1,],[12,]),'reference_mode':([10,19,22,39,],[27,27,27,27,]),'upper_bound':([95,],[101,]),'declaration_statement':([0,6,],[8,8,]),'arithmetic_additive_operator':([64,99,],[92,92,]),'character_mode':([10,19,22,39,],[32,32,32,32,]),'synonym_list':([9,],[20,]),'literal_range':([50,51,],[71,72,]),'operand4':([43,47,50,51,55,59,76,84,91,95,],[62,62,62,62,62,78,62,62,62,62,]),'newmode_list':([2,],[16,]),'discrete_range_mode':([10,19,22,39,],[35,35,35,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',57),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',58),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',67),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',68),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',69),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','parser.py',75),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','parser.py',79),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','parser.py',83),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',89),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',90),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',97),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',98),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',109),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',115),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',116),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','parser.py',123),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','parser.py',124),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',135),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',141),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',142),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',149),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',153),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',154),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',155),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',162),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',163),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',167),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',171),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',179),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',180),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',184),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','parser.py',188),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',192),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',196),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',200),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',204),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',238),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',239),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',246),
  ('expression -> operand0','expression',1,'p_expression','parser.py',252),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',284),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','parser.py',288),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',292),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',293),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',297),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',298),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','parser.py',299),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','parser.py',300),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','parser.py',301),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',302),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','parser.py',303),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',304),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',308),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',312),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','parser.py',316),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',320),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',325),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',326),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',334),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','parser.py',338),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',342),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',343),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',344),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3_monadic','parser.py',348),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',352),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',357),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',358),
  ('operand4 -> ICONST','operand4',1,'p_operand4','parser.py',362),
]
