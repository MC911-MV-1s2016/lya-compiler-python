
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3874A731DF15D478A2EE724DC3FF9D47'
    
_lr_action_items = {'ELSIF':([4,8,10,32,35,39,42,43,48,54,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,104,109,132,163,176,178,196,201,202,203,210,227,228,229,231,234,240,243,245,246,251,253,276,278,281,295,312,321,322,332,334,335,346,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-140,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-14,-67,-139,-138,-133,-132,-191,-226,247,-202,-73,-128,-108,-94,277,-121,-13,-190,-161,-160,-201,-68,-103,309,-91,-74,-99,247,-70,-106,-100,-92,-105,]),'DO':([0,2,5,7,16,22,30,33,36,52,54,100,104,105,131,132,135,137,187,191,201,215,240,241,246,248,291,318,337,339,342,347,351,352,357,],[2,2,-3,-5,2,-4,-6,-8,-7,2,-140,-2,-14,2,2,-139,2,-10,-9,-11,2,2,-13,-12,2,2,2,2,2,2,2,2,2,2,2,]),'NUM':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[3,3,-3,-5,3,3,-4,3,-6,-8,3,-7,3,3,-140,3,3,3,3,3,3,-2,-14,3,3,-155,-152,3,-157,-151,-154,-156,-153,3,3,3,-139,3,-10,3,-129,3,-131,-130,-114,-110,3,-111,-115,-113,-116,-109,-112,-118,-119,-117,3,3,-123,-122,-124,-125,-126,-9,-11,3,3,3,3,3,3,3,3,3,3,3,-13,-12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PLUS':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,184,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,184,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'FI':([4,8,10,32,35,39,42,43,48,54,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,104,109,132,163,176,178,196,201,202,203,210,227,228,229,234,240,243,245,246,248,250,251,253,280,281,290,291,295,310,311,312,321,322,334,335,344,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-140,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-14,-67,-139,-138,-133,-132,-191,-226,249,-202,-73,-128,-108,-94,-121,-13,-190,-161,-160,-226,292,-201,-68,312,-91,-163,-162,-74,334,-104,-99,-165,-70,-100,-92,-164,]),'GEQ':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,170,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'RPAREN':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,106,109,119,139,141,143,144,146,147,149,150,152,153,154,155,156,158,163,176,177,178,196,197,198,199,203,204,210,220,227,228,229,234,242,243,251,253,256,274,275,281,284,287,288,295,302,306,307,312,314,315,322,329,330,331,334,335,336,343,349,356,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,196,-67,203,-34,-35,-36,-30,-33,-32,-28,-31,-47,-29,-37,-38,-41,-46,-138,-133,229,-132,-191,243,-194,-193,-202,251,-73,-45,-128,-108,-94,-121,286,-190,-201,-68,-44,306,307,-91,-220,319,-192,-74,-48,-40,-39,-99,-223,-221,-70,-50,-55,-42,-100,-92,-222,-219,355,360,]),'ARROW':([4,8,10,12,25,28,32,34,35,39,41,42,43,44,48,49,58,73,74,79,82,84,90,93,106,108,109,110,111,112,113,114,115,116,119,122,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,196,203,209,210,211,213,218,221,223,224,230,236,243,244,247,251,252,253,269,277,279,282,295,297,300,303,305,309,322,],[-60,-63,-188,68,68,109,-64,68,-62,-189,-65,-61,-58,-66,-59,68,68,68,68,109,68,68,-65,-66,68,-155,-67,-152,68,-157,-151,-154,-156,-153,68,68,68,-129,68,-131,-130,109,-114,-110,68,-111,-115,-113,-116,-109,-112,-118,-119,-117,68,68,-123,-122,-124,-125,-126,-191,-202,68,-73,68,68,68,68,68,68,68,68,-190,68,68,-201,68,-68,-66,68,68,68,-74,68,68,68,68,68,-70,]),'PLUSASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,93,109,196,203,210,243,251,253,295,322,],[-60,-63,-188,110,-64,-62,-189,-65,-61,-58,-66,-59,-66,-67,-191,-202,-73,-190,-201,-68,-74,-70,]),'PERC':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,95,96,109,163,176,178,196,203,210,227,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,161,-137,-88,-83,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-94,161,-190,-201,-68,-66,-91,-74,-70,-92,]),'RETURNS':([286,319,],[317,317,]),'FOR':([2,],[50,]),'DIVIDE':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,95,96,109,163,176,178,196,203,210,227,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,162,-137,-88,-83,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-94,162,-190,-201,-68,-66,-91,-74,-70,-92,]),'SCONST':([12,25,34,49,58,73,74,82,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[71,71,71,71,71,71,71,71,71,71,-155,-152,71,-157,-151,-154,-156,-153,71,71,71,-129,71,-131,-130,-114,-110,71,-111,-115,-113,-116,-109,-112,-118,-119,-117,71,71,-123,-122,-124,-125,-126,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'PERCASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,93,109,196,203,210,243,251,253,295,322,],[-60,-63,-188,115,-64,-62,-189,-65,-61,-58,-66,-59,-66,-67,-191,-202,-73,-190,-201,-68,-74,-70,]),'LOWER':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[13,13,-3,-5,13,13,-4,13,-6,-8,13,-7,13,13,-140,13,13,13,13,13,13,-2,-14,13,13,-155,-152,13,-157,-151,-154,-156,-153,13,13,13,-139,13,-10,13,-129,13,-131,-130,-114,-110,13,-111,-115,-113,-116,-109,-112,-118,-119,-117,13,13,-123,-122,-124,-125,-126,-9,-11,13,13,13,13,13,13,13,13,13,13,13,-13,-12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DCL':([0,5,7,16,22,30,33,36,100,104,137,187,191,240,241,318,337,339,342,347,351,352,357,],[14,-3,-5,14,-4,-6,-8,-7,-2,-14,-10,-9,-11,-13,-12,14,14,14,14,14,14,14,14,]),'SUCC':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[15,15,-3,-5,15,15,-4,15,-6,-8,15,-7,15,15,-140,15,15,15,15,15,15,-2,-14,15,15,-155,-152,15,-157,-151,-154,-156,-153,15,15,15,-139,15,-10,15,-129,15,-131,-130,-114,-110,15,-111,-115,-113,-116,-109,-112,-118,-119,-117,15,15,-123,-122,-124,-125,-126,-9,-11,15,15,15,15,15,15,15,15,15,15,15,-13,-12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DOWN':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,126,129,163,176,178,196,203,206,210,227,228,229,234,243,251,253,258,259,260,281,295,298,312,322,327,334,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,212,-180,-138,-133,-132,-191,-202,-101,-73,-128,-108,-94,-121,-190,-201,-68,-184,-181,299,-91,-74,324,-99,-70,-182,-100,-92,]),'COLON':([4,8,10,23,32,35,39,42,43,44,48,51,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,123,125,163,176,178,196,203,205,206,208,210,227,228,229,233,234,243,251,253,269,271,273,281,295,312,322,334,335,],[-60,-63,-188,105,-64,-62,-189,-61,-58,-141,-59,131,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-43,211,-138,-133,-132,-191,-202,252,-101,-71,-73,-128,-108,-94,282,-121,-190,-201,-68,-66,305,-43,-91,-74,-99,-70,-100,-92,]),'GTR':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,168,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'IN':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,126,129,163,176,178,196,203,210,212,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,174,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,214,-180,-138,-133,-132,-191,-202,-73,257,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'TYPE':([0,5,7,16,22,30,33,36,100,104,137,187,191,240,241,318,337,339,342,347,351,352,357,],[19,-3,-5,19,-4,-6,-8,-7,-2,-14,-10,-9,-11,-13,-12,19,19,19,19,19,19,19,19,]),'TIMESASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,93,109,196,203,210,243,251,253,295,322,],[-60,-63,-188,114,-64,-62,-189,-65,-61,-58,-66,-59,-66,-67,-191,-202,-73,-190,-201,-68,-74,-70,]),'ELSE':([4,8,10,32,35,39,42,43,48,54,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,104,109,132,163,176,178,196,201,202,203,210,227,228,229,231,234,240,243,245,246,251,253,276,278,281,295,312,321,322,332,334,335,346,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-140,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-14,-67,-139,-138,-133,-132,-191,-226,248,-202,-73,-128,-108,-94,279,-121,-13,-190,-161,-160,-201,-68,-103,279,-91,-74,-99,248,-70,-106,-100,-92,-105,]),'TRUE':([12,25,34,49,58,73,74,82,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[70,70,70,70,70,70,70,70,70,70,-155,-152,70,-157,-151,-154,-156,-153,70,70,70,-129,70,-131,-130,-114,-110,70,-111,-115,-113,-116,-109,-112,-118,-119,-117,70,70,-123,-122,-124,-125,-126,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'PRINT':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[21,21,-3,-5,21,21,-4,21,-6,-8,21,-7,21,21,-140,21,21,21,21,21,21,-2,-14,21,21,-155,-152,21,-157,-151,-154,-156,-153,21,21,21,-139,21,-10,21,-129,21,-131,-130,-114,-110,21,-111,-115,-113,-116,-109,-112,-118,-119,-117,21,21,-123,-122,-124,-125,-126,-9,-11,21,21,21,21,21,21,21,21,21,21,21,-13,-12,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'EQUALS':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,169,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'LPAREN':([3,12,13,15,21,24,25,26,31,34,37,38,43,44,47,49,58,73,74,82,84,93,106,108,110,111,112,113,114,115,116,119,122,139,141,143,146,147,153,154,155,156,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,195,209,211,213,218,221,223,224,230,236,244,247,252,261,262,269,272,277,279,282,296,297,300,303,305,306,307,309,317,],[-203,74,-207,-205,-210,106,74,-206,-209,74,119,-204,-58,-195,-208,74,74,74,74,74,74,-195,74,-155,-152,74,-157,-151,-154,-156,-153,74,74,-34,-35,-36,-33,-32,223,-37,-38,224,74,-129,74,-131,-130,-114,-110,74,-111,-115,-113,-116,-109,-112,-118,-119,-117,74,74,-123,-122,-124,-125,-126,242,74,74,74,74,74,74,74,74,74,74,74,74,223,224,224,223,74,74,74,223,74,74,74,74,-40,-39,74,338,]),'CHAR':([43,60,62,99,145,190,214,221,222,257,285,303,304,338,],[-58,-56,155,155,155,155,155,155,-57,155,155,155,155,155,]),'RESULT':([0,2,5,7,16,22,30,33,36,52,54,100,104,105,131,132,135,137,187,191,201,215,240,241,246,248,291,318,337,339,342,347,351,352,357,],[25,25,-3,-5,25,-4,-6,-8,-7,25,-140,-2,-14,25,25,-139,25,-10,-9,-11,25,25,-13,-12,25,25,25,25,25,25,25,25,25,25,25,]),'OD':([2,52,54,104,132,135,215,240,],[55,133,-140,-14,-139,216,263,-13,]),'FALSE':([12,25,34,49,58,73,74,82,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[95,95,95,95,95,95,95,95,95,95,-155,-152,95,-157,-151,-154,-156,-153,95,95,95,-129,95,-131,-130,-114,-110,95,-111,-115,-113,-116,-109,-112,-118,-119,-117,95,95,-123,-122,-124,-125,-126,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'ARRAY':([43,60,62,99,145,190,222,285,304,338,],[-58,-56,148,148,148,148,-57,148,148,148,]),'MINUS':([4,8,10,12,25,32,34,35,39,42,43,48,49,58,63,64,65,66,67,70,71,74,75,76,77,79,80,81,83,84,85,86,87,88,89,90,93,94,95,96,106,108,109,110,111,112,113,114,115,116,119,122,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,180,181,182,183,184,185,186,196,203,209,210,211,213,218,221,223,224,227,228,229,230,234,236,243,244,247,251,252,253,269,277,279,281,282,295,297,300,303,305,309,322,335,],[-60,-63,-188,82,82,-64,82,-62,-189,-61,-58,-59,82,82,-81,-120,-137,-88,-83,-87,-90,82,-136,-77,-78,-135,-85,-89,-79,82,-134,-82,-127,-76,-80,-65,-66,185,-86,-84,82,-155,-67,-152,82,-157,-151,-154,-156,-153,82,82,82,-129,82,-131,-130,-138,-114,-110,82,-111,-115,-113,-116,-109,-112,-118,-119,-117,-133,-132,82,82,-123,-122,-124,-125,-126,-191,-202,82,-73,82,82,82,82,82,82,-128,185,-94,82,-121,82,-190,82,82,-201,82,-68,-66,82,82,-91,82,-74,82,82,82,82,82,-70,-92,]),'UPPER':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[26,26,-3,-5,26,26,-4,26,-6,-8,26,-7,26,26,-140,26,26,26,26,26,26,-2,-14,26,26,-155,-152,26,-157,-151,-154,-156,-153,26,26,26,-139,26,-10,26,-129,26,-131,-130,-114,-110,26,-111,-115,-113,-116,-109,-112,-118,-119,-117,26,26,-123,-122,-124,-125,-126,-9,-11,26,26,26,26,26,26,26,26,26,26,26,-13,-12,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TIMES':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,95,96,109,163,176,178,196,203,210,227,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,159,-137,-88,-83,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-94,159,-190,-201,-68,-66,-91,-74,-70,-92,]),'CCONST':([12,25,34,49,58,73,74,82,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[66,66,66,66,66,66,66,66,66,66,-155,-152,66,-157,-151,-154,-156,-153,66,66,66,-129,66,-131,-130,-114,-110,66,-111,-115,-113,-116,-109,-112,-118,-119,-117,66,66,-123,-122,-124,-125,-126,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'INT':([43,60,62,99,145,190,214,221,222,257,285,303,304,338,],[-58,-56,143,143,143,143,143,143,-57,143,143,143,143,143,]),'RETURN':([0,2,5,7,16,22,30,33,36,52,54,100,104,105,131,132,135,137,187,191,201,215,240,241,246,248,291,318,337,339,342,347,351,352,357,],[12,12,-3,-5,12,-4,-6,-8,-7,12,-140,-2,-14,12,12,-139,12,-10,-9,-11,12,12,-13,-12,12,12,12,12,12,12,12,12,12,12,12,]),'ICONST':([12,25,34,49,58,73,74,82,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,219,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[80,80,80,80,80,80,80,80,80,80,-155,-152,80,-157,-151,-154,-156,-153,80,80,80,-129,80,-131,-130,-114,-110,80,-111,-115,-113,-116,-109,-112,-118,-119,-117,80,80,-123,-122,-124,-125,-126,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'AND':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,167,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'NULL':([12,25,34,49,58,73,74,82,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[81,81,81,81,81,81,81,81,81,81,-155,-152,81,-157,-151,-154,-156,-153,81,81,81,-129,81,-131,-130,-114,-110,81,-111,-115,-113,-116,-109,-112,-118,-119,-117,81,81,-123,-122,-124,-125,-126,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'READ':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[31,31,-3,-5,31,31,-4,31,-6,-8,31,-7,31,31,-140,31,31,31,31,31,31,-2,-14,31,31,-155,-152,31,-157,-151,-154,-156,-153,31,31,31,-139,31,-10,31,-129,31,-131,-130,-114,-110,31,-111,-115,-113,-116,-109,-112,-118,-119,-117,31,31,-123,-122,-124,-125,-126,-9,-11,31,31,31,31,31,31,31,31,31,31,31,-13,-12,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PROC':([105,],[195,]),'END':([5,7,22,30,33,36,100,104,137,187,191,240,241,318,337,339,342,347,351,352,357,],[-3,-5,-4,-6,-8,-7,-2,-14,-10,-9,-11,-13,-12,340,348,350,353,354,358,359,361,]),'$end':([5,6,7,16,22,30,33,36,100,104,137,187,191,240,241,],[-3,0,-5,-1,-4,-6,-8,-7,-2,-14,-10,-9,-11,-13,-12,]),'CHARS':([43,60,62,99,145,190,222,285,304,338,],[-58,-56,142,142,142,142,-57,142,142,142,]),'IF':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,74,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,180,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[34,34,-3,-5,84,34,-4,84,-6,-8,84,-7,84,34,-140,84,84,84,-2,-14,34,84,-155,-152,84,-157,-151,-154,-156,-153,84,84,34,-139,34,-10,84,84,-9,-11,34,84,84,84,34,84,84,84,84,84,84,-13,-12,84,34,84,34,84,84,84,84,34,84,84,84,84,84,34,34,34,34,34,34,34,34,]),'DIVIDEASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,93,109,196,203,210,243,251,253,295,322,],[-60,-63,-188,108,-64,-62,-189,-65,-61,-58,-66,-59,-66,-67,-191,-202,-73,-190,-201,-68,-74,-70,]),'REF':([43,60,62,99,145,190,222,285,304,338,],[-58,-56,145,145,145,145,-57,145,145,145,]),'RBRACK':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,123,124,139,141,143,146,147,154,155,163,176,178,196,203,206,207,208,210,227,228,229,232,234,243,251,253,254,255,256,265,266,267,268,270,272,281,293,294,295,306,307,312,313,322,328,331,334,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-96,210,-34,-35,-36,-33,-32,-37,-38,-138,-133,-132,-191,-202,-101,253,-69,-73,-128,-108,-94,281,-121,-190,-201,-68,-95,295,-44,302,-49,304,-52,-54,-53,-91,322,-72,-74,-40,-39,-99,335,-70,-51,-42,-100,-92,]),'ASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,60,62,93,101,109,126,129,139,140,141,143,144,146,147,149,150,152,153,154,155,156,158,189,196,203,210,220,222,243,251,253,295,302,306,307,322,329,330,],[-60,-63,-188,113,-64,-62,-189,-65,-61,-58,-66,-59,-56,157,-66,190,-67,213,-180,-34,218,-35,-36,-30,-33,-32,-28,-31,-47,-29,-37,-38,-41,-46,236,-191,-202,-73,-45,-57,-190,-201,-68,-74,-48,-40,-39,-70,-50,-55,]),'LBRACK':([1,4,8,10,28,32,35,39,41,42,43,44,48,63,65,66,67,70,71,76,77,79,80,81,83,86,88,89,90,92,93,95,96,109,142,148,163,196,203,210,229,243,251,253,269,281,295,322,335,],[49,-60,-63,-188,-75,-64,-62,-189,-65,-61,-58,122,-59,-81,-93,-88,-83,-87,-90,-77,-78,-75,-85,-89,-79,-82,-76,-80,-65,180,122,-86,-84,-67,219,221,-75,-191,-202,-73,-94,-190,-201,-68,122,-91,-74,-70,-92,]),'DIF':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,164,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'THEN':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,117,118,163,176,178,179,196,203,210,227,228,229,234,243,251,253,281,289,295,308,312,322,333,334,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,201,-102,-138,-133,-132,230,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-91,201,-74,230,-99,-70,230,-100,-92,]),'PRED':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[38,38,-3,-5,38,38,-4,38,-6,-8,38,-7,38,38,-140,38,38,38,38,38,38,-2,-14,38,38,-155,-152,38,-157,-151,-154,-156,-153,38,38,38,-139,38,-10,38,-129,38,-131,-130,-114,-110,38,-111,-115,-113,-116,-109,-112,-118,-119,-117,38,38,-123,-122,-124,-125,-126,-9,-11,38,38,38,38,38,38,38,38,38,38,38,-13,-12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'COMMA':([4,8,10,32,35,39,42,43,48,59,60,61,62,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,97,98,99,101,102,103,109,123,124,139,141,143,144,146,147,149,150,152,153,154,155,156,158,163,176,178,189,196,197,198,199,203,204,210,217,220,222,225,226,227,228,229,232,234,235,237,238,239,243,251,253,254,256,264,267,268,270,272,281,283,284,285,287,288,295,302,306,307,312,314,315,322,328,329,330,331,334,335,336,343,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,138,-56,-21,151,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-16,188,151,151,-26,192,-67,-96,209,-34,-35,-36,-30,-33,-32,-28,-31,-47,-29,-37,-38,-41,-46,-138,-133,-132,-18,-191,244,-194,-193,-202,244,-73,-20,-45,-57,-23,-24,-128,-108,-94,209,-121,-15,-17,-27,-25,-190,-201,-68,-95,-44,-22,303,-52,-54,-53,-91,-19,-220,151,320,-192,-74,-48,-40,-39,-99,-223,-221,-70,-51,-50,-55,-42,-100,-92,-222,-219,]),'BOOL':([43,60,62,99,145,190,214,221,222,257,285,303,304,338,],[-58,-56,154,154,154,154,154,154,-57,154,154,154,154,154,]),'CONCATASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,93,109,196,203,210,243,251,253,295,322,],[-60,-63,-188,112,-64,-62,-189,-65,-61,-58,-66,-59,-66,-67,-191,-202,-73,-190,-201,-68,-74,-70,]),'LEQ':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,173,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'EXIT':([0,2,5,7,16,22,30,33,36,52,54,100,104,105,131,132,135,137,187,191,201,215,240,241,246,248,291,318,337,339,342,347,351,352,357,],[40,40,-3,-5,40,-4,-6,-8,-7,40,-140,-2,-14,40,40,-139,40,-10,-9,-11,40,40,-13,-12,40,40,40,40,40,40,40,40,40,40,40,]),'SYN':([0,5,7,16,22,30,33,36,100,104,137,187,191,240,241,318,337,339,342,347,351,352,357,],[9,-3,-5,9,-4,-6,-8,-7,-2,-14,-10,-9,-11,-13,-12,9,9,9,9,9,9,9,9,]),'TO':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,206,210,227,228,229,234,243,251,253,258,259,260,281,295,298,299,312,322,324,327,334,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-101,-73,-128,-108,-94,-121,-190,-201,-68,-184,-181,297,-91,-74,297,297,-99,-70,297,-182,-100,-92,]),'NOT':([12,25,34,49,58,74,84,106,108,110,111,112,113,114,115,116,119,122,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[73,73,73,73,73,73,73,73,-155,-152,73,-157,-151,-154,-156,-153,73,73,73,-129,73,-131,-130,-114,-110,73,-111,-115,-113,-116,-109,-112,-118,-119,-117,73,73,-123,-122,-124,-125,-126,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'SEMICOL':([4,8,10,11,12,17,18,20,27,29,32,35,39,41,42,43,45,46,48,53,55,56,57,59,61,63,64,65,66,67,69,70,71,72,75,76,77,78,79,80,81,83,85,86,87,88,89,90,91,93,94,95,96,97,98,102,103,107,109,118,120,121,127,128,130,133,134,136,139,141,143,144,146,147,149,150,152,153,154,155,156,158,163,176,178,189,193,194,196,200,203,210,216,217,220,225,226,227,228,229,234,235,237,238,239,243,249,251,253,258,261,263,264,281,283,286,292,295,296,301,302,306,307,312,316,319,322,323,325,326,329,330,334,335,340,341,345,348,350,353,354,355,358,359,360,361,],[-60,-63,-188,-142,-198,-148,-147,104,-145,-149,-64,-62,-189,-144,-61,-58,-143,-146,-59,-171,-169,135,-172,137,-21,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-197,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-200,-66,-107,-86,-84,-16,187,-26,191,-199,-67,-102,-141,-196,-175,-174,-173,-168,-170,-187,-34,-35,-36,-30,-33,-32,-28,-31,-47,-29,-37,-38,-41,-46,-138,-133,-132,-18,240,241,-191,-150,-202,-73,-167,-20,-45,-23,-24,-128,-108,-94,-121,-15,-17,-27,-25,-190,-159,-201,-68,-184,-186,-166,-22,-91,-19,318,-158,-74,-185,-179,-48,-40,-39,-99,337,342,-70,-183,-177,-178,-50,-55,-100,-92,-218,351,-176,-216,-217,-215,-214,-225,-212,-213,-224,-211,]),'LOC':([43,139,141,143,144,146,147,149,150,152,153,154,155,156,158,220,302,306,307,314,329,330,349,],[-58,-34,-35,-36,-30,-33,-32,-28,-31,-47,-29,-37,-38,-41,-46,-45,-48,-40,-39,336,-50,-55,356,]),'ID':([0,2,5,7,9,12,14,16,19,22,25,30,33,34,36,40,43,49,50,52,54,58,60,62,68,73,74,82,84,99,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,138,145,151,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,188,190,191,192,201,209,211,213,214,215,218,221,222,223,224,230,236,240,241,242,244,246,247,248,252,257,277,279,282,285,291,297,300,303,304,305,309,318,320,337,338,339,342,347,351,352,357,],[43,43,-3,-5,43,43,43,43,43,-4,43,-6,-8,43,-7,43,-58,43,43,43,-140,43,-56,43,43,43,43,43,43,43,-2,-14,43,43,-155,-152,43,-157,-151,-154,-156,-153,43,43,43,-139,43,-10,43,43,43,43,-129,43,-131,-130,-114,-110,43,-111,-115,-113,-116,-109,-112,-118,-119,-117,43,43,-123,-122,-124,-125,-126,-9,43,43,-11,43,43,43,43,43,43,43,43,43,-57,43,43,43,43,-13,-12,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'OR':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,172,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'CONCAT':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,186,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,186,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'BY':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,258,259,260,281,295,312,322,334,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-184,-181,300,-91,-74,-99,-70,-100,-92,]),'LENGTH':([0,2,5,7,12,16,22,25,30,33,34,36,49,52,54,58,68,73,74,82,84,100,104,105,106,108,110,111,112,113,114,115,116,119,122,131,132,135,137,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,191,201,209,211,213,215,218,221,223,224,230,236,240,241,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[47,47,-3,-5,47,47,-4,47,-6,-8,47,-7,47,47,-140,47,47,47,47,47,47,-2,-14,47,47,-155,-152,47,-157,-151,-154,-156,-153,47,47,47,-139,47,-10,47,-129,47,-131,-130,-114,-110,47,-111,-115,-113,-116,-109,-112,-118,-119,-117,47,47,-123,-122,-124,-125,-126,-9,-11,47,47,47,47,47,47,47,47,47,47,47,-13,-12,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'WHILE':([2,4,8,10,32,35,39,42,43,48,53,63,64,65,66,67,69,70,71,72,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,127,128,130,139,141,143,146,147,154,155,163,176,178,196,203,210,227,228,229,234,243,251,253,258,261,281,295,296,301,306,307,312,322,323,325,326,334,335,345,],[58,-60,-63,-188,-64,-62,-189,-61,-58,-59,58,-81,-120,-137,-88,-83,-97,-87,-90,-98,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-175,-174,-173,-34,-35,-36,-33,-32,-37,-38,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-184,-186,-91,-74,-185,-179,-40,-39,-99,-70,-183,-177,-178,-100,-92,-176,]),'LSS':([4,8,10,32,35,39,42,43,48,63,64,65,66,67,69,70,71,75,76,77,79,80,81,83,85,86,87,88,89,90,93,94,95,96,109,163,176,178,196,203,210,227,228,229,234,243,251,253,269,281,295,322,335,],[-60,-63,-188,-64,-62,-189,-61,-58,-59,-81,-120,-137,-88,-83,175,-87,-90,-136,-77,-78,-135,-85,-89,-79,-134,-82,-127,-76,-80,-65,-66,-107,-86,-84,-67,-138,-133,-132,-191,-202,-73,-128,-108,-94,-121,-190,-201,-68,-66,-91,-74,-70,-92,]),'MINUSASSIGN':([4,8,10,28,32,35,39,41,42,43,44,48,93,109,196,203,210,243,251,253,295,322,],[-60,-63,-188,116,-64,-62,-189,-65,-61,-58,-66,-59,-66,-67,-191,-202,-73,-190,-201,-68,-74,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode_definition':([19,192,],[102,239,]),'left_element':([122,],[205,]),'reference_mode':([62,99,145,190,285,304,338,],[144,144,144,144,144,144,144,]),'string_length':([219,],[265,]),'character_mode':([62,99,145,190,214,221,257,285,303,304,338,],[139,139,139,139,139,139,139,139,139,139,139,]),'for_control':([2,],[53,]),'step_value':([260,],[298,]),'index_mode_list':([221,],[267,]),'statement':([0,16,318,337,339,342,347,351,352,357,],[5,100,5,5,100,5,100,5,100,100,]),'step_enumeration':([50,],[127,]),'result_spec':([286,319,],[316,341,]),'synonym_statement':([0,16,318,337,339,342,347,351,352,357,],[7,7,7,7,7,7,7,7,7,7,]),'array_element':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'synonym_list':([9,],[59,]),'operand0':([12,25,34,49,58,74,84,106,111,119,122,157,180,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'bracketed_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'conditional_expression':([12,25,34,49,58,74,84,106,111,119,122,157,180,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'parameter_list':([106,119,],[197,204,]),'parameter_spec':([285,],[315,]),'else_expression':([231,278,],[280,310,]),'operator1':([69,],[166,]),'if_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'result_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'boolean_literal':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'constant_expression':([157,218,],[225,264,]),'referenced_location':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[20,20,20,20,193,193,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'iteration':([50,],[130,]),'declaration_statement':([0,16,318,337,339,342,347,351,352,357,],[22,22,22,22,22,22,22,22,22,22,]),'label_id':([0,2,16,40,52,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[23,51,23,121,51,51,51,51,51,51,51,23,23,23,23,23,23,23,23,]),'initialization':([189,],[237,]),'value_array_slice':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'synonym_definition':([9,138,],[61,217,]),'parameter':([106,119,244,],[199,199,288,]),'primitive_value':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'element_mode':([304,],[329,]),'assigning_operator':([28,],[111,]),'string_slice':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'arithmetic_additive_operator':([94,228,],[183,183,]),'boolean_expression':([34,58,84,247,277,309,],[117,136,179,289,308,333,]),'operator2':([94,228,],[181,181,]),'operand4':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[85,85,85,85,85,176,85,178,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'empty':([201,248,],[245,290,]),'operand3':([12,25,34,49,58,74,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[87,87,87,87,87,87,87,87,87,87,87,87,227,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'literal':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'identifier_list':([9,14,19,138,188,192,242,320,],[62,99,101,62,99,101,285,285,]),'integer_literal':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,219,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,266,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'call_action':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[41,41,90,41,90,90,90,41,90,90,90,90,90,90,41,90,90,90,90,41,41,90,90,90,90,90,41,90,90,90,41,90,90,90,90,90,90,90,41,90,41,90,90,90,90,41,90,90,90,90,90,41,41,41,41,41,41,41,41,]),'string_element':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'array_primitive_value':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'elsif_expression':([231,],[278,]),'identifier':([0,2,9,12,14,16,19,25,34,40,49,50,52,58,62,68,73,74,82,84,99,105,106,111,119,122,131,135,138,145,151,157,160,166,180,181,188,190,192,201,209,211,213,214,215,218,221,223,224,230,236,242,244,246,247,248,252,257,277,279,282,285,291,297,300,303,304,305,309,318,320,337,338,339,342,347,351,352,357,],[44,44,60,93,60,44,60,93,93,120,93,129,44,93,156,93,93,93,93,93,156,93,93,93,93,93,93,44,60,156,222,93,93,93,93,93,60,156,60,44,93,93,93,262,44,93,269,93,93,93,93,60,93,44,93,44,93,262,93,93,93,156,44,93,93,269,156,93,93,44,60,44,156,44,44,44,44,44,44,]),'operand1':([12,25,34,49,58,74,84,106,111,119,122,157,166,180,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[94,94,94,94,94,94,94,94,94,94,94,94,228,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'string_mode':([62,99,145,190,285,304,338,],[158,158,158,158,158,158,158,]),'formal_parameter':([242,320,],[284,343,]),'integer_expression':([122,252,300,],[208,294,327,]),'literal_range':([221,223,224,303,],[270,274,275,270,]),'operand2':([12,25,34,49,58,74,84,106,111,119,122,157,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,234,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'dereferenced_reference':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'parenthesized_expression':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'program':([0,],[6,]),'range_enumeration':([50,],[128,]),'discrete_mode':([62,99,145,190,214,221,257,285,303,304,338,],[153,153,153,153,261,272,296,153,272,153,153,]),'upper_bound':([211,282,305,],[255,313,331,]),'start_value':([213,],[260,]),'procedure_call':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'integer_mode':([62,99,145,190,214,221,257,285,303,304,338,],[147,147,147,147,147,147,147,147,147,147,147,]),'mode_name':([62,99,145,190,285,304,338,],[149,149,149,149,149,149,149,]),'statement_list':([0,318,337,342,351,],[16,339,347,352,357,]),'arithmetic_multiplicative_operator':([64,234,],[160,160,]),'relational_operator':([69,],[171,]),'else_clause':([202,321,],[250,344,]),'array_location':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'discrete_expression':([213,297,],[259,323,]),'value_array_element':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'procedure_name':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'index_mode':([221,303,],[268,328,]),'result':([12,25,],[78,107,]),'empty_literal':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'action_statement_list':([2,135,201,248,],[52,215,246,291,]),'exit_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'location':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[28,28,79,28,79,79,79,28,79,163,79,79,79,79,28,79,79,79,79,28,28,79,79,79,79,79,28,79,79,79,28,79,79,79,79,79,79,79,28,79,28,79,79,79,79,28,79,79,79,79,79,28,28,28,28,28,28,28,28,]),'do_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'newmode_statement':([0,16,318,337,339,342,347,351,352,357,],[30,30,30,30,30,30,30,30,30,30,]),'then_expression':([179,308,333,],[231,332,346,]),'mode':([62,99,145,190,285,304,338,],[140,189,220,238,314,330,349,]),'procedure_definition':([105,],[194,]),'start_element':([122,],[207,]),'declaration':([14,188,],[97,235,]),'array_slice':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'action_statement':([0,2,16,52,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[33,54,33,132,54,54,132,132,54,132,33,33,33,33,33,33,33,33,]),'location_name':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'lower_bound':([49,180,221,223,224,303,],[125,233,271,271,271,271,]),'then_clause':([117,289,],[202,321,]),'boolean_mode':([62,99,145,190,214,221,257,285,303,304,338,],[146,146,146,146,146,146,146,146,146,146,146,]),'procedure_statement':([0,16,318,337,339,342,347,351,352,357,],[36,36,36,36,36,36,36,36,36,36,]),'composite_mode':([62,99,145,190,285,304,338,],[150,150,150,150,150,150,150,]),'discrete_range_mode':([62,99,145,190,214,221,257,285,303,304,338,],[141,141,141,141,141,141,141,141,141,141,141,]),'return_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'builtin_name':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'membership_operator':([69,],[165,]),'control_part':([2,],[56,]),'while_control':([2,53,],[57,134,]),'builtin_call':([0,2,12,16,25,34,49,52,58,68,73,74,82,84,105,106,111,119,122,131,135,157,160,166,180,181,201,209,211,213,215,218,221,223,224,230,236,244,246,247,248,252,277,279,282,291,297,300,303,305,309,318,337,339,342,347,351,352,357,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'loop_counter':([50,],[126,]),'newmode_list':([19,],[103,]),'expression':([12,25,34,49,58,74,84,106,111,119,122,157,180,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[91,91,118,123,118,177,118,198,200,198,206,226,123,254,256,258,226,273,273,273,276,283,198,118,206,118,311,256,258,206,273,256,118,]),'character_string_literal':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'array_mode':([62,99,145,190,285,304,338,],[152,152,152,152,152,152,152,]),'expression_list':([49,180,],[124,232,]),'string_concatenation_operator':([94,228,],[182,182,]),'right_element':([252,],[293,]),'assignment_action':([0,2,16,52,105,131,135,201,215,246,248,291,318,337,339,342,347,351,352,357,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'declaration_list':([14,],[98,]),'character_literal':([12,25,34,49,58,73,74,82,84,106,111,119,122,157,160,166,180,181,209,211,213,218,221,223,224,230,236,244,247,252,277,279,282,297,300,303,305,309,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'end_value':([260,298,299,324,],[301,325,326,345,]),'formal_parameter_list':([242,],[287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',62),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',68),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',69),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',76),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',77),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',78),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',79),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',80),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyaparser.py',84),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyaparser.py',89),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyaparser.py',94),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyaparser.py',99),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyaparser.py',104),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyaparser.py',108),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',114),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',115),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',122),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',123),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',130),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',136),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',137),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyaparser.py',144),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyaparser.py',145),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',152),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',158),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',159),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',166),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',170),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',171),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',172),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',173),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',177),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',178),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',179),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',180),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',184),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',188),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',192),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',196),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',197),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',201),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',209),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',213),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',217),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',221),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',225),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',226),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyaparser.py',230),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyaparser.py',234),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyaparser.py',238),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',242),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',243),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',250),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',251),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',255),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',261),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',262),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',269),
  ('location -> location_name','location',1,'p_location','lyaparser.py',275),
  ('location -> dereferenced_reference','location',1,'p_location','lyaparser.py',276),
  ('location -> string_element','location',1,'p_location','lyaparser.py',277),
  ('location -> string_slice','location',1,'p_location','lyaparser.py',278),
  ('location -> array_element','location',1,'p_location','lyaparser.py',279),
  ('location -> array_slice','location',1,'p_location','lyaparser.py',280),
  ('location -> call_action','location',1,'p_location','lyaparser.py',281),
  ('location_name -> identifier','location_name',1,'p_location_name','lyaparser.py',285),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaparser.py',289),
  ('string_element -> identifier LBRACK start_element RBRACK','string_element',4,'p_string_element','lyaparser.py',293),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyaparser.py',297),
  ('string_slice -> identifier LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyaparser.py',301),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyaparser.py',309),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyaparser.py',313),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyaparser.py',317),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyaparser.py',321),
  ('array_location -> location','array_location',1,'p_array_location','lyaparser.py',325),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',331),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',332),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',333),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',334),
  ('literal -> integer_literal','literal',1,'p_literal','lyaparser.py',338),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaparser.py',339),
  ('literal -> character_literal','literal',1,'p_literal','lyaparser.py',340),
  ('literal -> empty_literal','literal',1,'p_literal','lyaparser.py',341),
  ('literal -> character_string_literal','literal',1,'p_literal','lyaparser.py',342),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyaparser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaparser.py',350),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaparser.py',351),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyaparser.py',355),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaparser.py',359),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyaparser.py',363),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyaparser.py',369),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyaparser.py',373),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',377),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',383),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',387),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',388),
  ('expression -> operand0','expression',1,'p_expression','lyaparser.py',395),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',396),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',400),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyaparser.py',404),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaparser.py',408),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',412),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',416),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',420),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyaparser.py',424),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',428),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaparser.py',432),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyaparser.py',436),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaparser.py',440),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaparser.py',441),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaparser.py',445),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaparser.py',446),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyaparser.py',447),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyaparser.py',448),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyaparser.py',449),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyaparser.py',450),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyaparser.py',451),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyaparser.py',452),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaparser.py',456),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaparser.py',460),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyaparser.py',464),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaparser.py',468),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaparser.py',469),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',473),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',474),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyaparser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaparser.py',482),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyaparser.py',486),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',490),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',491),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',492),
  ('operand3 -> MINUS operand4','operand3',2,'p_operand3_uminus','lyaparser.py',496),
  ('operand3 -> NOT operand4','operand3',2,'p_operand3_monadic','lyaparser.py',500),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaparser.py',504),
  ('operand4 -> location','operand4',1,'p_operand4','lyaparser.py',509),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaparser.py',510),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaparser.py',511),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',515),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',521),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',522),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',529),
  ('action -> bracketed_action','action',1,'p_action','lyaparser.py',533),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',534),
  ('action -> call_action','action',1,'p_action','lyaparser.py',535),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',536),
  ('action -> return_action','action',1,'p_action','lyaparser.py',537),
  ('action -> result_action','action',1,'p_action','lyaparser.py',538),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',542),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',543),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',547),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',552),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',553),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',554),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',555),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',556),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',557),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',558),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyaparser.py',564),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',568),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',572),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyaparser.py',576),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',580),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyaparser.py',584),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyaparser.py',588),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyaparser.py',592),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyaparser.py',596),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyaparser.py',600),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',604),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyaparser.py',608),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyaparser.py',612),
  ('control_part -> for_control','control_part',1,'p_control_part_for','lyaparser.py',616),
  ('control_part -> while_control','control_part',1,'p_control_part_while','lyaparser.py',620),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',624),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',628),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',629),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyaparser.py',633),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyaparser.py',637),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyaparser.py',641),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',645),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',649),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',653),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaparser.py',657),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',661),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',665),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration_down','lyaparser.py',669),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',673),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',677),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',683),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',684),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyaparser.py',688),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',692),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyaparser.py',696),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaparser.py',697),
  ('parameter -> expression','parameter',1,'p_parameter','lyaparser.py',704),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyaparser.py',708),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyaparser.py',712),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyaparser.py',716),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',720),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaparser.py',724),
  ('result -> expression','result',1,'p_result','lyaparser.py',728),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyaparser.py',732),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',736),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',740),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',741),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',742),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',743),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',744),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',745),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',746),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',747),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyaparser.py',753),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyaparser.py',757),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyaparser.py',761),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyaparser.py',765),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyaparser.py',769),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyaparser.py',773),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyaparser.py',777),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyaparser.py',781),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',785),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',786),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',793),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',797),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',798),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec_attr','lyaparser.py',809),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaparser.py',813),
  ('empty -> <empty>','empty',0,'p_empty','lyaparser.py',823),
]
