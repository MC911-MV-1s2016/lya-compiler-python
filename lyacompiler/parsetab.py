
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '47F753B035F813762A24255C138E1FC3'
    
_lr_action_items = {'LOC':([19,180,182,183,184,186,187,188,189,190,191,193,194,195,196,234,306,315,317,318,342,343,350,],[-58,-31,-47,-30,-41,-29,-32,-35,-37,-33,-28,-38,-46,-36,-34,-45,336,-48,-39,-40,-50,-55,356,]),'LEQ':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,149,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'PLUSASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,171,177,218,228,233,244,308,321,],[-60,-61,-189,59,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,-191,-202,-73,-190,-201,-68,-74,-70,]),'OR':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,151,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'LPAREN':([2,6,16,19,22,23,24,28,29,32,35,39,43,44,46,49,58,59,60,61,62,63,65,66,69,71,78,87,97,98,107,112,117,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,184,186,187,188,189,190,193,195,196,197,211,217,219,226,229,236,237,238,239,243,248,252,254,255,268,271,273,286,287,295,296,300,303,311,316,317,318,320,],[-210,-204,-207,-58,-205,87,-209,87,107,112,-208,-195,-203,87,-206,87,-153,-152,-156,87,-157,-155,-154,-151,87,87,-195,87,87,87,87,87,87,214,-122,87,-123,-125,-124,-126,-110,-118,-109,-112,-113,87,-116,-115,-111,-117,-114,-119,87,87,-129,-131,-130,236,238,-32,-35,-37,-33,-38,-36,-34,87,87,87,87,87,87,87,87,87,87,87,87,87,238,236,87,87,87,236,238,238,87,87,331,87,87,-39,-40,87,]),'CONCAT':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,147,-76,-89,-137,-136,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,147,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'PRED':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[6,-7,-6,6,-3,-8,-5,6,6,-4,6,6,6,-140,6,-153,-152,-156,6,-157,-155,-154,-151,6,-14,6,6,6,6,6,6,6,6,-2,6,6,-139,6,-122,6,-123,-125,-124,-126,-110,-118,-109,-112,-113,6,-116,-115,-111,-117,-114,-119,6,6,-129,-131,-130,-11,6,-10,6,-9,6,6,-13,-12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'ICONST':([23,28,44,49,58,59,60,61,62,63,65,66,69,71,87,97,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,235,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[89,89,89,89,-153,-152,-156,89,-157,-155,-154,-151,89,89,89,89,89,89,89,89,-122,89,-123,-125,-124,-126,-110,-118,-109,-112,-113,89,-116,-115,-111,-117,-114,-119,89,89,-129,-131,-130,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'COMMA':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,108,109,110,111,113,114,115,120,121,122,139,140,141,166,168,169,170,171,172,177,178,180,182,183,184,186,187,188,189,190,191,193,194,195,196,206,218,220,221,222,224,225,228,230,231,232,233,234,240,241,242,244,251,253,261,263,264,265,267,269,275,281,283,284,285,287,294,306,307,308,314,315,317,318,321,334,335,336,337,339,341,342,343,344,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,173,-56,-26,175,173,-21,198,-16,173,208,-96,219,-132,-133,-138,-193,-194,-191,229,-202,229,-31,-47,-30,-41,-29,-32,-35,-37,-33,-28,-38,-46,-36,-34,-18,-73,-121,-108,-94,219,-128,-190,-57,-27,-25,-201,-45,-24,-23,-20,-68,-17,-15,-220,305,173,-44,-95,-91,-192,-22,-52,-54,320,-53,-19,-223,-221,-74,-99,-48,-39,-40,-70,-219,-222,-224,-92,-100,-42,-50,-55,-51,]),'LBRACK':([1,3,5,9,10,15,18,19,30,39,40,41,42,64,73,74,75,76,77,78,79,81,82,83,88,89,91,92,95,96,99,100,101,102,168,171,177,181,192,218,222,228,233,244,269,286,308,321,337,],[-60,-61,-189,-75,-62,69,-188,-58,-64,117,-63,-59,-65,-67,-80,-84,-87,-75,-88,117,-90,-76,-89,-93,-83,-85,161,-81,-79,-82,-86,-78,-77,-65,-75,-191,-202,235,239,-73,-94,-190,-201,-68,-91,117,-74,-70,-92,]),'DO':([0,4,7,8,11,12,20,36,37,53,54,67,68,116,124,131,133,176,199,205,207,212,215,216,247,250,292,302,328,330,333,348,351,353,360,],[8,-7,-6,8,-3,-8,-5,-4,8,-140,8,8,-14,-2,8,-139,8,-11,-10,8,-9,8,-13,-12,8,8,8,8,8,8,8,8,8,8,8,]),'NUM':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[43,-7,-6,43,-3,-8,-5,43,43,-4,43,43,43,-140,43,-153,-152,-156,43,-157,-155,-154,-151,43,-14,43,43,43,43,43,43,43,43,-2,43,43,-139,43,-122,43,-123,-125,-124,-126,-110,-118,-109,-112,-113,43,-116,-115,-111,-117,-114,-119,43,43,-129,-131,-130,-11,43,-10,43,-9,43,43,-13,-12,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'GTR':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,155,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'WHILE':([1,3,5,8,10,18,19,30,40,41,52,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,125,127,129,141,166,168,171,177,187,188,189,190,193,195,196,218,220,221,222,225,228,233,244,254,257,269,295,299,308,314,317,318,321,323,324,326,337,339,346,],[-60,-61,-189,49,-62,-188,-58,-64,-63,-59,49,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-174,-175,-173,-132,-133,-138,-191,-202,-32,-35,-37,-33,-38,-36,-34,-73,-121,-108,-94,-128,-190,-201,-68,-186,-184,-91,-185,-179,-74,-99,-39,-40,-70,-183,-178,-177,-92,-100,-176,]),'ID':([0,4,7,8,11,12,19,20,23,25,28,31,34,36,37,44,47,49,51,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,109,112,113,116,117,121,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,173,174,175,176,179,197,198,199,205,207,208,209,211,212,214,215,216,217,219,226,229,230,236,237,238,239,243,247,248,250,252,256,264,268,271,273,292,296,300,302,305,311,316,319,320,328,330,331,333,348,351,353,360,],[19,-7,-6,19,-3,-8,-58,-5,19,19,19,19,19,-4,19,19,19,19,19,-140,19,-153,-152,-156,19,-157,-155,-154,-151,19,-14,19,19,19,19,19,19,19,-56,19,19,-2,19,19,19,-139,19,-122,19,-123,-125,-124,-126,-110,-118,-109,-112,-113,19,-116,-115,-111,-117,-114,-119,19,19,-129,-131,-130,19,19,19,-11,19,19,19,-10,19,-9,19,19,19,19,19,-13,-12,19,19,19,19,-57,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'MINUS':([1,3,5,10,18,19,23,28,30,40,41,44,49,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,87,88,89,92,94,95,96,98,99,100,101,102,107,112,117,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,168,171,177,197,211,217,218,219,220,221,222,225,226,228,229,233,236,237,238,239,243,244,248,252,268,269,271,273,286,296,300,308,311,316,320,321,337,],[-60,-61,-189,-62,-188,-58,71,71,-64,-63,-59,71,71,-153,-152,-156,71,-157,-155,-67,-154,-151,71,-134,-127,-80,-84,-87,-135,-88,-66,-90,145,-76,-89,-137,-136,71,-83,-85,-81,-120,-79,-82,71,-86,-78,-77,-65,71,71,71,-132,-122,71,-123,-125,-124,-126,-110,-118,-109,-112,-113,71,-116,-115,-111,-117,-114,-119,71,71,-129,-131,-130,-133,-138,-191,-202,71,71,71,-73,71,-121,145,-94,-128,71,-190,71,-201,71,71,71,71,71,-68,71,71,71,-91,71,71,-66,71,71,-74,71,71,71,-70,-92,]),'BY':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,257,258,259,269,308,314,321,337,339,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-184,300,-181,-91,-74,-99,-70,-92,-100,]),'DIF':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,158,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'UPPER':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[46,-7,-6,46,-3,-8,-5,46,46,-4,46,46,46,-140,46,-153,-152,-156,46,-157,-155,-154,-151,46,-14,46,46,46,46,46,46,46,46,-2,46,46,-139,46,-122,46,-123,-125,-124,-126,-110,-118,-109,-112,-113,46,-116,-115,-111,-117,-114,-119,46,46,-129,-131,-130,-11,46,-10,46,-9,46,46,-13,-12,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'SCONST':([23,28,44,49,58,59,60,61,62,63,65,66,69,71,87,97,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[79,79,79,79,-153,-152,-156,79,-157,-155,-154,-151,79,79,79,79,79,79,79,79,-122,79,-123,-125,-124,-126,-110,-118,-109,-112,-113,79,-116,-115,-111,-117,-114,-119,79,79,-129,-131,-130,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'TIMESASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,171,177,218,228,233,244,308,321,],[-60,-61,-189,65,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,-191,-202,-73,-190,-201,-68,-74,-70,]),'END':([4,7,11,12,20,36,68,116,176,199,207,215,216,302,328,330,333,348,351,353,360,],[-7,-6,-3,-8,-5,-4,-14,-2,-11,-10,-9,-13,-12,329,347,349,352,355,359,361,363,]),'COLON':([1,3,5,10,13,18,19,30,39,40,41,50,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,138,139,141,166,168,171,177,200,201,202,218,220,221,222,223,225,228,233,244,269,278,279,286,308,314,321,337,339,],[-60,-61,-189,-62,67,-188,-58,-64,-141,-63,-59,124,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,217,-43,-132,-133,-138,-191,-202,243,-101,-71,-73,-121,-108,-94,268,-128,-190,-201,-68,-91,316,-43,-66,-74,-99,-70,-92,-100,]),'LOWER':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[16,-7,-6,16,-3,-8,-5,16,16,-4,16,16,16,-140,16,-153,-152,-156,16,-157,-155,-154,-151,16,-14,16,16,16,16,16,16,16,16,-2,16,16,-139,16,-122,16,-123,-125,-124,-126,-110,-118,-109,-112,-113,16,-116,-115,-111,-117,-114,-119,16,16,-129,-131,-130,-11,16,-10,16,-9,16,16,-13,-12,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'RBRACK':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,139,140,141,166,168,171,177,187,188,189,190,193,195,196,201,202,203,218,220,221,222,224,225,228,233,244,265,266,267,269,276,277,283,284,285,287,288,289,308,309,314,317,318,321,337,339,341,344,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-96,218,-132,-133,-138,-191,-202,-32,-35,-37,-33,-38,-36,-34,-101,-69,244,-73,-121,-108,-94,269,-128,-190,-201,-68,-44,308,-95,-91,-49,315,-52,-54,319,-53,-72,321,-74,337,-99,-39,-40,-70,-92,-100,-42,-51,]),'MINUSASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,171,177,218,228,233,244,308,321,],[-60,-61,-189,58,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,-191,-202,-73,-190,-201,-68,-74,-70,]),'THEN':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,118,119,141,166,167,168,171,177,218,220,221,222,225,228,233,244,269,293,308,313,314,321,337,338,339,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-102,205,-132,-133,226,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,205,-74,226,-99,-70,-92,226,-100,]),'RPAREN':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,107,112,141,160,166,168,169,170,171,172,177,178,180,182,183,184,186,187,188,189,190,191,193,194,195,196,214,218,220,221,222,225,228,233,234,244,261,263,265,269,275,280,282,306,307,308,314,315,317,318,321,334,335,336,337,339,341,342,343,350,356,358,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,171,177,-132,222,-133,-138,-193,-194,-191,228,-202,233,-31,-47,-30,-41,-29,-32,-35,-37,-33,-28,-38,-46,-36,-34,262,-73,-121,-108,-94,-128,-190,-201,-45,-68,-220,304,-44,-91,-192,317,318,-223,-221,-74,-99,-48,-39,-40,-70,-219,-222,-224,-92,-100,-42,-50,-55,357,-227,362,]),'TO':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,141,166,168,171,177,201,218,220,221,222,225,228,233,244,257,258,259,269,297,298,308,314,321,325,327,337,339,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-101,-73,-121,-108,-94,-128,-190,-201,-68,-184,296,-181,-91,296,296,-74,-99,-70,296,-182,-92,-100,]),'FOR':([8,],[51,]),'PROC':([67,],[135,]),'GEQ':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,154,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'PRINT':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[2,-7,-6,2,-3,-8,-5,2,2,-4,2,2,2,-140,2,-153,-152,-156,2,-157,-155,-154,-151,2,-14,2,2,2,2,2,2,2,2,-2,2,2,-139,2,-122,2,-123,-125,-124,-126,-110,-118,-109,-112,-113,2,-116,-115,-111,-117,-114,-119,2,2,-129,-131,-130,-11,2,-10,2,-9,2,2,-13,-12,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'TIMES':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,81,82,83,85,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-76,-89,-137,-136,-83,-85,-81,163,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,163,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'SUCC':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[22,-7,-6,22,-3,-8,-5,22,22,-4,22,22,22,-140,22,-153,-152,-156,22,-157,-155,-154,-151,22,-14,22,22,22,22,22,22,22,22,-2,22,22,-139,22,-122,22,-123,-125,-124,-126,-110,-118,-109,-112,-113,22,-116,-115,-111,-117,-114,-119,22,22,-129,-131,-130,-11,22,-10,22,-9,22,22,-13,-12,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'RESULT':([0,4,7,8,11,12,20,36,37,53,54,67,68,116,124,131,133,176,199,205,207,212,215,216,247,250,292,302,328,330,333,348,351,353,360,],[23,-7,-6,23,-3,-8,-5,-4,23,-140,23,23,-14,-2,23,-139,23,-11,-10,23,-9,23,-13,-12,23,23,23,23,23,23,23,23,23,23,23,]),'CHAR':([19,109,113,121,174,179,209,230,239,256,264,319,320,331,],[-58,-56,193,193,193,193,193,-57,193,193,193,193,193,193,]),'EXIT':([0,4,7,8,11,12,20,36,37,53,54,67,68,116,124,131,133,176,199,205,207,212,215,216,247,250,292,302,328,330,333,348,351,353,360,],[25,-7,-6,25,-3,-8,-5,-4,25,-140,25,25,-14,-2,25,-139,25,-11,-10,25,-9,25,-13,-12,25,25,25,25,25,25,25,25,25,25,25,]),'INT':([19,109,113,121,174,179,209,230,239,256,264,319,320,331,],[-58,-56,195,195,195,195,195,-57,195,195,195,195,195,195,]),'ELSIF':([1,3,5,10,18,19,30,40,41,53,64,68,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,131,141,166,168,171,177,204,205,215,218,220,221,222,225,227,228,233,244,249,250,269,270,272,308,314,321,322,337,339,340,354,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-140,-67,-14,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-139,-132,-133,-138,-191,-202,248,-228,-13,-73,-121,-108,-94,-128,273,-190,-201,-68,-161,-160,-91,-103,311,-74,-99,-70,248,-92,-100,-106,-105,]),'RETURN':([0,4,7,8,11,12,20,36,37,53,54,67,68,116,124,131,133,176,199,205,207,212,215,216,247,250,292,302,328,330,333,348,351,353,360,],[28,-7,-6,28,-3,-8,-5,-4,28,-140,28,28,-14,-2,28,-139,28,-11,-10,28,-9,28,-13,-12,28,28,28,28,28,28,28,28,28,28,28,]),'CHARS':([19,109,113,121,174,179,230,264,319,331,],[-58,-56,181,181,181,181,-57,181,181,181,]),'NULL':([23,28,44,49,58,59,60,61,62,63,65,66,69,71,87,97,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[82,82,82,82,-153,-152,-156,82,-157,-155,-154,-151,82,82,82,82,82,82,82,82,-122,82,-123,-125,-124,-126,-110,-118,-109,-112,-113,82,-116,-115,-111,-117,-114,-119,82,82,-129,-131,-130,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'FALSE':([23,28,44,49,58,59,60,61,62,63,65,66,69,71,87,97,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[99,99,99,99,-153,-152,-156,99,-157,-155,-154,-151,99,99,99,99,99,99,99,99,-122,99,-123,-125,-124,-126,-110,-118,-109,-112,-113,99,-116,-115,-111,-117,-114,-119,99,99,-129,-131,-130,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'TYPE':([0,4,7,11,12,20,36,37,68,116,176,199,207,215,216,302,328,330,333,348,351,353,360,],[31,-7,-6,-3,-8,-5,-4,31,-14,-2,-11,-10,-9,-13,-12,31,31,31,31,31,31,31,31,]),'SYN':([0,4,7,11,12,20,36,37,68,116,176,199,207,215,216,302,328,330,333,348,351,353,360,],[34,-7,-6,-3,-8,-5,-4,34,-14,-2,-11,-10,-9,-13,-12,34,34,34,34,34,34,34,34,]),'EQUALS':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,152,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'$end':([4,7,11,12,17,20,36,37,68,116,176,199,207,215,216,],[-7,-6,-3,-8,0,-5,-4,-1,-14,-2,-11,-10,-9,-13,-12,]),'LENGTH':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[35,-7,-6,35,-3,-8,-5,35,35,-4,35,35,35,-140,35,-153,-152,-156,35,-157,-155,-154,-151,35,-14,35,35,35,35,35,35,35,35,-2,35,35,-139,35,-122,35,-123,-125,-124,-126,-110,-118,-109,-112,-113,35,-116,-115,-111,-117,-114,-119,35,35,-129,-131,-130,-11,35,-10,35,-9,35,35,-13,-12,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'CCONST':([23,28,44,49,58,59,60,61,62,63,65,66,69,71,87,97,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[77,77,77,77,-153,-152,-156,77,-157,-155,-154,-151,77,77,77,77,77,77,77,77,-122,77,-123,-125,-124,-126,-110,-118,-109,-112,-113,77,-116,-115,-111,-117,-114,-119,77,77,-129,-131,-130,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'BOOL':([19,109,113,121,174,179,209,230,239,256,264,319,320,331,],[-58,-56,189,189,189,189,189,-57,189,189,189,189,189,189,]),'REF':([19,109,113,121,174,179,230,264,319,331,],[-58,-56,179,179,179,179,-57,179,179,179,]),'DIVIDE':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,81,82,83,85,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-76,-89,-137,-136,-83,-85,-81,165,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,165,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'PERC':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,81,82,83,85,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-76,-89,-137,-136,-83,-85,-81,164,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,164,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'ASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,108,109,113,126,128,171,177,180,182,183,184,185,186,187,188,189,190,191,193,194,195,196,206,218,228,230,233,234,244,308,315,317,318,321,342,343,],[-60,-61,-189,66,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,174,-56,197,211,-180,-191,-202,-31,-47,-30,-41,237,-29,-32,-35,-37,-33,-28,-38,-46,-36,-34,252,-73,-190,-57,-201,-45,-68,-74,-48,-39,-40,-70,-50,-55,]),'ELSE':([1,3,5,10,18,19,30,40,41,53,64,68,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,131,141,166,168,171,177,204,205,215,218,220,221,222,225,227,228,233,244,249,250,269,270,272,308,314,321,322,337,339,340,354,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-140,-67,-14,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-139,-132,-133,-138,-191,-202,247,-228,-13,-73,-121,-108,-94,-128,271,-190,-201,-68,-161,-160,-91,-103,271,-74,-99,-70,247,-92,-100,-106,-105,]),'PLUS':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,146,-76,-89,-137,-136,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,146,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'IN':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,126,128,141,166,168,171,177,210,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,159,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,209,-180,-132,-133,-138,-191,-202,256,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'NOT':([23,28,44,49,58,59,60,61,62,63,65,66,69,87,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[97,97,97,97,-153,-152,-156,97,-157,-155,-154,-151,97,97,97,97,97,97,-122,97,-123,-125,-124,-126,-110,-118,-109,-112,-113,97,-116,-115,-111,-117,-114,-119,97,97,-129,-131,-130,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'SEMICOL':([1,3,5,10,14,18,19,21,26,27,28,30,33,38,40,41,42,45,48,52,55,56,57,64,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,99,100,101,102,104,105,106,110,111,114,115,118,120,122,123,125,127,129,130,132,134,136,137,141,166,168,171,177,180,182,183,184,186,187,188,189,190,191,193,194,195,196,206,213,218,220,221,222,225,228,231,232,233,234,240,241,242,244,246,251,253,254,257,260,262,269,281,290,294,295,299,301,304,308,314,315,317,318,321,323,324,326,329,332,337,339,342,343,346,347,349,352,355,357,359,361,362,363,],[-60,-61,-189,-62,68,-188,-58,-149,-142,-143,-198,-64,-148,-146,-63,-59,-144,-147,-145,-172,-171,-169,133,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-200,-136,-97,-83,-85,-199,-81,-98,-120,-79,-82,-86,-78,-77,-65,-196,-141,-197,-26,176,-21,199,-102,-16,207,-187,-174,-175,-173,-170,-168,-150,215,216,-132,-133,-138,-191,-202,-31,-47,-30,-41,-29,-32,-35,-37,-33,-28,-38,-46,-36,-34,-18,-167,-73,-121,-108,-94,-128,-190,-27,-25,-201,-45,-24,-23,-20,-68,-159,-17,-15,-186,-184,-166,302,-91,-22,-158,-19,-185,-179,328,333,-74,-99,-48,-39,-40,-70,-183,-178,-177,-218,351,-92,-100,-50,-55,-176,-216,-217,-215,-214,-226,-212,-213,-225,-211,]),'READ':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,71,87,97,98,103,107,112,116,117,124,131,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[24,-7,-6,24,-3,-8,-5,24,24,-4,24,24,24,-140,24,-153,-152,-156,24,-157,-155,-154,-151,24,-14,24,24,24,24,24,24,24,24,-2,24,24,-139,24,-122,24,-123,-125,-124,-126,-110,-118,-109,-112,-113,24,-116,-115,-111,-117,-114,-119,24,24,-129,-131,-130,-11,24,-10,24,-9,24,24,-13,-12,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'DOWN':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,126,128,141,166,168,171,177,201,218,220,221,222,225,228,233,244,257,258,259,269,298,308,314,321,327,337,339,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,210,-180,-132,-133,-138,-191,-202,-101,-73,-121,-108,-94,-128,-190,-201,-68,-184,297,-181,-91,325,-74,-99,-70,-182,-92,-100,]),'FI':([1,3,5,10,18,19,30,40,41,53,64,68,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,93,94,95,96,99,100,101,102,131,141,166,168,171,177,204,205,215,218,220,221,222,225,228,233,244,245,247,249,250,269,274,291,292,308,310,312,314,321,322,337,339,345,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-140,-67,-14,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,-97,-83,-85,-81,-98,-120,-79,-82,-86,-78,-77,-65,-139,-132,-133,-138,-191,-202,246,-228,-13,-73,-121,-108,-94,-128,-190,-201,-68,290,-228,-161,-160,-91,314,-163,-162,-74,-104,339,-99,-70,-165,-92,-100,-164,]),'DIVIDEASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,171,177,218,228,233,244,308,321,],[-60,-61,-189,63,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,-191,-202,-73,-190,-201,-68,-74,-70,]),'RETURNS':([262,304,],[303,303,]),'IF':([0,4,7,8,11,12,20,23,28,36,37,44,49,53,54,58,59,60,61,62,63,65,66,67,68,69,87,98,107,112,116,117,124,131,133,161,176,197,199,205,207,211,212,215,216,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[44,-7,-6,44,-3,-8,-5,98,98,-4,44,98,98,-140,44,-153,-152,-156,98,-157,-155,-154,-151,44,-14,98,98,98,98,98,-2,98,44,-139,44,98,-11,98,-10,44,-9,98,44,-13,-12,98,98,98,98,98,98,98,98,98,44,98,44,98,98,98,98,44,98,98,44,98,98,98,44,44,44,44,44,44,44,]),'TRUE':([23,28,44,49,58,59,60,61,62,63,65,66,69,71,87,97,98,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[75,75,75,75,-153,-152,-156,75,-157,-155,-154,-151,75,75,75,75,75,75,75,75,-122,75,-123,-125,-124,-126,-110,-118,-109,-112,-113,75,-116,-115,-111,-117,-114,-119,75,75,-129,-131,-130,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'OD':([8,53,54,68,131,133,212,215,],[56,-140,132,-14,-139,213,260,-13,]),'PERCASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,171,177,218,228,233,244,308,321,],[-60,-61,-189,60,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,-191,-202,-73,-190,-201,-68,-74,-70,]),'ARRAY':([19,109,113,121,174,179,230,264,319,331,],[-58,-56,192,192,192,192,-57,192,192,192,]),'LSS':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,157,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'AND':([1,3,5,10,18,19,30,40,41,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,92,94,95,96,99,100,101,102,141,166,168,171,177,218,220,221,222,225,228,233,244,269,286,308,321,337,],[-60,-61,-189,-62,-188,-58,-64,-63,-59,-67,-134,-127,-80,-84,-87,-135,-88,-66,-90,-107,-76,-89,-137,-136,156,-83,-85,-81,-120,-79,-82,-86,-78,-77,-65,-132,-133,-138,-191,-202,-73,-121,-108,-94,-128,-190,-201,-68,-91,-66,-74,-70,-92,]),'CONCATASSIGN':([1,3,5,9,10,18,19,30,39,40,41,42,64,78,171,177,218,228,233,244,308,321,],[-60,-61,-189,62,-62,-188,-58,-64,-66,-63,-59,-65,-67,-66,-191,-202,-73,-190,-201,-68,-74,-70,]),'ARROW':([1,3,5,9,10,18,19,23,28,30,39,40,41,42,44,49,58,59,60,61,62,63,64,65,66,69,71,76,78,87,97,98,102,107,112,117,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,168,171,177,197,211,217,218,219,226,228,229,233,236,237,238,239,243,244,248,252,268,271,273,286,296,300,308,311,316,320,321,],[-60,-61,-189,64,-62,-188,-58,103,103,-64,-66,-63,-59,-65,103,103,-153,-152,-156,103,-157,-155,-67,-154,-151,103,103,64,-66,103,103,103,-65,103,103,103,-122,103,-123,-125,-124,-126,-110,-118,-109,-112,-113,103,-116,-115,-111,-117,-114,-119,103,103,-129,-131,-130,64,-191,-202,103,103,103,-73,103,103,-190,103,-201,103,103,103,103,103,-68,103,103,103,103,103,-66,103,103,-74,103,103,103,-70,]),'DCL':([0,4,7,11,12,20,36,37,68,116,176,199,207,215,216,302,328,330,333,348,351,353,360,],[47,-7,-6,-3,-8,-5,-4,47,-14,-2,-11,-10,-9,-13,-12,47,47,47,47,47,47,47,47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'dereferenced_reference':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'operand4':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[70,70,70,70,70,70,141,70,166,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'operator1':([86,],[153,]),'formal_parameter_list':([214,],[263,]),'string_element':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'operand3':([23,28,44,49,61,69,87,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,225,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'integer_literal':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,235,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,276,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'character_string_literal':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'location':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[9,9,76,76,9,76,76,9,76,9,76,76,76,76,76,168,76,76,76,9,9,76,76,76,76,76,9,76,9,76,76,76,76,76,76,76,76,76,9,76,9,76,76,76,76,9,76,76,9,76,76,76,9,9,9,9,9,9,9,]),'result_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'string_slice':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'statement':([0,37,302,328,330,333,348,351,353,360,],[11,116,11,11,116,11,116,11,116,116,]),'lower_bound':([69,161,236,238,239,320,],[138,223,278,278,278,278,]),'mode_definition':([31,175,],[110,232,]),'iteration':([51,],[129,]),'index_mode':([239,320,],[283,344,]),'action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[14,14,14,14,136,136,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'result_attribute':([350,],[358,]),'integer_mode':([113,121,174,179,209,239,256,264,319,320,331,],[187,187,187,187,187,187,187,187,187,187,187,]),'discrete_range_mode':([113,121,174,179,209,239,256,264,319,320,331,],[188,188,188,188,188,188,188,188,188,188,188,]),'else_clause':([204,322,],[245,345,]),'parameter_spec':([264,],[307,]),'synonym_statement':([0,37,302,328,330,333,348,351,353,360,],[20,20,20,20,20,20,20,20,20,20,]),'do_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'for_control':([8,],[52,]),'string_mode':([113,121,174,179,264,319,331,],[194,194,194,194,194,194,194,]),'operand0':([23,28,44,49,61,69,87,98,107,112,117,161,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'assignment_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'mode_name':([113,121,174,179,264,319,331,],[191,191,191,191,191,191,191,]),'arithmetic_additive_operator':([80,221,],[142,142,]),'procedure_name':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'reference_mode':([113,121,174,179,264,319,331,],[183,183,183,183,183,183,183,]),'operator2':([80,221,],[143,143,]),'parameter_list':([107,112,],[172,178,]),'assigning_operator':([9,],[61,]),'if_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'start_value':([211,],[258,]),'operand2':([23,28,44,49,61,69,87,98,107,112,117,143,153,161,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[94,94,94,94,94,94,94,94,94,94,94,220,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'literal_range':([236,238,239,320,],[280,282,284,284,]),'left_element':([117,],[200,]),'parenthesized_expression':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'index_mode_list':([239,],[285,]),'mode':([113,121,174,179,264,319,331,],[185,206,231,234,306,343,350,]),'statement_list':([0,302,328,333,351,],[37,330,348,353,360,]),'action_statement_list':([8,133,205,247,],[54,212,250,292,]),'return_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'range_enumeration':([51,],[125,]),'array_element':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'conditional_expression':([23,28,44,49,61,69,87,98,107,112,117,161,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'location_name':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'step_value':([258,],[298,]),'call_action':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[42,42,102,102,42,102,102,42,102,42,102,102,102,102,102,102,102,102,102,42,42,102,102,102,102,102,42,102,42,102,102,102,102,102,102,102,102,102,42,102,42,102,102,102,102,42,102,102,42,102,102,102,42,42,42,42,42,42,42,]),'elsif_expression':([227,],[272,]),'parameter':([107,112,229,],[169,169,275,]),'value_array_slice':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'step_enumeration':([51,],[127,]),'start_element':([117,],[203,]),'boolean_expression':([44,49,98,248,273,311,],[119,123,167,293,313,338,]),'exit_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'initialization':([206,],[251,]),'membership_operator':([86,],[148,]),'formal_parameter':([214,305,],[261,334,]),'procedure_statement':([0,37,302,328,330,333,348,351,353,360,],[4,4,4,4,4,4,4,4,4,4,]),'builtin_call':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'synonym_definition':([34,198,],[114,242,]),'arithmetic_multiplicative_operator':([94,220,],[162,162,]),'identifier':([0,8,23,25,28,31,34,37,44,47,49,51,54,61,67,69,71,87,97,98,103,107,112,113,117,121,124,133,143,153,161,162,173,174,175,179,197,198,205,208,209,211,212,214,217,219,226,229,236,237,238,239,243,247,248,250,252,256,264,268,271,273,292,296,300,302,305,311,316,319,320,328,330,331,333,348,351,353,360,],[39,39,78,105,78,109,109,39,78,109,78,128,39,78,78,78,78,78,78,78,78,78,78,184,78,184,78,39,78,78,78,78,230,184,109,184,78,109,39,109,255,78,39,109,78,78,78,78,78,78,78,286,78,39,78,39,78,255,184,78,78,78,39,78,78,39,109,78,78,184,286,39,39,184,39,39,39,39,39,]),'control_part':([8,],[57,]),'label_id':([0,8,25,37,54,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[13,50,104,13,50,50,50,50,50,50,50,13,13,13,13,13,13,13,13,]),'operand1':([23,28,44,49,61,69,87,98,107,112,117,153,161,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[80,80,80,80,80,80,80,80,80,80,80,221,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'action_statement':([0,8,37,54,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[12,53,12,131,53,53,131,53,131,131,12,12,12,12,12,12,12,12,]),'array_location':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'newmode_list':([31,],[111,]),'array_primitive_value':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'array_mode':([113,121,174,179,264,319,331,],[182,182,182,182,182,182,182,]),'synonym_list':([34,],[115,]),'primitive_value':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'program':([0,],[17,]),'expression':([23,28,44,49,61,69,87,98,107,112,117,161,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[84,84,118,118,134,139,160,118,170,170,201,139,240,257,265,267,270,170,279,240,279,279,201,118,294,265,310,118,257,201,118,265,279,]),'string_length':([235,],[277,]),'expression_list':([69,161,],[140,224,]),'procedure_call':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'identifier_list':([31,34,47,175,198,208,214,305,],[108,113,121,108,113,121,264,264,]),'then_expression':([167,313,338,],[227,340,354,]),'builtin_name':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'newmode_statement':([0,37,302,328,330,333,348,351,353,360,],[7,7,7,7,7,7,7,7,7,7,]),'string_concatenation_operator':([80,221,],[144,144,]),'literal':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'boolean_literal':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'constant_expression':([197,237,],[241,281,]),'composite_mode':([113,121,174,179,264,319,331,],[180,180,180,180,180,180,180,]),'bracketed_action':([0,8,37,54,67,124,133,205,212,247,250,292,302,328,330,333,348,351,353,360,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'empty_literal':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'relational_operator':([86,],[150,]),'result':([23,28,],[90,106,]),'empty':([205,247,],[249,291,]),'declaration':([47,208,],[120,253,]),'loop_counter':([51,],[126,]),'character_literal':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'result_spec':([262,304,],[301,332,]),'then_clause':([119,293,],[204,322,]),'element_mode':([319,],[342,]),'declaration_statement':([0,37,302,328,330,333,348,351,353,360,],[36,36,36,36,36,36,36,36,36,36,]),'procedure_definition':([67,],[137,]),'upper_bound':([217,268,316,],[266,309,341,]),'boolean_mode':([113,121,174,179,209,239,256,264,319,320,331,],[190,190,190,190,190,190,190,190,190,190,190,]),'else_expression':([227,272,],[274,312,]),'discrete_mode':([113,121,174,179,209,239,256,264,319,320,331,],[186,186,186,186,254,287,295,186,186,287,186,]),'integer_expression':([117,243,300,],[202,288,327,]),'while_control':([8,52,],[55,130,]),'declaration_list':([47,],[122,]),'discrete_expression':([211,296,],[259,323,]),'referenced_location':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'value_array_element':([23,28,44,49,61,69,71,87,97,98,107,112,117,143,153,161,162,197,211,217,219,226,229,236,237,238,239,243,248,252,268,271,273,296,300,311,316,320,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'array_slice':([0,8,23,28,37,44,49,54,61,67,69,71,87,97,98,103,107,112,117,124,133,143,153,161,162,197,205,211,212,217,219,226,229,236,237,238,239,243,247,248,250,252,268,271,273,292,296,300,302,311,316,320,328,330,333,348,351,353,360,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'end_value':([258,297,298,325,],[299,324,326,346,]),'right_element':([243,],[289,]),'parameter_attribute':([306,],[335,]),'character_mode':([113,121,174,179,209,239,256,264,319,320,331,],[196,196,196,196,196,196,196,196,196,196,196,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',60),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',67),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',74),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',75),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',76),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',77),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',78),
  ('declaration_statement -> DCL declaration_list SEMICOL','declaration_statement',3,'p_declaration_statement','lyaparser.py',82),
  ('synonym_statement -> SYN synonym_list SEMICOL','synonym_statement',3,'p_synonym_statement','lyaparser.py',87),
  ('newmode_statement -> TYPE newmode_list SEMICOL','newmode_statement',3,'p_newmode_statement','lyaparser.py',92),
  ('procedure_statement -> label_id COLON procedure_definition SEMICOL','procedure_statement',4,'p_procedure_statement','lyaparser.py',97),
  ('action_statement -> label_id COLON action SEMICOL','action_statement',4,'p_action_statement_label','lyaparser.py',102),
  ('action_statement -> action SEMICOL','action_statement',2,'p_action_statement','lyaparser.py',106),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',112),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',113),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',120),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',121),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',128),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',134),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',135),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition_mode','lyaparser.py',142),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition_mode','lyaparser.py',143),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',150),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',156),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',157),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',164),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',168),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',169),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',170),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',171),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',175),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',176),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',177),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',178),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',182),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',186),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',190),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',194),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',195),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',199),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',207),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',211),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',215),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',219),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',223),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode_string','lyaparser.py',224),
  ('string_mode -> CHARS LBRACK string_length RBRACK','string_mode',4,'p_string_mode','lyaparser.py',228),
  ('string_length -> integer_literal','string_length',1,'p_string_length','lyaparser.py',232),
  ('array_mode -> ARRAY LBRACK index_mode_list RBRACK element_mode','array_mode',5,'p_array_mode','lyaparser.py',236),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',240),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',241),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',248),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',249),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',253),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',259),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',260),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',267),
  ('location -> location_name','location',1,'p_location','lyaparser.py',273),
  ('location -> dereferenced_reference','location',1,'p_location','lyaparser.py',274),
  ('location -> string_element','location',1,'p_location','lyaparser.py',275),
  ('location -> string_slice','location',1,'p_location','lyaparser.py',276),
  ('location -> array_element','location',1,'p_location','lyaparser.py',277),
  ('location -> array_slice','location',1,'p_location','lyaparser.py',278),
  ('location -> call_action','location',1,'p_location','lyaparser.py',279),
  ('location_name -> identifier','location_name',1,'p_location_name','lyaparser.py',283),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaparser.py',287),
  ('string_element -> identifier LBRACK start_element RBRACK','string_element',4,'p_string_element','lyaparser.py',291),
  ('start_element -> integer_expression','start_element',1,'p_start_element','lyaparser.py',295),
  ('string_slice -> identifier LBRACK left_element COLON right_element RBRACK','string_slice',6,'p_string_slice','lyaparser.py',299),
  ('left_element -> integer_expression','left_element',1,'p_left_element','lyaparser.py',307),
  ('right_element -> integer_expression','right_element',1,'p_right_element','lyaparser.py',311),
  ('array_element -> array_location LBRACK expression_list RBRACK','array_element',4,'p_array_element','lyaparser.py',315),
  ('array_slice -> array_location LBRACK lower_bound COLON upper_bound RBRACK','array_slice',6,'p_array_slice','lyaparser.py',319),
  ('array_location -> location','array_location',1,'p_array_location','lyaparser.py',323),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',329),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',330),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',331),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',332),
  ('literal -> integer_literal','literal',1,'p_literal','lyaparser.py',336),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaparser.py',337),
  ('literal -> character_literal','literal',1,'p_literal','lyaparser.py',338),
  ('literal -> empty_literal','literal',1,'p_literal','lyaparser.py',339),
  ('literal -> character_string_literal','literal',1,'p_literal','lyaparser.py',340),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','lyaparser.py',344),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaparser.py',348),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaparser.py',349),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','lyaparser.py',353),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaparser.py',357),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal_char','lyaparser.py',361),
  ('value_array_element -> array_primitive_value LBRACK expression_list RBRACK','value_array_element',4,'p_value_array_element','lyaparser.py',367),
  ('value_array_slice -> array_primitive_value LBRACK lower_bound COLON upper_bound RBRACK','value_array_slice',6,'p_value_array_slice','lyaparser.py',371),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',375),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',381),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',385),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',386),
  ('expression -> operand0','expression',1,'p_expression','lyaparser.py',393),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',394),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',398),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression_elsif','lyaparser.py',402),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaparser.py',406),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',410),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',414),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',418),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression_elsif','lyaparser.py',422),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',426),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaparser.py',430),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0_op1','lyaparser.py',434),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaparser.py',438),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaparser.py',439),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaparser.py',443),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaparser.py',444),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','lyaparser.py',445),
  ('relational_operator -> DIF','relational_operator',1,'p_relational_operator','lyaparser.py',446),
  ('relational_operator -> GTR','relational_operator',1,'p_relational_operator','lyaparser.py',447),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','lyaparser.py',448),
  ('relational_operator -> LSS','relational_operator',1,'p_relational_operator','lyaparser.py',449),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','lyaparser.py',450),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaparser.py',454),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaparser.py',458),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1_op2','lyaparser.py',462),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaparser.py',466),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaparser.py',467),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',471),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaparser.py',472),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','lyaparser.py',476),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaparser.py',480),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2_op3','lyaparser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',488),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',489),
  ('arithmetic_multiplicative_operator -> PERC','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaparser.py',490),
  ('operand3 -> MINUS operand4','operand3',2,'p_operand3_uminus','lyaparser.py',494),
  ('operand3 -> NOT operand4','operand3',2,'p_operand3_monadic','lyaparser.py',498),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaparser.py',502),
  ('operand4 -> location','operand4',1,'p_operand4','lyaparser.py',507),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaparser.py',508),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaparser.py',509),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',513),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',519),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',520),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',527),
  ('action -> bracketed_action','action',1,'p_action','lyaparser.py',531),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',532),
  ('action -> call_action','action',1,'p_action','lyaparser.py',533),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',534),
  ('action -> return_action','action',1,'p_action','lyaparser.py',535),
  ('action -> result_action','action',1,'p_action','lyaparser.py',536),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',540),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaparser.py',541),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',545),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',550),
  ('assigning_operator -> PLUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',551),
  ('assigning_operator -> MINUSASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',552),
  ('assigning_operator -> TIMESASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',553),
  ('assigning_operator -> DIVIDEASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',554),
  ('assigning_operator -> PERCASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',555),
  ('assigning_operator -> CONCATASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',556),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action_else','lyaparser.py',562),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',566),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',570),
  ('then_clause -> THEN empty','then_clause',2,'p_then_clause_empty','lyaparser.py',574),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',578),
  ('else_clause -> ELSE empty','else_clause',2,'p_else_clause_empty','lyaparser.py',582),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause_if_else','lyaparser.py',586),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause_if','lyaparser.py',590),
  ('do_action -> DO control_part SEMICOL action_statement_list OD','do_action',5,'p_do_action_control_action','lyaparser.py',594),
  ('do_action -> DO control_part SEMICOL OD','do_action',4,'p_do_action_control','lyaparser.py',598),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',602),
  ('do_action -> DO OD','do_action',2,'p_do_action_zero','lyaparser.py',606),
  ('control_part -> for_control while_control','control_part',2,'p_control_part_forwhile','lyaparser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',614),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',619),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',623),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',624),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration_stepvalue_down','lyaparser.py',628),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration_stepvalue','lyaparser.py',632),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration_down','lyaparser.py',636),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',640),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaparser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',660),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration_down','lyaparser.py',664),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',672),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',678),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',679),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call_parameter','lyaparser.py',683),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',687),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','lyaparser.py',691),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaparser.py',692),
  ('parameter -> expression','parameter',1,'p_parameter','lyaparser.py',699),
  ('procedure_name -> identifier','procedure_name',1,'p_procedure_name','lyaparser.py',703),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','lyaparser.py',707),
  ('return_action -> RETURN result','return_action',2,'p_return_action_result','lyaparser.py',711),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',715),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaparser.py',719),
  ('result -> expression','result',1,'p_result','lyaparser.py',723),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call_parameter','lyaparser.py',727),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',731),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',735),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',736),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',737),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',738),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',739),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',740),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',741),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',742),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL statement_list END','procedure_definition',8,'p_procedure_definition_prs','lyaparser.py',748),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMICOL END','procedure_definition',7,'p_procedure_definition_pr','lyaparser.py',752),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_ps','lyaparser.py',756),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL statement_list END','procedure_definition',7,'p_procedure_definition_rs','lyaparser.py',760),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMICOL END','procedure_definition',6,'p_procedure_definition_p','lyaparser.py',764),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMICOL END','procedure_definition',6,'p_procedure_definition_r','lyaparser.py',768),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL statement_list END','procedure_definition',6,'p_procedure_definition_s','lyaparser.py',772),
  ('procedure_definition -> PROC LPAREN RPAREN SEMICOL END','procedure_definition',5,'p_procedure_definition','lyaparser.py',776),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',780),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',781),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',788),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaparser.py',792),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',793),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaparser.py',800),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec_attr','lyaparser.py',804),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaparser.py',808),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaparser.py',812),
  ('empty -> <empty>','empty',0,'p_empty','lyaparser.py',818),
]
